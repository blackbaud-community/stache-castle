<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>XPath Guidelines</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33" /><meta name="Description" content="In this walkthrough you'll gain experience creating XPaths to find elements consistently and uniquely within the Enterprise CRM application.." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Blueshirt<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f52e699b-de1d-4242-bd0a-ab85261f9c93.htm" title="Blueshirt" tocid="roottoc">Blueshirt</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d48ef890-924b-44ec-8ce1-856896c0abec.htm" title="Delving Deeper" tocid="d48ef890-924b-44ec-8ce1-856896c0abec">Delving Deeper</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="aa9d7059-e8f6-4e72-a741-a9fa2e5411f0.htm" title="Using the Selenium WebDriver" tocid="aa9d7059-e8f6-4e72-a741-a9fa2e5411f0">Using the Selenium WebDriver</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33.htm" title="XPath Guidelines" tocid="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33">XPath Guidelines</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0990eabd-be52-47c5-8273-0467c26eb79b.htm" title="SpecFlow's Table and TableRow Guidelines" tocid="0990eabd-be52-47c5-8273-0467c26eb79b">SpecFlow's Table and TableRow Guidelines</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4d721943-df97-4c91-aed1-7aeea9372876.htm" title="Setting Custom Fields" tocid="4d721943-df97-4c91-aed1-7aeea9372876">Setting Custom Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/blueshirt_ico.png" /></td><td class="titleColumn">XPath Guidelines</td></tr></table><span class="introStyle"></span><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[This is preliminary documentation and is subject to change.]</p><div class="introduction"><p>
        In this walkthrough you'll gain experience creating XPaths to find elements consistently and uniquely within
        the Enterprise CRM application..
      </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Prerequisites</span></div><div id="ID0RBSection" class="collapsibleSection"><ul><li><p>You have completed the "Using the Selenium WebDriver" walkthrough and have access to an Enterprise CRM application.</p></li><li><p>You understand XML syntax.</p></li><li><p>
              You have read through and familiarized yourself with the concepts at <a href="http://www.toolsqa.com/selenium-webdriver/choosing-effective-xpath/" target="_blank">"Choosing Effective XPaths"</a></p></li></ul></div><div class="collapsibleAreaRegion" id="WalkthroughSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Introduction to XPaths</span></div><div id="ID2RBSection" class="collapsibleSection"><h3 class="procedureSubHeading">Introduction to XPaths</h3><div class="subSection"><ul><li><p>Selenium's WebDriver is what the UAT SDK (Blueshirt) uses interact with the web browser, and XPath is the selection methology
                for finding elements in the browser.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAADAAA_tab1" class="codeSnippetContainerTabSingle">WebDriver search using an XPath selector condition.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAADAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IWebElement someElement = driver.FindElement(By.XPath(String.Format(<span class="highlight-literal">"//button[contains(@class,'linkbutton')]/div[text()='Constituent search']"</span>)));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAADAAA");</script></li><li><p>Web browsers such as Google Chrome provide an ability to view the HTML elements and their heirarchy.</p><div class="mediaNear"><div class="caption">
                  In Chrome right-clicking on a button, link, image, etc. will bring up an options menu with the option to "Inspect element".
                </div><img alt="Inspect Element" src="../media/InspectElement.PNG" /></div><div class="mediaNear"><div class="caption">
                  This will show you the HTML element type, attribute values, and location in the DOM.
                </div><img alt="Highlighted Element" src="../media/HighlightedElement.PNG" /></div></li><li><p>
                  XPaths specify a selector condition that parses the entire DOM returning all matching elements.  While in the Elements
                  Panel of Chrome's Developer Tools, you can bring up a search (Ctrl+F) input to enter an XPath and see the results of an 
                  XPath selector.
                </p><div class="mediaNear"><div class="caption">
                    Entering the XPath "//button[contains(@class,'linkbutton')]/div[text()='Constituent search']" looks for all [div] elements with the text 'Constituent search' that
                    are direct descendants of a [button] element with a class attribute containing 'linkbutton'.
                  </div><img alt="XPath Multiple Results" src="../media/XPathMultipleResults.PNG" /></div></li><li><p>
                  The above XPath returned multiple matching elements based on the XPath selector condition.  The existing API methods of the UAT 
                  SDK (Blueshirt) accepting an XPath parameter assume the provided XPaths will return a single element.  If you provide a custom
                  or static XPath returning multiple results, it is advised to modify the XPath until a single element is consistently returned.  
                  Common Enterprise CRM XPath selector patterns to aide in finding a single element are discussed in the next section of this 
                  walkthrough.
                </p><div class="mediaNear"><div class="caption">
                    By modifying the XPath selector to "//div[contains(@id,'contentpanel')]/div[contains(@id,'contentpanel') and 
                    not(contains(@class, 'hide-display'))]//button[contains(@class,'task-link')]/div[text()='Constituent search']",
                    we can reduce our matching results to a single element.
                  </div><img alt="XPath Single Result" src="../media/XPathSingleResult.PNG" /></div></li></ul></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enterprise CRM Patterns - Panels</span></div><div id="ID3RBSection" class="collapsibleSection"><h3 class="procedureSubHeading">Enterprise CRM Patterns - Panels</h3><div class="subSection"><ul><li><p>
                  In the above section we used an original and modified XPath to change our matching results.  Let's look at how
                  the modified XPath narrowed our search criteria and understand the differences between the original and modified XPaths.
                </p><div class="mediaNear"><div class="caption">
                    To see how the modified XPath narrows its selection critieria, let's start with the first component of the XPath
                    "//div[contains(@id,'contentpanel')]" and enter that into the search input.  This XPath returns any [div] whose
                    id attribute contains the text 'contentpanel'.  In the image below, we can see that 4 matches are found with the first
                    match highlighted.
                  </div><img alt="CRMRootXPath" src="../media/CRMRootXPath.PNG" /></div><div class="mediaNear"><div class="caption">
                    Look through the matching elements or at the below image.  We can see a single parent div with the id containing
                    'contentpanel'.  We can also see several immediate children elements also containing 'contentpanel' in the id.
                    Hover your mouse over each matching element to what gets highlighted in the browser.
                  </div><img alt="CRMContent Panel" src="../media/CRMContentPanel.PNG" /></div><div class="mediaNear"><div class="caption">
                    When navigating between different areas in the application, CRM stores previous pages in the HTML but marks them as hidden.
                    If the user tries to navigate back to a previously visited panel, the load will be much faster because the panel's
                    components are already stored in the browser.  Notice how only one child 'contentpanel' results in the browser highlighting
                    an element.  The contentpanels not resulting a browser highlight have the 'x-hide-display' test in their class attribute and
                    are not displayed in the browser.
                  </div><img alt="CRMContent Panel Hidden Panels" src="../media/CRMContentPanelHiddenPanels.PNG" /></div><div class="mediaNear"><div class="caption">
                    If we add the second component of the modified XPath to our search so that it reads as
                    "//div[contains(@id,'contentpanel')]/div[contains(@id,'contentpanel') and not(contains(@class, 'hide-display'))]", we
                    only get one result.  Note the single '/' between the first and second componentes of our XPath selector.  This specifies an
                    immediate child instead of any descendant.  Also note how can wan add as much selection criteria as want to to any given
                    element search criteria.
                  </div><img alt="CRMRoot Plus OneXPath" src="../media/CRMRootPlusOneXPath.PNG" /></div></li><li><p>
                  Whenever you are trying to find an element within the panel window of the application, it is best practice to add a
                  search criteria at the beginning of your XPath that narrows the search to the visible 'contentpanel'.  From the visible
                  panel, you can search through descendants to find elements such as a button.
                </p></li></ul></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enterprise CRM Patterns - Dialogs</span></div><div id="ID4RBSection" class="collapsibleSection"><h3 class="procedureSubHeading">Enterprise CRM Patterns - Dialogs</h3><div class="subSection"><ul><li><p>
                  The DOM is a quicksand of every-changing components, but even complicated navigations with multiple dialogs open can be
                  broken down with proper XPath syntax and selection criteria.  Let's look at a bit more seemingly complex of a situation.  In
                  your application start to add a pledge.  If you cannot do so in your application, follow along with the screenshots below.
                </p><div class="mediaNear"><div class="caption">
                    In this initial dialog, we can create a simple enough XPath "//button[text()='Save']" to find the Save button.
                  </div><img alt="Dialog Pledge Save" src="../media/DialogPledgeSave.PNG" /></div><div class="mediaNear"><div class="caption">
                    Let's make things interesting.  In the Constituent dialog, click the search button.
                  </div><img alt="Dialog Constituent Search" src="../media/DialogConstituentSearch.PNG" /></div><div class="mediaNear"><div class="caption">
                    In the search dialog, click the button to add a new individual.
                  </div><img alt="Dialog Search Add Individual" src="../media/DialogSearchAddIndividual.PNG" /></div><div class="mediaNear"><img alt="Dialog First Save" src="../media/DialogFirstSave.PNG" /></div><div class="mediaNear"><div class="caption">
                    If you use the same XPath "//button[text()='Save']" to search for the save button on the individual add dialog, then two
                    results should now be returned.
                  </div><img alt="Dialog Second Save" src="../media/DialogSecondSave.PNG" /></div><div class="mediaNear"><div class="caption">
                    We have to modify our XPath so that only descendant buttons of the top-most dialog will be matched.  To do this we have to
                    find something unique about a parent element of the add an individual save button.  Right-click inspect the Save button
                    element and follow the heirarchy tree up until the selected element highlights the entire dialog.
                  </div><img alt="Dialog Entire Add Dialog" src="../media/DialogEntireAddDialog.PNG" /></div><div class="mediaNear"><div class="caption">
                    The [div] containing all elements in the individual add dialog contains two immediate children.
                    One child [div] contains the Save button we want to click
                  </div><img alt="Dialog Save Bar Add Dialog" src="../media/DialogSaveBarAddDialog.PNG" /></div><div class="mediaNear"><div class="caption">
                    The other child [div] contains the fields of the dialog.
                  </div><img alt="Dialog Field Inputs Add Dialog" src="../media/DialogFieldInputsAddDialog.PNG" /></div><div class="mediaNear"><div class="caption">
                    Digging into the [div] containing the dialog input fields, we come across a [div] with a unique identifier in its id
                    attribute.
                  </div><img alt="Dialog Unique Id" src="../media/DialogUniqueId.PNG" /></div><div class="mediaNear"><div class="caption">
                    Using this unique id, we can construct an XPath
                    "//div[contains(@class,'bbui-dialog') and contains(@style,'visible')]//div[contains(@id,'individualRecordAddDataForm')]"
                    to find the div with this id.
                  </div><img alt="DialogXPath Dialog Unique Id" src="../media/DialogXPathDialogUniqueId.PNG" /></div><div class="mediaNear"><div class="caption">
                    Then we can add additional search criteria to the XPath to find a button with the text "Save" relative to the [div] with
                    the unique id.  Search using the XPath
                    "//div[contains(@class,'bbui-dialog') and contains(@style,'visible')]//div[contains(@id,'individualRecordAddDataForm')]
                    /../../../../../../../..//*[text()="Save"]"  Only 1 match is found!
                  </div><img alt="Dialog FinalXPath" src="../media/DialogFinalXPath.PNG" /></div></li><li><p>
                  The API of the UAT SDK (Blueshirt) provides many XPath constructors for various application components like Panels and
                  Dialogs.  Refer to our API documentation to see exactly what existing XPath constructors are available, what parameters
                  they require, and what type of elements they try and uniquely locate.
                </p></li></ul></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="http://www.toolsqa.com/selenium-webdriver/choosing-effective-xpath/" target="_blank">Introduction to XPaths</a></div></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>