<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Using the Selenium WebDriver</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="aa9d7059-e8f6-4e72-a741-a9fa2e5411f0" /><meta name="Description" content="In this walkthrough you'll learn how to use Selenium's WebDriver and Wait pattern to drive browser interactions." /><meta name="Microsoft.Help.ContentType" content="How To" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Blackbaud UAT Kit<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f52e699b-de1d-4242-bd0a-ab85261f9c93.htm" title="Blackbaud UAT Kit" tocid="roottoc">Blackbaud UAT Kit</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d48ef890-924b-44ec-8ce1-856896c0abec.htm" title="Delving Deeper" tocid="d48ef890-924b-44ec-8ce1-856896c0abec">Delving Deeper</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="aa9d7059-e8f6-4e72-a741-a9fa2e5411f0.htm" title="Using the Selenium WebDriver" tocid="aa9d7059-e8f6-4e72-a741-a9fa2e5411f0">Using the Selenium WebDriver</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33.htm" title="XPath Guidelines" tocid="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33">XPath Guidelines</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="0990eabd-be52-47c5-8273-0467c26eb79b.htm" title="SpecFlow's Table and TableRow Guidelines" tocid="0990eabd-be52-47c5-8273-0467c26eb79b">SpecFlow's Table and TableRow Guidelines</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4d721943-df97-4c91-aed1-7aeea9372876.htm" title="Setting Custom Fields" tocid="4d721943-df97-4c91-aed1-7aeea9372876">Setting Custom Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/blueshirt_ico.png" /></td><td class="titleColumn">Using the Selenium WebDriver</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
        In this walkthrough you'll learn how to use Selenium's WebDriver and Wait pattern to drive browser interactions.
      </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Prerequisites</span></div><div id="ID0RBSection" class="collapsibleSection"><ol><li><p>A unit test project with the UAT SDK (Project Blue) NuGet package installed.</p></li><li><p>An Enterprise CRM application is accessible and tests can be run against this application.</p></li><li><p>Familiarity with:</p><ul><li><p>Using the UAT SDK (Project Blue) Custom SpecFlow Plugin for Visual Studio.</p></li><li><p>Creating new feature files.</p></li><li><p>Generating step classes bound to feature files.</p></li><li><p>Accessing the UAT SDK (Blueshirt) Core API.</p></li></ul></li></ol></div><div class="collapsibleAreaRegion" id="WalkthroughSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Create a Custom Interaction Using the WebDriver.</span></div><div id="ID2RBSection" class="collapsibleSection"><h3 class="procedureSubHeading">Navigate to a Functional Area.</h3><div class="subSection"><ol><li><p>Create the Gherkin test and Step method.</p><div class="mediaNear"><div class="caption">Create an unimplemented feature test requiring navigation between functional areas.</div><img alt="Create Not Implemented Gherkin" src="../media/CreateNotImplementedGherkin.PNG" /></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EABADAAABAAA_tab1" class="codeSnippetContainerTabSingle">Generate the failing step class methods.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABADAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EABADAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABADAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Blueshirt.Core.Base;
<span class="highlight-keyword">using</span> TechTalk.SpecFlow;

<span class="highlight-keyword">namespace</span> Delving_Deeper
{
    [Binding]
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> SampleTestsSteps : BaseSteps
    {
        [Given(<span class="highlight-literal">@"I have logged into BBCRM and navigated to functional area "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GivenIHaveLoggedIntoBbcrmAndNavigatedToFunctionalArea(<span class="highlight-keyword">string</span> functionalArea)
        {
            ScenarioContext.Current.Pending();
        }

        [When(<span class="highlight-literal">@"I navigate to functional area "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> WhenINavigateToFunctionalArea(<span class="highlight-keyword">string</span> functionalArea)
        {
            ScenarioContext.Current.Pending();
        }

        [Then(<span class="highlight-literal">@"the panel header caption is "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ThenThePanelHeaderCaptionIs(<span class="highlight-keyword">string</span> headerCaption)
        {
            ScenarioContext.Current.Pending();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABADAAABAAA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAABAAA_tab1" class="codeSnippetContainerTabSingle">Unimplemented custom class.  Build should fail 
                      at this point.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAADAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Given(<span class="highlight-literal">@"I have logged into BBCRM and navigated to functional area "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GivenIHaveLoggedIntoBbcrmAndNavigatedToFunctionalArea(<span class="highlight-keyword">string</span> functionalArea)
{
    BBCRMHomePage.Logon();
    MyCustomBBCrmHomePage.NavigateToFunctionalArea(functionalArea);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAABAAA");</script></li><li><p>Create custom class inheriting BBCRMHomePage</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAACAAABAAA_tab1" class="codeSnippetContainerTabSingle">Create the new custom class and method.  Have the new method throw a NotImplementedException.  
                      The build should succeed now.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAACAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAACAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAACAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> Blueshirt.Core.Crm;

<span class="highlight-keyword">namespace</span> Delving_Deeper
{
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> MyCustomBBCrmHomePage : BBCRMHomePage
    {
        <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> NavigateToFunctionalArea(<span class="highlight-keyword">string</span> caption)
        {
            <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException();
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAACAAABAAA");</script></li><li><p>
                  Implement the custom method. The common pattern employed in the UAT SDK is to wait until a certain condition has been met before proceeding with the next action. The Selenium Webdriver is what allows us to interact with the browser in order to determine whether or not our desired condition has been met.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAFABAAABAAA_tab1" class="codeSnippetContainerTabSingle">Be sure to add the 'OpenQA.Selenium' and 'OpenQA.Selenium.Support.UI' namespace references at the top of your file.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAFABAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAFABAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAFABAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> NavigateToFunctionalArea(<span class="highlight-keyword">string</span> caption)
{
    WebDriverWait navigateWaiter = <span class="highlight-keyword">new</span> WebDriverWait(Driver, TimeSpan.FromSeconds(TimeoutSecs));
    navigateWaiter.IgnoreExceptionTypes(<span class="highlight-keyword">typeof</span>(InvalidOperationException));
    navigateWaiter.Until(driver =&gt;
    {
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException();
    });
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAFABAAABAAA");</script><p>
                  In the above code, we have essentially created a while loop that waits for 'True' to be returned before exiting the loop. Any time 'False' is returned, the loop starts over. We can specify an amount of time that should expire in the loop until a WebDriverTimeoutException will be thrown. Finally we can specify Exception types to ignore in the loop. If exceptions of the specified types are thrown, the resulting action is the equivalent of 'False' being returned at that moment.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EADABAAABAAA_tab1" class="codeSnippetContainerTabSingle">Example of using the WebDriver to find a web element, check a condition on it, and execute a step if the condition has been met.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADABAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EADABAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADABAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">WebDriverWait navigateWaiter = <span class="highlight-keyword">new</span> WebDriverWait(Driver, TimeSpan.FromSeconds(TimeoutSecs));
navigateWaiter.IgnoreExceptionTypes(<span class="highlight-keyword">typeof</span>(InvalidOperationException));
navigateWaiter.Until(driver =&gt;
{
    IWebElement functionalAreaElement = driver.FindElement(<span class="highlight-keyword">null</span>);
    <span class="highlight-keyword">if</span> (!functionalAreaElement.Displayed) <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
    functionalAreaElement.Click();
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADABAAABAAA");</script><p>
                  Above we used the WebDriver (referenced as 'driver' in our lambda method) to find an element on our application and checked a condition on the element. In this instance, we want to check if the element is 'Displayed' before proceeding. If we found the element but it is not visible yet, we can immediately return false because our desired condition has not been met. This will cause the loop to start over, and the web driver will attempt to get a refreshed version of the element. If the element is visible, then we use the WebDriver to send a 'Click' action on it and return true to exit the loop so that the next step method call can begin.
                </p><p>
                  An immediate question might be "How did the WebDriver find the element we wanted?" The WebDriver has an API with different selection methods in order to find elements in your browser application. The UAT SDK (Project Blue) relies on XPaths to parse the HTML elements and find the desired element. More details about XPaths and best practices can be found in the reference links at the end of this article. Suggested Enterprise CRM XPath patterns and examples will be discussed in a later walkthrough. For the moment, update the code driver.FindElement line to the following:
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAABAAABAAA_tab1" class="codeSnippetContainerTabSingle">WebDriver FindElement using an XPath for the selector.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAAABAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">IWebElement functionalAreaElement = driver.FindElement(By.XPath(String.Format(<span class="highlight-literal">"//button[text()='{0}']"</span>, caption)));</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABAAABAAA");</script></li><li><p>Finish Implementing Step Methods</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EADAAAAABAAA_tab1" class="codeSnippetContainerTabSingle">Fully implemented step methods.</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADAAAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EADAAAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADAAAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Given(<span class="highlight-literal">@"I have logged into BBCRM and navigated to functional area "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> GivenIHaveLoggedIntoBbcrmAndNavigatedToFunctionalArea(<span class="highlight-keyword">string</span> functionalArea)
{
    BBCRMHomePage.Logon();
    MyCustomBBCrmHomePage.NavigateToFunctionalArea(functionalArea);
}

[When(<span class="highlight-literal">@"I navigate to functional area "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> WhenINavigateToFunctionalArea(<span class="highlight-keyword">string</span> functionalArea)
{
    MyCustomBBCrmHomePage.NavigateToFunctionalArea(functionalArea);
}

[Then(<span class="highlight-literal">@"the panel header caption is "</span><span class="highlight-literal">"(.*)"</span><span class="highlight-literal">""</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">void</span> ThenThePanelHeaderCaptionIs(<span class="highlight-keyword">string</span> headerCaption)
{
    <span class="highlight-keyword">if</span> (!BaseComponent.Exists(Panel.getXPanelHeaderByText(headerCaption))) 
        FailTest(String.Format(<span class="highlight-literal">"'{0}' was not in the header caption."</span>, headerCaption));
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADAAAAABAAA");</script><div class="mediaNear"><div class="caption">
                    Make sure your app.config is set to run on your accessible application, build the solution,
                    and run the test.
                  </div><img alt="Run Selected Tests" src="../media/RunSelectedTests.PNG" /></div><div class="mediaNear"><div class="caption">
                    The test should pass!
                  </div><img alt="Selected Tests Pass" src="../media/SelectedTestsPass.PNG" /></div><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Tip" /> Tip</th></tr><tr><td><p>
                    The UAT SDK (Project Blue) API provides lots browser interactions that encapsulate different WebDriver logic. Before creating new WebDriver logic, first look into the API to see what functionality is already provided. Hopefully the desired WebDriver logic and XPath constructor are already available from the API.
                  </p></td></tr></table></div></li></ol></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="8f3ad4c4-e6cf-4411-8d1a-7ca773037e33.htm">Enterprise CRM XPath Best Practices</a></div></div></div></div><div id="pageFooter" class="pageFooter" /></body></html>