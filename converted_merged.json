{
	"doc": {
		"assembly": {
			"name": "Blueshirt.Core"
		},
		"members": {
			"member": [
				{
					"name": "T:Blueshirt.Core.Base.BaseComponent",
					"summary": "Base functionality that applies to entire BBCRM and BBIS products for automation.",
					"key": "T_Blueshirt_Core_Base_BaseComponent",
					"filename": "T_Blueshirt_Core_Base_BaseComponent.htm",
					"title": "BaseComponent Class",
					"syntax": [
						{
							"type": "C#",
							"code": "\n                <span class=\"keyword\">public</span>\n                <span class=\"keyword\">class</span>\n                <span class=\"identifier\">BaseComponent</span>\n              "
						},
						{
							"type": "VB",
							"code": "\n                <span class=\"keyword\">Public</span>\n                <span class=\"keyword\">Class</span>\n                <span class=\"identifier\">BaseComponent</span>\n              "
						},
						{
							"type": "C++",
							"code": "\n                <span class=\"keyword\">public</span>\n                <span class=\"keyword\">ref class</span>\n                <span class=\"identifier\">BaseComponent</span>\n              "
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ClickButton",
							"link": "M_Blueshirt_Core_Base_BaseComponent_ClickButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Clicks a basic button. Uniqueness is dependent purely on the caption!"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "ConvertToBool",
							"link": "M_Blueshirt_Core_Base_BaseComponent_ConvertToBool.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Convert the string to a bool value."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "CopyToClipBoard",
							"link": "M_Blueshirt_Core_Base_BaseComponent_CopyToClipBoard.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start a new thread that copies a value to the System's Clipboard and waits for that thread to return."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ElementValueIsNotNullOrEmpty",
							"link": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsNotNullOrEmpty.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait until a displayed element found with the provided xPath does not have a null or empty value If no matching element is found, a WebDriverTimeoutException is thrown."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ElementValueIsSet",
							"link": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsSet.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait until a displayed element found with the provided xPath has the expected value as its text. If no matching element is found with the expected value, a WebDriverTimeoutException is thrown."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Exists",
							"link": "M_Blueshirt_Core_Base_BaseComponent_Exists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks if a displayed element exists using the provided xPath selector."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ExistsNow",
							"link": "M_Blueshirt_Core_Base_BaseComponent_ExistsNow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a displayed element exists immediately using the provided xPath selector."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetDatalistColumnIndex",
							"link": "M_Blueshirt_Core_Base_BaseComponent_GetDatalistColumnIndex.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the xPath for a datalist/grid's headers and the caption of a datalist column, find the index of the column as it relates to the DOM."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetDisplayedElement",
							"link": "M_Blueshirt_Core_Base_BaseComponent_GetDisplayedElement.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get the displayed IWebElement using the provided xPath."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetEnabledElement",
							"link": "M_Blueshirt_Core_Base_BaseComponent_GetEnabledElement.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get the first found IWebElement based on an xPath that is Displayed AND Enabled. If no element is found, a WebDriverTimeoutException is thrown."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXButton",
							"link": "M_Blueshirt_Core_Base_BaseComponent_getXButton.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find a button. Adds no additional constraints other than the caption of the button equalling the provided value."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXMenuItem",
							"link": "M_Blueshirt_Core_Base_BaseComponent_getXMenuItem.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the caption name of a menu item, return a unique identifier xPath to find a menu item."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "MapColumnCaptionsToIndex",
							"link": "M_Blueshirt_Core_Base_BaseComponent_MapColumnCaptionsToIndex.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Create a mapping of the column captions as keys to their DOM index values."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetCheckbox(String, Boolean)",
							"link": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click a checkbox if it is not the desired value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetCheckbox(String, String)",
							"link": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click a checkbox if it is not the desired value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetTextField",
							"link": "M_Blueshirt_Core_Base_BaseComponent_SetTextField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the value of a field by copy pasting the value into the field and sending a Tab keystroke."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "WaitClick(String)",
							"link": "M_Blueshirt_Core_Base_BaseComponent_WaitClick.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Find an element using a provided xPath and click it once it is displayed and enabled."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "WaitClick(String, Double)",
							"link": "M_Blueshirt_Core_Base_BaseComponent_WaitClick_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Find an element using a provided xPath and click it once it is displayed and enabled."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif",
								"../icons/static.gif"
							],
							"name": "Driver",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Driver.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Selenium WebDriver used to interact with the web browser."
						},
						{
							"icons": [
								"../icons/pubproperty.gif",
								"../icons/static.gif"
							],
							"name": "TimeoutSecs",
							"link": "P_Blueshirt_Core_Base_BaseComponent_TimeoutSecs.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "The default WebDriver timeout value represented in seconds."
						},
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"declared",
								"notNetfw"
							],
							"description": ""
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.getXButton(System.String)",
					"summary": "Format an XPath to find a button. Adds no additional constraints other than the caption of the button equalling the provided value.",
					"param": {
						"_": "The caption of the button.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_getXButton",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_getXButton.htm",
					"title": "BaseComponent.getXButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.getXMenuItem(System.String)",
					"summary": "Given the caption name of a menu item, return a unique identifier xPath to find a menu item.",
					"param": {
						"_": "The caption of the functional area.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_getXMenuItem",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_getXMenuItem.htm",
					"title": "BaseComponent.getXMenuItem Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXMenuItem</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXMenuItem</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXMenuItem</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.ConvertToBool(System.String)",
					"summary": "Convert the string to a bool value.",
					"param": {
						"_": "The string to try and convert to a bool.",
						"name": "value"
					},
					"returns": "A bool if successfully converted.  Unrecognized values throw a NotSupportedException",
					"key": "M_Blueshirt_Core_Base_BaseComponent_ConvertToBool",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_ConvertToBool.htm",
					"title": "BaseComponent.ConvertToBool Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConvertToBool</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ConvertToBool</span> ( \r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConvertToBool</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.SetCheckbox(System.String,System.String)",
					"summary": "Click a checkbox if it is not the desired value.",
					"param": [
						{
							"_": "The xPath to use for finding the checkbox INPUT.",
							"name": "xPath"
						},
						{
							"_": "The value to set the checkbox to.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox.htm",
					"title": "BaseComponent.SetCheckbox Method (String, Boolean)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetCheckbox</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetCheckbox</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetCheckbox</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.SetCheckbox(System.String,System.Boolean)",
					"summary": "Click a checkbox if it is not the desired value.",
					"param": [
						{
							"_": "The xPath to use for finding the checkbox INPUT.",
							"name": "xPath"
						},
						{
							"_": "True if the checkbox should be checked, false otherwise.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_SetCheckbox.htm",
					"title": "BaseComponent.SetCheckbox Method (String, Boolean)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetCheckbox</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetCheckbox</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetCheckbox</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.ElementValueIsNotNullOrEmpty(System.String)",
					"summary": "Wait until a displayed element found with the provided xPath does not have a null or empty value If no matching element is found, a WebDriverTimeoutException is thrown.",
					"param": {
						"_": "The xPath to use for finding an element.",
						"name": "xPath"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsNotNullOrEmpty",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsNotNullOrEmpty.htm",
					"title": "BaseComponent.ElementValueIsNotNullOrEmpty Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ElementValueIsNotNullOrEmpty</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ElementValueIsNotNullOrEmpty</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ElementValueIsNotNullOrEmpty</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.ElementValueIsSet(System.String,System.String)",
					"summary": "Wait until a displayed element found with the provided xPath has the expected value as its text. If no matching element is found with the expected value, a WebDriverTimeoutException is thrown.",
					"param": [
						{
							"_": "The xPath to use for finding an element.",
							"name": "xPath"
						},
						{
							"_": "The expected text value of the element.",
							"name": "expectedvalue"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsSet",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_ElementValueIsSet.htm",
					"title": "BaseComponent.ElementValueIsSet Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ElementValueIsSet</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">expectedvalue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ElementValueIsSet</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">expectedvalue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ElementValueIsSet</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">expectedvalue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.ExistsNow(System.String)",
					"summary": "Check if a displayed element exists immediately using the provided xPath selector.",
					"param": {
						"_": "The xPath selector to find an element with.",
						"name": "xPath"
					},
					"returns": "True if a valid element is found immediately, false otherwise.",
					"key": "M_Blueshirt_Core_Base_BaseComponent_ExistsNow",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_ExistsNow.htm",
					"title": "BaseComponent.ExistsNow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ExistsNow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ExistsNow</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ExistsNow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.Exists(System.String,System.Double)",
					"summary": "Checks if a displayed element exists using the provided xPath selector.",
					"param": [
						{
							"_": "The xPath selector to find an element with.",
							"name": "xPath"
						},
						{
							"_": "The time to spend looking for the element.  Defaults to TimeoutSecs.",
							"name": "secondsToWait"
						}
					],
					"returns": "True if a valid element is found within the time to wait, false otherwise.",
					"key": "M_Blueshirt_Core_Base_BaseComponent_Exists",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_Exists.htm",
					"title": "BaseComponent.Exists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">Exists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">secondsToWait</span> = -1\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">Exists</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">secondsToWait</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Double</span> = -1\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">Exists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">secondsToWait</span> = -1\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.GetDisplayedElement(System.String,System.Double)",
					"summary": "Get the displayed IWebElement using the provided xPath.",
					"param": [
						{
							"_": "The xPath selector to find an element with.",
							"name": "xPath"
						},
						{
							"_": "The amount of time to search for the a valid element.  Default time is TimeoutSecs.",
							"name": "waitTime"
						}
					],
					"returns": "An IWebElement if a valid element is found. A WebDriverTimeoutException is thrown is no element is found.",
					"key": "M_Blueshirt_Core_Base_BaseComponent_GetDisplayedElement",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_GetDisplayedElement.htm",
					"title": "BaseComponent.GetDisplayedElement Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">IWebElement</span> <span class=\"identifier\">GetDisplayedElement</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">waitTime</span> = -1\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetDisplayedElement</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">waitTime</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Double</span> = -1\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">IWebElement</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">IWebElement</span>^ <span class=\"identifier\">GetDisplayedElement</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">waitTime</span> = -1\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.MapColumnCaptionsToIndex(System.Collections.Generic.ICollection{System.String},System.String)",
					"summary": "Create a mapping of the column captions as keys to their DOM index values.",
					"param": [
						{
							"_": "The list of captions to map.",
							"name": "captions"
						},
						{
							"_": "An xPath to get a parent element of the desired TR header columns.",
							"name": "headersxPath"
						}
					],
					"returns": "Mapping of column captions to an index.",
					"key": "M_Blueshirt_Core_Base_BaseComponent_MapColumnCaptionsToIndex",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_MapColumnCaptionsToIndex.htm",
					"title": "BaseComponent.MapColumnCaptionsToIndex Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"identifier\">MapColumnCaptionsToIndex</span>(\r\n\t<span class=\"identifier\">ICollection</span>&lt;<span class=\"identifier\">string</span>&gt; <span class=\"parameter\">captions</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">headersxPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">MapColumnCaptionsToIndex</span> ( \r\n\t<span class=\"parameter\">captions</span> <span class=\"keyword\">As</span> <span class=\"identifier\">ICollection</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">headersxPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"identifier\">MapColumnCaptionsToIndex</span>(\r\n\t<span class=\"identifier\">ICollection</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">captions</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">headersxPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.GetDatalistColumnIndex(System.String,System.String)",
					"summary": "Given the xPath for a datalist/grid's headers and the caption of a datalist column, find the index of the column as it relates to the DOM.",
					"param": [
						{
							"_": "Unique xPath for getting the TR column header row.",
							"name": "headersxPath"
						},
						{
							"_": "The caption of the section's datalist column whose index to find.",
							"name": "columnCaption"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_GetDatalistColumnIndex",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_GetDatalistColumnIndex.htm",
					"title": "BaseComponent.GetDatalistColumnIndex Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetDatalistColumnIndex</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">headersxPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">columnCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetDatalistColumnIndex</span> ( \r\n\t<span class=\"parameter\">headersxPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">columnCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetDatalistColumnIndex</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">headersxPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">columnCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.GetEnabledElement(System.String,System.Double)",
					"summary": "Get the first found IWebElement based on an xPath that is Displayed AND Enabled. If no element is found, a WebDriverTimeoutException is thrown.",
					"param": [
						{
							"_": "The xPath selector to find an element with.",
							"name": "xPath"
						},
						{
							"_": "The amount of time to search for the a valid element.  Default time is TimeoutSecs.",
							"name": "waitTime"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_GetEnabledElement",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_GetEnabledElement.htm",
					"title": "BaseComponent.GetEnabledElement Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">IWebElement</span> <span class=\"identifier\">GetEnabledElement</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">waitTime</span> = -1\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetEnabledElement</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">waitTime</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Double</span> = -1\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">IWebElement</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">IWebElement</span>^ <span class=\"identifier\">GetEnabledElement</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">double</span> <span class=\"parameter\">waitTime</span> = -1\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.ClickButton(System.String)",
					"summary": "Clicks a basic button. Uniqueness is dependent purely on the caption!",
					"param": {
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_ClickButton",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_ClickButton.htm",
					"title": "BaseComponent.ClickButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ClickButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.WaitClick(System.String,System.Double)",
					"summary": "Find an element using a provided xPath and click it once it is displayed and enabled.",
					"param": [
						{
							"_": "The xPath to find the element by.",
							"name": "xPath"
						},
						{
							"_": "The amount of time to try and find a displayed and enabled element to click\r\n            before throwing a WebDriverTimeoutException.",
							"name": "timeout"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_WaitClick",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_WaitClick.htm",
					"title": "BaseComponent.WaitClick Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitClick</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">WaitClick</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitClick</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.WaitClick(System.String)",
					"summary": "Find an element using a provided xPath and click it once it is displayed and enabled.",
					"param": {
						"_": "The xPath to find the element by.",
						"name": "xPath"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_WaitClick",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_WaitClick.htm",
					"title": "BaseComponent.WaitClick Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitClick</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">WaitClick</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitClick</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.CopyToClipBoard(System.String)",
					"summary": "Start a new thread that copies a value to the System's Clipboard and waits for that thread to return.",
					"param": {
						"_": "The value to copy to the clipboard.",
						"name": "value"
					},
					"key": "M_Blueshirt_Core_Base_BaseComponent_CopyToClipBoard",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_CopyToClipBoard.htm",
					"title": "BaseComponent.CopyToClipBoard Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyToClipBoard</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CopyToClipBoard</span> ( \r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyToClipBoard</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseComponent.SetTextField(System.String,System.String)",
					"summary": "Set the value of a field by copy pasting the value into the field and sending a Tab keystroke.",
					"param": [
						{
							"_": "The xPath to find an element for setting the value to.",
							"name": "xPath"
						},
						{
							"_": "The desired value of the element.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Base_BaseComponent_SetTextField",
					"filename": "M_Blueshirt_Core_Base_BaseComponent_SetTextField.htm",
					"title": "BaseComponent.SetTextField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetTextField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetTextField</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetTextField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "P:Blueshirt.Core.Base.BaseComponent.TimeoutSecs",
					"summary": "The default WebDriver timeout value represented in seconds.",
					"key": "P_Blueshirt_Core_Base_BaseComponent_TimeoutSecs",
					"filename": "P_Blueshirt_Core_Base_BaseComponent_TimeoutSecs.htm",
					"title": "BaseComponent.TimeoutSecs Property ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">TimeoutSecs</span> { <span class=\"keyword\">get</span>; }"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> <span class=\"identifier\">TimeoutSecs</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n\t<span class=\"keyword\">Get</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">property</span> <span class=\"identifier\">int</span> <span class=\"identifier\">TimeoutSecs</span> {\r\n\t<span class=\"identifier\">int</span> <span class=\"keyword\">get</span> ();\r\n}"
						}
					]
				},
				{
					"name": "P:Blueshirt.Core.Base.BaseComponent.Driver",
					"summary": "Selenium WebDriver used to interact with the web browser.",
					"key": "P_Blueshirt_Core_Base_BaseComponent_Driver",
					"filename": "P_Blueshirt_Core_Base_BaseComponent_Driver.htm",
					"title": "BaseComponent.Driver Property ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">IWebDriver</span> <span class=\"identifier\">Driver</span> { <span class=\"keyword\">get</span>; }"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"keyword\">Property</span> <span class=\"identifier\">Driver</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IWebDriver</span>\r\n\t<span class=\"keyword\">Get</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">property</span> <span class=\"identifier\">IWebDriver</span>^ <span class=\"identifier\">Driver</span> {\r\n\t<span class=\"identifier\">IWebDriver</span>^ <span class=\"keyword\">get</span> ();\r\n}"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Base.FieldType",
					"summary": "Represents the various type of fields with supported setter utility methods.",
					"key": "T_Blueshirt_Core_Base_FieldType",
					"filename": "T_Blueshirt_Core_Base_FieldType.htm",
					"title": "FieldType Enumeration",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"identifier\">FieldType</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Enumeration</span> <span class=\"identifier\">FieldType</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">enum class</span> <span class=\"identifier\">FieldType</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.TextInput",
					"summary": "\r\n            An input text field.  This should also be used for grid cells that are text fields.\r\n            "
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.TextArea",
					"summary": "\r\n            A textarea text field.\r\n            "
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.Dropdown",
					"summary": "\r\n            A dropdown field.\r\n            "
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.Searchlist",
					"summary": "\r\n            A searchlist field.\r\n            "
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.Checkbox",
					"summary": "\r\n            A checkbox or radiobox field.\r\n            "
				},
				{
					"name": "F:Blueshirt.Core.Base.FieldType.TextIframe",
					"summary": "\r\n            An IFrame text field.\r\n            "
				},
				{
					"name": "T:Blueshirt.Core.Base.CrmField",
					"summary": "Wrapper class to encapsulate a field caption with a field type, unique element id, and search dialog ids when required.",
					"key": "T_Blueshirt_Core_Base_CrmField",
					"filename": "T_Blueshirt_Core_Base_CrmField.htm",
					"title": "CrmField Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">CrmField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">CrmField</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">CrmField</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.CrmField.Id",
					"summary": "The unique Id contained in the id attribute. i.e. '_CONSTITUENTID_value'",
					"key": "F_Blueshirt_Core_Base_CrmField_Id",
					"filename": "F_Blueshirt_Core_Base_CrmField_Id.htm",
					"title": "CrmField.Id Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span> <span class=\"identifier\">Id</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">Id</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">initonly</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">Id</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.CrmField.CellType",
					"summary": "The type of field. Used to associate the field with a setter utility method.",
					"key": "F_Blueshirt_Core_Base_CrmField_CellType",
					"filename": "F_Blueshirt_Core_Base_CrmField_CellType.htm",
					"title": "CrmField.CellType Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">FieldType</span> <span class=\"identifier\">CellType</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">CellType</span> <span class=\"keyword\">As</span> <span class=\"identifier\">FieldType</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">initonly</span> <span class=\"identifier\">FieldType</span> <span class=\"identifier\">CellType</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.CrmField.SearchDialogId",
					"summary": "The unique id of the search dialog that would appear upon clicking the search icon of the associated grid cell. i.e. 'DesignationSearch' Used for fields associated with 'BatchGridCellType.Searchlist'.",
					"key": "F_Blueshirt_Core_Base_CrmField_SearchDialogId",
					"filename": "F_Blueshirt_Core_Base_CrmField_SearchDialogId.htm",
					"title": "CrmField.SearchDialogId Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span> <span class=\"identifier\">SearchDialogId</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SearchDialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">initonly</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">SearchDialogId</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.CrmField.SearchDialogFieldId",
					"summary": "The unique id of the search dialog field that would appear upon clicking the search icon of the associated grid cell. i.e. 'COMBINEDSEARCH' Used for fields associated with 'BatchGridCellType.Searchlist'.",
					"key": "F_Blueshirt_Core_Base_CrmField_SearchDialogFieldId",
					"filename": "F_Blueshirt_Core_Base_CrmField_SearchDialogFieldId.htm",
					"title": "CrmField.SearchDialogFieldId Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span> <span class=\"identifier\">SearchDialogFieldId</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SearchDialogFieldId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">initonly</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">SearchDialogFieldId</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.CrmField.#ctor(System.String,Blueshirt.Core.Base.FieldType)",
					"summary": "\r\n            Set the field id and associated setter utility method.\r\n            ",
					"param": [
						{
							"_": "The unique Id contained in the id attribute.  i.e. '_CONSTITUENTID_value'",
							"name": "id"
						},
						{
							"_": "The type of grid cell.  Used to associate the cell with a setter utility method.",
							"name": "cellType"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.CrmField.#ctor(System.String,Blueshirt.Core.Base.FieldType,System.String,System.String)",
					"summary": "\r\n            Set the batch column id and associated setter utility method.  To only be used\r\n            with grid cells where the value should be set using a searchlist.\r\n            ",
					"param": [
						{
							"_": "The unique Id contained in the class attribute.  i.e. '_CONSTITUENTID_value'",
							"name": "id"
						},
						{
							"_": "The type of grid cell.  Used to associate the cell with a setter utility method.",
							"name": "cellType"
						},
						{
							"_": "The unique id of the search dialog that would appear upon clicking the search icon of\r\n            the associated grid cell.  i.e. 'DesignationSearch'",
							"name": "searchDialogId"
						},
						{
							"_": "The unique id of the search dialog field that would appear upon clicking the search icon of\r\n            the associated grid cell.  i.e. 'COMBINEDSEARCH'",
							"name": "searchDialogFieldId"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Base.BaseSteps",
					"summary": "Base class for Specflow Step classes. Provides access to common functionality in step classes.",
					"key": "T_Blueshirt_Core_Base_BaseSteps",
					"filename": "T_Blueshirt_Core_Base_BaseSteps.htm",
					"title": "BaseSteps Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">BaseSteps</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">BaseSteps</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">BaseSteps</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "FailTest",
							"link": "M_Blueshirt_Core_Base_BaseSteps_FailTest.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Fail a test by throwing a SpecFlowException with the provided message"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Base.BaseSteps.uniqueStamp",
					"summary": "Time stamp that should be static for all test step definitions in a single test",
					"key": "F_Blueshirt_Core_Base_BaseSteps_uniqueStamp",
					"filename": "F_Blueshirt_Core_Base_BaseSteps_uniqueStamp.htm",
					"title": "BaseSteps.uniqueStamp Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">uniqueStamp</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">uniqueStamp</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">uniqueStamp</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Base.BaseSteps.FailTest(System.String)",
					"summary": "Fail a test by throwing a SpecFlowException with the provided message",
					"param": {
						"_": "The message to output with the SpecFlowException",
						"name": "errorMessage"
					},
					"key": "M_Blueshirt_Core_Base_BaseSteps_FailTest",
					"filename": "M_Blueshirt_Core_Base_BaseSteps_FailTest.htm",
					"title": "BaseSteps.FailTest Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">FailTest</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">errorMessage</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">FailTest</span> ( \r\n\t<span class=\"parameter\">errorMessage</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">FailTest</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">errorMessage</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.CommitmentsDialog",
					"summary": "Class to handle the interactions for adding/editing a commitments dialog.",
					"key": "T_Blueshirt_Core_Crm_CommitmentsDialog",
					"filename": "T_Blueshirt_Core_Crm_CommitmentsDialog.htm",
					"title": "CommitmentsDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">CommitmentsDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">CommitmentsDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">CommitmentsDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetAdditionalApplicationsGridRows",
							"link": "M_Blueshirt_Core_Crm_CommitmentsDialog_SetAdditionalApplicationsGridRows.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the grid rows for the Additional applications grid starting with the first row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.Dialog",
					"summary": "Base class to handle the interactions for dialogs.",
					"key": "T_Blueshirt_Core_Crm_Dialog",
					"filename": "T_Blueshirt_Core_Crm_Dialog.htm",
					"title": "Dialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">Dialog</span> : <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">Dialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">Dialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BaseComponent</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Cancel",
							"link": "M_Blueshirt_Core_Crm_Dialog_Cancel.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Cancel' button"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ClickButton(String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_ClickButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click a dialog button."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ClickButton(String, Double)",
							"link": "M_Blueshirt_Core_Crm_Dialog_ClickButton_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click a dialog button."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ClickButton(String, String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_ClickButton_2.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click a button that has a new dialog appear. Continuely click the button until the new dialog appears."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DropdownValueExists",
							"link": "M_Blueshirt_Core_Crm_Dialog_DropdownValueExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a value exists as a selectable item in a dropdown list."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetDialogId",
							"link": "M_Blueshirt_Core_Crm_Dialog_GetDialogId.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait for a dialog to appear that has a unique is in the provided list of ids and return the matching id."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXButton",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format a unique xPath identifier to find a button on a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXCloseX",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXCloseX.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an xPath for the close Window [X] on the Dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDialogButton(String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text. Uniqueness depends on the text passed."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDialogButton(String, String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath for finding a dialog's button."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDialogByClass",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDialogByClass.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to get a dialog based on an value contained in the class attribute of the root dialog DIV."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDialogById",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDialogById.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to get a dialog based on its unique id."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDiv",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDiv.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and div, return a unique identifier xPath to find the DIV field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDropdownArrow",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDropdownArrow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an xPath for the arrow dropdown of a dropdown INPUT field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDropdownItem",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXDropdownItem.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an xPath for a dropdown item."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXEntireDialogButton",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXEntireDialogButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath for finding a dialog's button including the common bottom bar that contains buttons such as Save, Close, and Cancel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridCell",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXGridCell.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats the unique xPath for getting a single grid TD element that belongs to a specified row and columun in a grid on a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridHeaders",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXGridHeaders.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats the unique xPath for getting the TR row header element that belongs to a grid on a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridRow",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXGridRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats the unique xPath for getting a single grid row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridRowSelector",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXGridRowSelector.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format the unique xPath for selecting a single grid row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXIFrame",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXIFrame.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and div, return a unique identifier xPath to find the IFRAME field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXInput",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXInput.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and input, return a unique identifier xPath to find the INPUT field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXInputNewFormTrigger",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXInputNewFormTrigger.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to find the new-form trigger button associated with an input field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXInputSearchTrigger",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXInputSearchTrigger.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to find the search trigger button associated with an input field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXLinkByAction",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXLinkByAction.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to find a link on the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXLinkByCaption",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXLinkByCaption.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to find a link on the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSpan",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXSpan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and span, return a unique identifier xPath to find the SPAN field."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTab(String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXTab.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format a unique xPath for a tab on a dialog."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTab(String, String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXTab_1.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format a unique xPath for a tab on a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTextArea",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXTextArea.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and textarea, return a unique identifier xPath to find the TEXTAREA field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXVisibleDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_getXVisibleDialog.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to get a visible dialog."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OK",
							"link": "M_Blueshirt_Core_Crm_Dialog_OK.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'OK' button"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenTab(String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_OpenTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the tab of a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenTab(String, String)",
							"link": "M_Blueshirt_Core_Crm_Dialog_OpenTab_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the tab of a dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Save",
							"link": "M_Blueshirt_Core_Crm_Dialog_Save.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Save' button"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetDropDown",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetDropDown.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a Dropdown field. WebDriverTimeoutException is thrown if no value is found."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetField",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set any supported field's value for any supported field type."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields(String, TableRow, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set all supported and displayed field values for any supported field type."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields(String, TableRow, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetFields_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set all supported and displayed field values for any supported field type."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridDropDown",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridDropDown.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a Grid cell's value for a dropdown field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRow(String, String, TableRow, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a single row's values for a grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRow(String, String, TableRow, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridRow_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a single row's values for a grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRows(String, String, Table, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridRows.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the row values for a grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRows(String, String, Table, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_25?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_27?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_28?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridRows_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the row values for a grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridSearchList",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridSearchList.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a grid cell's value using the searchlist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridTextField",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetGridTextField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a Grid cell's value for a text field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetHtmlField",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetHtmlField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set an IFrame HTML field's value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetSearchList",
							"link": "M_Blueshirt_Core_Crm_Dialog_SetSearchList.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a field's value using the associated search dialog to the first found item in the search results."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Yes",
							"link": "M_Blueshirt_Core_Crm_Dialog_Yes.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Yes' button"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXTabStrip",
					"summary": "Constant xPath for the tab strip of a dialog.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXTabStrip",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXTabStrip.htm",
					"title": "Dialog.getXTabStrip Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTabStrip</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXTabStrip</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTabStrip</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXGridEditCellSearchlist",
					"summary": "Constant xPath for the searchlist icon of a grid's edit cell.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCellSearchlist",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCellSearchlist.htm",
					"title": "Dialog.getXGridEditCellSearchlist Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridEditCellSearchlist</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXGridEditCellSearchlist</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridEditCellSearchlist</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXGridEditCellDropdownArrow",
					"summary": "Constant xPath for the dropdown arrow of a grid's edit cell.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCellDropdownArrow",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCellDropdownArrow.htm",
					"title": "Dialog.getXGridEditCellDropdownArrow Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridEditCellDropdownArrow</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXGridEditCellDropdownArrow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridEditCellDropdownArrow</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXGridEditCell",
					"summary": "The unique xPath for the input of the currently selected cell in a Grid. When a grid cell is selected, an HTML edit input is created where the actual value should be set.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCell",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXGridEditCell.htm",
					"title": "Dialog.getXGridEditCell Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridEditCell</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXGridEditCell</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridEditCell</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXGridFocusedEditCell",
					"summary": "The unique xPath for the input of the currently selected cell in a Grid adding the 'focused' criteria NOTE: this is risky to use because the focus attribute is unreliably set and can cause MANY race conditions. The 'focused' criteria is also not always set on the edit cell depending on the approach you went to select a grid cell. When a grid cell is selected, an HTML edit input is created where the actual value should be set.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXGridFocusedEditCell",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXGridFocusedEditCell.htm",
					"title": "Dialog.getXGridFocusedEditCell Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridFocusedEditCell</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXGridFocusedEditCell</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridFocusedEditCell</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXIFrameHtmlBodyP",
					"summary": "Constant xPath for the 'mceContentBody' of an HTML element. This is generally in an IFrame field.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXIFrameHtmlBodyP",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXIFrameHtmlBodyP.htm",
					"title": "Dialog.getXIFrameHtmlBodyP Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXIFrameHtmlBodyP</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXIFrameHtmlBodyP</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXIFrameHtmlBodyP</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXSaveAndCloseButton",
					"summary": "Constant xPath value for finding a 'Save and close' button WebElement.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXSaveAndCloseButton",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXSaveAndCloseButton.htm",
					"title": "Dialog.getXSaveAndCloseButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSaveAndCloseButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXSaveAndCloseButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSaveAndCloseButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXYesButton",
					"summary": "Constant xPath value for finding a 'Yes' button WebElement.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXYesButton",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXYesButton.htm",
					"title": "Dialog.getXYesButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXYesButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXYesButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXYesButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXOKButton",
					"summary": "Constant xPath value for finding an OK button WebElement.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXOKButton",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXOKButton.htm",
					"title": "Dialog.getXOKButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXOKButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXOKButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXOKButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXCancelButton",
					"summary": "Constant xPath value for finding a Cancel button WebElement.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXCancelButton",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXCancelButton.htm",
					"title": "Dialog.getXCancelButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXCancelButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXCancelButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXCancelButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXSaveButton",
					"summary": "Constant xPath value for finding a Save button WebElement.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXSaveButton",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXSaveButton.htm",
					"title": "Dialog.getXSaveButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSaveButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXSaveButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSaveButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXDropdownList",
					"summary": "Constant xPath for the entire visible dropdown list.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXDropdownList",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXDropdownList.htm",
					"title": "Dialog.getXDropdownList Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDropdownList</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXDropdownList</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDropdownList</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialog.getXDropdownListItems",
					"summary": "Constant xPath for all items in the visible dropdown list.",
					"key": "F_Blueshirt_Core_Crm_Dialog_getXDropdownListItems",
					"filename": "F_Blueshirt_Core_Crm_Dialog_getXDropdownListItems.htm",
					"title": "Dialog.getXDropdownListItems Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDropdownListItems</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXDropdownListItems</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDropdownListItems</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXTab(System.String)",
					"summary": "Format a unique xPath for a tab on a dialog.",
					"param": {
						"_": "The caption of the tab.",
						"name": "tabCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXTab",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXTab.htm",
					"title": "Dialog.getXTab Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">tabCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTab</span> ( \r\n\t<span class=\"parameter\">tabCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">tabCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXTab(System.String,System.String)",
					"summary": "Format a unique xPath for a tab on a dialog.",
					"param": [
						{
							"_": "The caption of the tab.",
							"name": "tabCaption"
						},
						{
							"_": "The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXTab",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXTab.htm",
					"title": "Dialog.getXTab Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">tabCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTab</span> ( \r\n\t<span class=\"parameter\">tabCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">tabCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.OpenTab(System.String)",
					"summary": "Open the tab of a dialog.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_OpenTab",
					"filename": "M_Blueshirt_Core_Crm_Dialog_OpenTab.htm",
					"title": "Dialog.OpenTab Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.OpenTab(System.String,System.String)",
					"summary": "Open the tab of a dialog.",
					"param": [
						{
							"_": "The caption of the tab.",
							"name": "caption"
						},
						{
							"_": "The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_OpenTab",
					"filename": "M_Blueshirt_Core_Crm_Dialog_OpenTab.htm",
					"title": "Dialog.OpenTab Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXCloseX",
					"summary": "Returns an xPath for the close Window [X] on the Dialog.",
					"key": "M_Blueshirt_Core_Crm_Dialog_getXCloseX",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXCloseX.htm",
					"title": "Dialog.getXCloseX Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXCloseX</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXCloseX</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXCloseX</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDialogButton(System.String)",
					"summary": "Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text. Uniqueness depends on the text passed.",
					"param": {
						"_": "The text of the required button.",
						"name": "buttonText"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton.htm",
					"title": "Dialog.getXDialogButton Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDialogButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">buttonText</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDialogButton</span> ( \r\n\t<span class=\"parameter\">buttonText</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDialogButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">buttonText</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXEntireDialogButton(System.String,System.String)",
					"summary": "Format an xPath for finding a dialog's button including the common bottom bar that contains buttons such as Save, Close, and Cancel.",
					"param": [
						{
							"_": "The caption of the button.",
							"name": "buttonText"
						},
						{
							"_": "The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXEntireDialogButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXEntireDialogButton.htm",
					"title": "Dialog.getXEntireDialogButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXEntireDialogButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">buttonText</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXEntireDialogButton</span> ( \r\n\t<span class=\"parameter\">buttonText</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXEntireDialogButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">buttonText</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDialogButton(System.String,System.String)",
					"summary": "Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text. Uniqueness depends on the text passed.",
					"param": [
						{
							"_": "The caption of the button.",
							"name": "buttonText"
						},
						{
							"_": "The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDialogButton.htm",
					"title": "Dialog.getXDialogButton Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDialogButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">buttonText</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDialogButton</span> ( \r\n\t<span class=\"parameter\">buttonText</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDialogButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">buttonText</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXGridCell(System.String,System.String,System.Int32,System.Int32)",
					"summary": "Formats the unique xPath for getting a single grid TD element that belongs to a specified row and columun in a grid on a dialog.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'",
							"name": "gridId"
						},
						{
							"_": "Row number to use.  Counting starts at 1",
							"name": "row"
						},
						{
							"_": "Column index to use.  Column indexing does NOT always start at 1 or 0 as columns can be hidden.",
							"name": "columnIndex"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXGridCell",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXGridCell.htm",
					"title": "Dialog.getXGridCell Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridCell</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridCell</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridCell</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXGridRow(System.String,System.String,System.Int32)",
					"summary": "Formats the unique xPath for getting a single grid row.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'",
							"name": "gridId"
						},
						{
							"_": "Row number to use.  Counting starts at 1",
							"name": "row"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXGridRow",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXGridRow.htm",
					"title": "Dialog.getXGridRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridRow</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXGridRowSelector(System.String,System.String,System.Int32)",
					"summary": "Format the unique xPath for selecting a single grid row.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'",
							"name": "gridId"
						},
						{
							"_": "Row number to use.  Counting starts at 1",
							"name": "row"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXGridRowSelector",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXGridRowSelector.htm",
					"title": "Dialog.getXGridRowSelector Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridRowSelector</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridRowSelector</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridRowSelector</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXGridHeaders(System.String,System.String)",
					"summary": "Formats the unique xPath for getting the TR row header element that belongs to a grid on a dialog.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'",
							"name": "gridId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXGridHeaders",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXGridHeaders.htm",
					"title": "Dialog.getXGridHeaders Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridHeaders</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridHeaders</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridHeaders</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXIFrame(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and div, return a unique identifier xPath to find the IFRAME field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The DIV element's unique id identifier - i.e. 'HTMLNOTE'",
							"name": "divId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXIFrame",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXIFrame.htm",
					"title": "Dialog.getXIFrame Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXIFrame</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">divId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXIFrame</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">divId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXIFrame</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">divId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXLinkByAction(System.String,System.String)",
					"summary": "Format an xPath to find a link on the dialog.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The unique id associated with the link - i.e. 'SPLITSACTION'",
							"name": "linkId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXLinkByAction",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXLinkByAction.htm",
					"title": "Dialog.getXLinkByAction Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXLinkByAction</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">linkId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXLinkByAction</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">linkId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXLinkByAction</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">linkId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXLinkByCaption(System.String,System.String)",
					"summary": "Format an xPath to find a link on the dialog.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "'The caption/text of the link.",
							"name": "caption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXLinkByCaption",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXLinkByCaption.htm",
					"title": "Dialog.getXLinkByCaption Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXLinkByCaption</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXLinkByCaption</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXLinkByCaption</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDiv(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and div, return a unique identifier xPath to find the DIV field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'PledgeAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The 'a' link element's unique id identifier - i.e. 'SHOWSYSTEM'",
							"name": "divId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDiv",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDiv.htm",
					"title": "Dialog.getXDiv Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDiv</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">divId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDiv</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">divId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDiv</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">divId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXTextArea(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and textarea, return a unique identifier xPath to find the TEXTAREA field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The TEXTAREA element's unique id identifier - i.e. '_DESCRIPTION_value'",
							"name": "textAreaId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXTextArea",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXTextArea.htm",
					"title": "Dialog.getXTextArea Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTextArea</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">textAreaId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTextArea</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">textAreaId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTextArea</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">textAreaId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXButton(System.String,System.String)",
					"summary": "Format a unique xPath identifier to find a button on a dialog.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. 'EventManagementTemplateAddDataForm'",
							"name": "dialogId"
						},
						{
							"_": "The caption of the button.",
							"name": "buttonCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXButton.htm",
					"title": "Dialog.getXButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">buttonCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXButton</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">buttonCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">buttonCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXSpan(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and span, return a unique identifier xPath to find the SPAN field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'",
							"name": "dialogId"
						},
						{
							"_": "The SPAN element's unique id identifier - i.e. '_LOCATION_value'",
							"name": "spanId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXSpan",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXSpan.htm",
					"title": "Dialog.getXSpan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSpan</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">spanId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSpan</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">spanId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSpan</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">spanId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXInput(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and input, return a unique identifier xPath to find the INPUT field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The INPUT element's unique id identifier - i.e. '_LASTNAME_value'",
							"name": "inputId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_getXInput",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXInput.htm",
					"title": "Dialog.getXInput Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXInput</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">inputId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXInput</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">inputId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXInput</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">inputId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXInputSearchTrigger(System.String)",
					"summary": "Format an xPath to find the search trigger button associated with an input field.",
					"param": {
						"_": "The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\r\n            the xPath.",
						"name": "dialogInputXPath"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXInputSearchTrigger",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXInputSearchTrigger.htm",
					"title": "Dialog.getXInputSearchTrigger Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXInputSearchTrigger</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogInputXPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXInputSearchTrigger</span> ( \r\n\t<span class=\"parameter\">dialogInputXPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXInputSearchTrigger</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogInputXPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXInputNewFormTrigger(System.String)",
					"summary": "Format an xPath to find the new-form trigger button associated with an input field.",
					"param": {
						"_": "The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\r\n            the xPath.",
						"name": "dialogInputXPath"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXInputNewFormTrigger",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXInputNewFormTrigger.htm",
					"title": "Dialog.getXInputNewFormTrigger Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXInputNewFormTrigger</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogInputXPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXInputNewFormTrigger</span> ( \r\n\t<span class=\"parameter\">dialogInputXPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXInputNewFormTrigger</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogInputXPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXVisibleDialog",
					"summary": "Format an xPath to get a visible dialog.",
					"key": "M_Blueshirt_Core_Crm_Dialog_getXVisibleDialog",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXVisibleDialog.htm",
					"title": "Dialog.getXVisibleDialog Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXVisibleDialog</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXVisibleDialog</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXVisibleDialog</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDialogById(System.String)",
					"summary": "Format an xPath to get a dialog based on its unique id.",
					"param": {
						"_": "The dialog's unique id identifier - i.e. 'FundraisingSearch'",
						"name": "dialogId"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDialogById",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDialogById.htm",
					"title": "Dialog.getXDialogById Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDialogById</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDialogById</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDialogById</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDialogByClass(System.String)",
					"summary": "Format an xPath to get a dialog based on an value contained in the class attribute of the root dialog DIV.",
					"param": {
						"_": "The value to see if contained in the class attribute.",
						"name": "classValue"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDialogByClass",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDialogByClass.htm",
					"title": "Dialog.getXDialogByClass Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDialogByClass</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">classValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDialogByClass</span> ( \r\n\t<span class=\"parameter\">classValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDialogByClass</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">classValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.Yes",
					"summary": "Click the 'Yes' button",
					"key": "M_Blueshirt_Core_Crm_Dialog_Yes",
					"filename": "M_Blueshirt_Core_Crm_Dialog_Yes.htm",
					"title": "Dialog.Yes Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Yes</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Yes</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Yes</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.OK",
					"summary": "Click the 'OK' button",
					"key": "M_Blueshirt_Core_Crm_Dialog_OK",
					"filename": "M_Blueshirt_Core_Crm_Dialog_OK.htm",
					"title": "Dialog.OK Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OK</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OK</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OK</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.Cancel",
					"summary": "Click the 'Cancel' button",
					"key": "M_Blueshirt_Core_Crm_Dialog_Cancel",
					"filename": "M_Blueshirt_Core_Crm_Dialog_Cancel.htm",
					"title": "Dialog.Cancel Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Cancel</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Cancel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Cancel</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.Save",
					"summary": "Click the 'Save' button",
					"key": "M_Blueshirt_Core_Crm_Dialog_Save",
					"filename": "M_Blueshirt_Core_Crm_Dialog_Save.htm",
					"title": "Dialog.Save Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Save</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDropdownItem(System.String)",
					"summary": "Formats an xPath for a dropdown item.",
					"param": {
						"_": "The caption value of the dropdown list item.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDropdownItem",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDropdownItem.htm",
					"title": "Dialog.getXDropdownItem Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDropdownItem</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDropdownItem</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDropdownItem</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.getXDropdownArrow(System.String)",
					"summary": "Formats an xPath for the arrow dropdown of a dropdown INPUT field.",
					"param": {
						"_": "The xPath of the dropdown.  Advised to use Dialog.getXInput()",
						"name": "dropdownxPath"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_getXDropdownArrow",
					"filename": "M_Blueshirt_Core_Crm_Dialog_getXDropdownArrow.htm",
					"title": "Dialog.getXDropdownArrow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDropdownArrow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dropdownxPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDropdownArrow</span> ( \r\n\t<span class=\"parameter\">dropdownxPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDropdownArrow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dropdownxPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.DropdownValueExists(System.String,System.String)",
					"summary": "Check if a value exists as a selectable item in a dropdown list.",
					"param": [
						{
							"_": "The xPath of the dropdown.  Advised to use Dialog.getXInput()",
							"name": "xPath"
						},
						{
							"_": "The value to check for as an option in the dropdown.",
							"name": "value"
						}
					],
					"returns": "True if the value is an option, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Dialog_DropdownValueExists",
					"filename": "M_Blueshirt_Core_Crm_Dialog_DropdownValueExists.htm",
					"title": "Dialog.DropdownValueExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DropdownValueExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">DropdownValueExists</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DropdownValueExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetHtmlField(System.String,System.String)",
					"summary": "Set an IFrame HTML field's value.",
					"param": [
						{
							"_": "The xPath of the IFrame.  Advised to use Dialog.getXIFrame()",
							"name": "xPath"
						},
						{
							"_": "The value to set in the HTML body of the IFrame.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetHtmlField",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetHtmlField.htm",
					"title": "Dialog.SetHtmlField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetHtmlField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetHtmlField</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetHtmlField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span> = L&quot;&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetDropDown(System.String,System.String)",
					"summary": "Set a Dropdown field. WebDriverTimeoutException is thrown if no value is found.",
					"param": [
						{
							"_": "The xPath to find the dropdown INPUT element with",
							"name": "xPath"
						},
						{
							"_": "The value to set the dropdown to.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetDropDown",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetDropDown.htm",
					"title": "Dialog.SetDropDown Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDropDown</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetDropDown</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDropDown</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span> = L&quot;&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridSearchList(System.String,System.String,System.String)",
					"summary": "Set a grid cell's value using the searchlist.",
					"param": [
						{
							"_": "The xPath of the grid cell TD element.",
							"name": "xPath"
						},
						{
							"_": "The xPath of the search dialog's field to set.",
							"name": "searchDialogxPath"
						},
						{
							"_": "The value to set and use as search criteria in the specified search dialog field.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridSearchList",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridSearchList.htm",
					"title": "Dialog.SetGridSearchList Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridSearchList</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">searchDialogxPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridSearchList</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">searchDialogxPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridSearchList</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">searchDialogxPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridDropDown(System.String,System.String)",
					"summary": "Set a Grid cell's value for a dropdown field.",
					"param": [
						{
							"_": "The xPath of the grid cell TD element.",
							"name": "xPath"
						},
						{
							"_": "The value to set the cell to.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridDropDown",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridDropDown.htm",
					"title": "Dialog.SetGridDropDown Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridDropDown</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridDropDown</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridDropDown</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span> = L&quot;&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridTextField(System.String,System.String)",
					"summary": "Set a Grid cell's value for a text field.",
					"param": [
						{
							"_": "The xPath of the grid cell TD element.",
							"name": "xPath"
						},
						{
							"_": "The value to set the cell to.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridTextField",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridTextField.htm",
					"title": "Dialog.SetGridTextField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridTextField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridTextField</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridTextField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span> = L&quot;&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetSearchList(System.String,System.String,System.String)",
					"summary": "Set a field's value using the associated search dialog to the first found item in the search results.",
					"param": [
						{
							"_": "The xPath of the field to set.",
							"name": "xPath"
						},
						{
							"_": "The xPath of the search dialog's field to set.",
							"name": "searchFieldxPath"
						},
						{
							"_": "The value to set and use as search criteria in the specified search dialog field.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetSearchList",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetSearchList.htm",
					"title": "Dialog.SetSearchList Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSearchList</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">searchFieldxPath</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetSearchList</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">searchFieldxPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSearchList</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">searchFieldxPath</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span> = L&quot;&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.ClickButton(System.String,System.String)",
					"summary": "Click a dialog button.",
					"param": [
						{
							"_": "The caption of the dialog button",
							"name": "caption"
						},
						{
							"_": "The new dialog's unique id identifer. i.e. - 'RevenueBatchConstituentInbatchEditForm' \r\n            If null is provided, then the method waits for a message box dialog that contains no unique id.",
							"name": "dialogId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_ClickButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_ClickButton.htm",
					"title": "Dialog.ClickButton Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ClickButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.ClickButton(System.String,System.Double)",
					"summary": "Click a dialog button.",
					"param": [
						{
							"_": "The caption of the dialog button.",
							"name": "caption"
						},
						{
							"_": "The amount of time to try and find a valid button to click before\r\n            a WebDriverTimeoutException is thrown.",
							"name": "timeout"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_ClickButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_ClickButton.htm",
					"title": "Dialog.ClickButton Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ClickButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.ClickButton(System.String)",
					"summary": "Click a dialog button.",
					"param": {
						"_": "The caption of the dialog button.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Dialog_ClickButton",
					"filename": "M_Blueshirt_Core_Crm_Dialog_ClickButton.htm",
					"title": "Dialog.ClickButton Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ClickButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.GetDialogId(System.Collections.Generic.IEnumerable{System.String})",
					"summary": "Wait for a dialog to appear that has a unique is in the provided list of ids and return the matching id.",
					"param": {
						"_": "A list of ids to wait for.",
						"name": "supportedIds"
					},
					"returns": "The first found matching id for a dialog that is visible with that id.\r\n            If no id is found, a WebDriverTimeoutException is eventually thrown.",
					"key": "M_Blueshirt_Core_Crm_Dialog_GetDialogId",
					"filename": "M_Blueshirt_Core_Crm_Dialog_GetDialogId.htm",
					"title": "Dialog.GetDialogId Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">GetDialogId</span>(\r\n\t<span class=\"identifier\">IEnumerable</span>&lt;<span class=\"identifier\">string</span>&gt; <span class=\"parameter\">supportedIds</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetDialogId</span> ( \r\n\t<span class=\"parameter\">supportedIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IEnumerable</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">GetDialogId</span>(\r\n\t<span class=\"identifier\">IEnumerable</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">supportedIds</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetField(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set any supported field's value for any supported field type.",
					"param": [
						{
							"_": "The unique of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						},
						{
							"_": "The caption of the field.",
							"name": "caption"
						},
						{
							"_": "The desired value of the field.",
							"name": "value"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetField",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetField.htm",
					"title": "Dialog.SetField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetField</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetFields(System.String,TechTalk.SpecFlow.TableRow,System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set all supported and displayed field values for any supported field type.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						},
						{
							"_": "Mapping of the field captions to their desired values.",
							"name": "fields"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetFields.htm",
					"title": "Dialog.SetFields Method (String, TableRow, IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetFields(System.String,TechTalk.SpecFlow.TableRow,System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set all supported and displayed field values for any supported field type.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'",
							"name": "dialogId"
						},
						{
							"_": "Mapping of the field captions to their desired values.",
							"name": "fields"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						},
						{
							"_": "Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.",
							"name": "customSupportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetFields.htm",
					"title": "Dialog.SetFields Method (String, TableRow, IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridRow(System.String,System.String,TechTalk.SpecFlow.TableRow,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set a single row's values for a grid.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'EventTaskAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the grid - i.e. '_REMINDERS_'",
							"name": "gridId"
						},
						{
							"_": "Mapping of the column captions to a single row's desired values.",
							"name": "row"
						},
						{
							"_": "The index of the row to set.  \r\n            The first row's index is represented as 1.",
							"name": "rowIndex"
						},
						{
							"_": "Mapping of the column captions to their DOM TR index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridRow",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridRow.htm",
					"title": "Dialog.SetGridRow Method (String, String, TableRow, Int32, IDictionary(String, Int32), IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">row</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">rowIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRow</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">rowIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">row</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">rowIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridRow(System.String,System.String,TechTalk.SpecFlow.TableRow,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set a single row's values for a grid.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'EventTaskAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the grid - i.e. '_REMINDERS_'",
							"name": "gridId"
						},
						{
							"_": "Mapping of the column captions to a single row's desired values.",
							"name": "row"
						},
						{
							"_": "The index of the row to set.  \r\n            The first row's index is represented as 1.",
							"name": "rowIndex"
						},
						{
							"_": "Mapping of the column captions to their DOM TR index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						},
						{
							"_": "Mapping of field captions to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.",
							"name": "customSupportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridRow",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridRow.htm",
					"title": "Dialog.SetGridRow Method (String, String, TableRow, Int32, IDictionary(String, Int32), IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">row</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">rowIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRow</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">rowIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">row</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">rowIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridRows(System.String,System.String,TechTalk.SpecFlow.Table,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set the row values for a grid.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'EventTaskAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the grid - i.e. '_REMINDERS_'",
							"name": "gridId"
						},
						{
							"_": "Table where each TableRow a row to set.\r\n            Each TableRow is a mapping of the column captions to a single row's desired values.",
							"name": "rows"
						},
						{
							"_": "The row index to start adding rows from.  \r\n            The first row's index is represented as 1.",
							"name": "startingRowIndex"
						},
						{
							"_": "Mapping of the column captions to their DOM TR index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridRows",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridRows.htm",
					"title": "Dialog.SetGridRows Method (String, String, Table, Int32, IDictionary(String, Int32), IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">rows</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">startingRowIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRows</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">rows</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>,\r\n\t<span class=\"parameter\">startingRowIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">rows</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">startingRowIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialog.SetGridRows(System.String,System.String,TechTalk.SpecFlow.Table,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField},System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set the row values for a grid.",
					"param": [
						{
							"_": "The unique id of the dialog.  i.e. 'EventTaskAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the grid - i.e. '_REMINDERS_'",
							"name": "gridId"
						},
						{
							"_": "Table where each TableRow a row to set.\r\n            Each TableRow is a mapping of the column captions to a single row's desired values.",
							"name": "rows"
						},
						{
							"_": "The row index to start adding rows from.  \r\n            The first row's index is represented as 1.",
							"name": "startingRowIndex"
						},
						{
							"_": "Mapping of the column captions to their DOM TR index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.",
							"name": "supportedFields"
						},
						{
							"_": "Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.",
							"name": "customSupportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Dialog_SetGridRows",
					"filename": "M_Blueshirt_Core_Crm_Dialog_SetGridRows.htm",
					"title": "Dialog.SetGridRows Method (String, String, Table, Int32, IDictionary(String, Int32), IDictionary(String, CrmField))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">rows</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">startingRowIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"parameter\">supportedFields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRows</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">rows</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>,\r\n\t<span class=\"parameter\">startingRowIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">supportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">rows</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">startingRowIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"parameter\">supportedFields</span>\r\n)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.CommitmentsDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_CommitmentsDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_CommitmentsDialog_DialogIds.htm",
					"title": "CommitmentsDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.CommitmentsDialog.SupportedAddtionalApplicationsGridFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_CommitmentsDialog_SupportedAddtionalApplicationsGridFields",
					"filename": "F_Blueshirt_Core_Crm_CommitmentsDialog_SupportedAddtionalApplicationsGridFields.htm",
					"title": "CommitmentsDialog.SupportedAddtionalApplicationsGridFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedAddtionalApplicationsGridFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedAddtionalApplicationsGridFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedAddtionalApplicationsGridFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.CommitmentsDialog.SetAdditionalApplicationsGridRows(TechTalk.SpecFlow.Table)",
					"summary": "Set the grid rows for the Additional applications grid starting with the first row.",
					"param": {
						"_": "Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values",
						"name": "applications"
					},
					"key": "M_Blueshirt_Core_Crm_CommitmentsDialog_SetAdditionalApplicationsGridRows",
					"filename": "M_Blueshirt_Core_Crm_CommitmentsDialog_SetAdditionalApplicationsGridRows.htm",
					"title": "CommitmentsDialog.SetAdditionalApplicationsGridRows Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetAdditionalApplicationsGridRows</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">applications</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetAdditionalApplicationsGridRows</span> ( \r\n\t<span class=\"parameter\">applications</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetAdditionalApplicationsGridRows</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">applications</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.DesignationsDialog",
					"summary": "Class to handle the interactions for adding/editing a designations dialog.",
					"key": "T_Blueshirt_Core_Crm_DesignationsDialog",
					"filename": "T_Blueshirt_Core_Crm_DesignationsDialog.htm",
					"title": "DesignationsDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">DesignationsDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">DesignationsDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">DesignationsDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SplitDesignations",
							"link": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignations.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the designations grid rows starting with the first row and distribute the amount evenly if specified."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SplitDesignationsEvenly",
							"link": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignationsEvenly.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the designations grid rows starting with the first row and distribute the amount evenly."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.DesignationsDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_DesignationsDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_DesignationsDialog_DialogIds.htm",
					"title": "DesignationsDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.DesignationsDialog.SplitDesignationsEvenly(TechTalk.SpecFlow.Table)",
					"summary": "Set the designations grid rows starting with the first row and distribute the amount evenly.",
					"param": {
						"_": "Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values",
						"name": "designations"
					},
					"key": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignationsEvenly",
					"filename": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignationsEvenly.htm",
					"title": "DesignationsDialog.SplitDesignationsEvenly Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignationsEvenly</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">designations</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SplitDesignationsEvenly</span> ( \r\n\t<span class=\"parameter\">designations</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignationsEvenly</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">designations</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.DesignationsDialog.SplitDesignations(TechTalk.SpecFlow.Table,System.Boolean)",
					"summary": "Set the designations grid rows starting with the first row and distribute the amount evenly if specified.",
					"param": [
						{
							"_": "Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values",
							"name": "designations"
						},
						{
							"_": "Flag indicating whether to split the designations evenly",
							"name": "evenly"
						}
					],
					"key": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignations",
					"filename": "M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignations.htm",
					"title": "DesignationsDialog.SplitDesignations Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignations</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">designations</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">evenly</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SplitDesignations</span> ( \r\n\t<span class=\"parameter\">designations</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>,\r\n\t<span class=\"parameter\">evenly</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignations</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">designations</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">evenly</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.EventDialog",
					"summary": "Class to handle the interactions for adding/editing an event dialog.",
					"key": "T_Blueshirt_Core_Crm_EventDialog",
					"filename": "T_Blueshirt_Core_Crm_EventDialog.htm",
					"title": "EventDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">EventDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">EventDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">EventDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields",
							"link": "M_Blueshirt_Core_Crm_EventDialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields to their desired values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.EventDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_EventDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_EventDialog_DialogIds.htm",
					"title": "EventDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.EventDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_EventDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_EventDialog_SupportedFields.htm",
					"title": "EventDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventDialog.SetFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields to their desired values.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_EventDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_EventDialog_SetFields.htm",
					"title": "EventDialog.SetFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PledgeDialog",
					"summary": "Class to handle the interactions for adding/editing pledge dialog.",
					"key": "T_Blueshirt_Core_Crm_PledgeDialog",
					"filename": "T_Blueshirt_Core_Crm_PledgeDialog.htm",
					"title": "PledgeDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PledgeDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PledgeDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PledgeDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EditInstallmentDesignations",
							"link": "M_Blueshirt_Core_Crm_PledgeDialog_EditInstallmentDesignations.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Edit installment designations' button and load the associated dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetAccountSystem",
							"link": "M_Blueshirt_Core_Crm_PledgeDialog_SetAccountSystem.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the account system of the pledge."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields(TableRow)",
							"link": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields to their desired values"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields(TableRow, IDictionaryAddLanguageSpecificTextSet(\"LST96512ADF_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LST96512ADF_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields to their desired values"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SplitDesignationsEvenly",
							"link": "M_Blueshirt_Core_Crm_PledgeDialog_SplitDesignationsEvenly.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Split pledge evenly among the provided designations."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PledgeDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_PledgeDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_PledgeDialog_DialogIds.htm",
					"title": "PledgeDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PledgeDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_PledgeDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_PledgeDialog_SupportedFields.htm",
					"title": "PledgeDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeDialog.SplitDesignationsEvenly(TechTalk.SpecFlow.Table)",
					"summary": "Split pledge evenly among the provided designations.",
					"param": {
						"_": "Table where each row represents a designation to add.  \r\n            A row is a mapping of the 'Split designations' grid's column captions to the row's values.",
						"name": "designations"
					},
					"key": "M_Blueshirt_Core_Crm_PledgeDialog_SplitDesignationsEvenly",
					"filename": "M_Blueshirt_Core_Crm_PledgeDialog_SplitDesignationsEvenly.htm",
					"title": "PledgeDialog.SplitDesignationsEvenly Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignationsEvenly</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">designations</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SplitDesignationsEvenly</span> ( \r\n\t<span class=\"parameter\">designations</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignationsEvenly</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">designations</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeDialog.SetAccountSystem(System.String)",
					"summary": "Set the account system of the pledge.",
					"param": {
						"_": "The account system to use.",
						"name": "system"
					},
					"key": "M_Blueshirt_Core_Crm_PledgeDialog_SetAccountSystem",
					"filename": "M_Blueshirt_Core_Crm_PledgeDialog_SetAccountSystem.htm",
					"title": "PledgeDialog.SetAccountSystem Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetAccountSystem</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">system</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetAccountSystem</span> ( \r\n\t<span class=\"parameter\">system</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetAccountSystem</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">system</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeDialog.EditInstallmentDesignations",
					"summary": "Click the 'Edit installment designations' button and load the associated dialog.",
					"key": "M_Blueshirt_Core_Crm_PledgeDialog_EditInstallmentDesignations",
					"filename": "M_Blueshirt_Core_Crm_PledgeDialog_EditInstallmentDesignations.htm",
					"title": "PledgeDialog.EditInstallmentDesignations Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditInstallmentDesignations</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EditInstallmentDesignations</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditInstallmentDesignations</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeDialog.SetFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields to their desired values",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fieldValues"
					},
					"key": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields.htm",
					"title": "PledgeDialog.SetFields Method (TableRow)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeDialog.SetFields(TechTalk.SpecFlow.TableRow,System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set the fields to their desired values",
					"param": [
						{
							"_": "Mapping of the field captions to their desired values",
							"name": "fieldValues"
						},
						{
							"_": "Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.",
							"name": "customSupportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_PledgeDialog_SetFields.htm",
					"title": "PledgeDialog.SetFields Method (TableRow)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.Dialogs.AddMembershipProgramDialog",
					"summary": "Class to handle the unique fields and actions for filling out an 'Add Membership Program' dialog.",
					"key": "T_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog",
					"filename": "T_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog.htm",
					"title": "AddMembershipProgramDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">AddMembershipProgramDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">AddMembershipProgramDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">AddMembershipProgramDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CheckMembershipProgramExists",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CheckMembershipProgramExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgram",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgram.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramAnnual",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramAnnual.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramBenefitsOptionsFormat",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramBenefitsOptionsFormat.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramDues",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramDues.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramDuesOptionsInstallments",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramDuesOptionsInstallments.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramLevelName",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramLevelName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramLevelPrice",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramLevelPrice.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramNext",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramNext.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramRenewalOptionsTerm",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramRenewalOptionsTerm.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CreateMembershipProgramReviewSave",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_CreateMembershipProgramReviewSave.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteMembershipProgram",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_DeleteMembershipProgram.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDeleteProgramLink",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_getXDeleteProgramLink.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXProgramLink",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_getXProgramLink.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "MembershipPrograms",
							"link": "M_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog_MembershipPrograms.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.BatchDialog",
					"summary": "Base class to handle the interactions for adding/editing a batch dialog.",
					"key": "T_Blueshirt_Core_Crm_BatchDialog",
					"filename": "T_Blueshirt_Core_Crm_BatchDialog.htm",
					"title": "BatchDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">BatchDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">BatchDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">BatchDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EditConstituent",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_EditConstituent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Edit the constituent for the currently selected batch row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetColumnIndexByCaption",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexByCaption.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get the index of the column in the batch grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetColumnIndexById",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexById.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get the index of the column in the batch grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GetGridCellValue",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_GetGridCellValue.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get the value of a batch grid cell."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SaveAndClose",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_SaveAndClose.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Save and close' button."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridCell",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_SetGridCell.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the value of a batch grid cell for a specified row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRow",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the row of a batch grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGridRows",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRows.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the rows of a batch grid starting with the first row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Validate",
							"link": "M_Blueshirt_Core_Crm_BatchDialog_Validate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Validate' button and click Ok on the confirmation button."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BatchDialog.getXBatchGridHeaders",
					"summary": "Unique XPath to get the header columns TR element of a batch's grid.",
					"key": "F_Blueshirt_Core_Crm_BatchDialog_getXBatchGridHeaders",
					"filename": "F_Blueshirt_Core_Crm_BatchDialog_getXBatchGridHeaders.htm",
					"title": "BatchDialog.getXBatchGridHeaders Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXBatchGridHeaders</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXBatchGridHeaders</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXBatchGridHeaders</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BatchDialog.ColumnToBatchColumn",
					"summary": "Maps batch grid column captions to their required values in order to set their values in rows.",
					"key": "F_Blueshirt_Core_Crm_BatchDialog_ColumnToBatchColumn",
					"filename": "F_Blueshirt_Core_Crm_BatchDialog_ColumnToBatchColumn.htm",
					"title": "BatchDialog.ColumnToBatchColumn Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">Dictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">ColumnToBatchColumn</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">ColumnToBatchColumn</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Dictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">Dictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">ColumnToBatchColumn</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.GetColumnIndexByCaption(System.String)",
					"summary": "Get the index of the column in the batch grid.",
					"param": {
						"_": "The caption of the column.",
						"name": "caption"
					},
					"returns": "The index of the TD column element within the TR headers.",
					"key": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexByCaption",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexByCaption.htm",
					"title": "BatchDialog.GetColumnIndexByCaption Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetColumnIndexByCaption</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetColumnIndexByCaption</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetColumnIndexByCaption</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.GetColumnIndexById(System.String)",
					"summary": "Get the index of the column in the batch grid.",
					"param": {
						"_": "The unique id of the column.",
						"name": "columnId"
					},
					"returns": "The index of the TD column element within the TR headers.",
					"key": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexById",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexById.htm",
					"title": "BatchDialog.GetColumnIndexById Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetColumnIndexById</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">columnId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetColumnIndexById</span> ( \r\n\t<span class=\"parameter\">columnId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">int</span> <span class=\"identifier\">GetColumnIndexById</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">columnId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.GetGridCellValue(System.String,System.Int32)",
					"summary": "Get the value of a batch grid cell.",
					"param": [
						{
							"_": "The column caption of the cell.",
							"name": "caption"
						},
						{
							"_": "The row index of the cell.  The first row is index 1.",
							"name": "row"
						}
					],
					"returns": "The value of the cell.",
					"key": "M_Blueshirt_Core_Crm_BatchDialog_GetGridCellValue",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_GetGridCellValue.htm",
					"title": "BatchDialog.GetGridCellValue Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">GetGridCellValue</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GetGridCellValue</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">GetGridCellValue</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.SetGridCell(System.String,System.String,System.Int32)",
					"summary": "Set the value of a batch grid cell for a specified row.",
					"param": [
						{
							"_": "The caption of the column.",
							"name": "caption"
						},
						{
							"_": "The desired value of the row.",
							"name": "value"
						},
						{
							"_": "The index of the row.  The first row's index is 1.",
							"name": "row"
						}
					],
					"key": "M_Blueshirt_Core_Crm_BatchDialog_SetGridCell",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_SetGridCell.htm",
					"title": "BatchDialog.SetGridCell Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridCell</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridCell</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridCell</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.SetGridRows(TechTalk.SpecFlow.Table)",
					"summary": "Set the rows of a batch grid starting with the first row.",
					"param": {
						"_": "Table where each TableRow represents a grid row to set.\r\n            A TableRow is a mapping of the batch column captions to a single row's desired values.",
						"name": "batchRows"
					},
					"key": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRows",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRows.htm",
					"title": "BatchDialog.SetGridRows Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">batchRows</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRows</span> ( \r\n\t<span class=\"parameter\">batchRows</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRows</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">batchRows</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.SetGridRow(TechTalk.SpecFlow.TableRow,System.Int32)",
					"summary": "Set the row of a batch grid.",
					"param": [
						{
							"_": "Mapping of the batch column captions to a single row's desired values.",
							"name": "batchRow"
						},
						{
							"_": "The index of the row.  The first row starts at index 1.",
							"name": "row"
						}
					],
					"key": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRow",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_SetGridRow.htm",
					"title": "BatchDialog.SetGridRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">batchRow</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGridRow</span> ( \r\n\t<span class=\"parameter\">batchRow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGridRow</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">batchRow</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">row</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.Validate",
					"summary": "Click the 'Validate' button and click Ok on the confirmation button.",
					"key": "M_Blueshirt_Core_Crm_BatchDialog_Validate",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_Validate.htm",
					"title": "BatchDialog.Validate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Validate</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Validate</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Validate</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.SaveAndClose",
					"summary": "Click the 'Save and close' button.",
					"key": "M_Blueshirt_Core_Crm_BatchDialog_SaveAndClose",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_SaveAndClose.htm",
					"title": "BatchDialog.SaveAndClose Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SaveAndClose</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SaveAndClose</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SaveAndClose</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchDialog.EditConstituent(TechTalk.SpecFlow.TableRow)",
					"summary": "Edit the constituent for the currently selected batch row.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fieldValues"
					},
					"key": "M_Blueshirt_Core_Crm_BatchDialog_EditConstituent",
					"filename": "M_Blueshirt_Core_Crm_BatchDialog_EditConstituent.htm",
					"title": "BatchDialog.EditConstituent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditConstituent</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EditConstituent</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditConstituent</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.EnhancedRevenueBatchDialog",
					"summary": "Class to handle the interactions for adding/editing an enhanced revenue batch dialog.",
					"key": "T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog",
					"filename": "T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog.htm",
					"title": "EnhancedRevenueBatchDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">EnhancedRevenueBatchDialog</span> : <span class=\"identifier\">BatchDialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">EnhancedRevenueBatchDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BatchDialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">EnhancedRevenueBatchDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BatchDialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Apply",
							"link": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_Apply.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click 'Apply' under the Revenue tab and set the designations in the 'Apply to commitments' dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SplitDesignations",
							"link": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_SplitDesignations.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Split designations' button and set the desgination grid's rows. This will split the designation on the currently selected grid row. The amount between the designations will be split evenly."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "UpdateProjectedTotals",
							"link": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_UpdateProjectedTotals.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Update projected totals' and click Ok on the confirmation button."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EnhancedRevenueBatchDialog.UpdateProjectedTotals",
					"summary": "Click the 'Update projected totals' and click Ok on the confirmation button.",
					"key": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_UpdateProjectedTotals",
					"filename": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_UpdateProjectedTotals.htm",
					"title": "EnhancedRevenueBatchDialog.UpdateProjectedTotals Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">UpdateProjectedTotals</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">UpdateProjectedTotals</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">UpdateProjectedTotals</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EnhancedRevenueBatchDialog.SplitDesignations(TechTalk.SpecFlow.Table,System.Boolean)",
					"summary": "Click the 'Split designations' button and set the desgination grid's rows. This will split the designation on the currently selected grid row. The amount between the designations will be split evenly.",
					"param": [
						{
							"_": "Table where each row represents a designation to add.\r\n            Each row is a mapping of the column captions to the single row's desired values.",
							"name": "designations"
						},
						{
							"_": "Flag indicating whether or not to split the designations evenly.",
							"name": "evenly"
						}
					],
					"key": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_SplitDesignations",
					"filename": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_SplitDesignations.htm",
					"title": "EnhancedRevenueBatchDialog.SplitDesignations Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignations</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">designations</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">evenly</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SplitDesignations</span> ( \r\n\t<span class=\"parameter\">designations</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>,\r\n\t<span class=\"parameter\">evenly</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SplitDesignations</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">designations</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">evenly</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EnhancedRevenueBatchDialog.Apply(TechTalk.SpecFlow.Table)",
					"summary": "Click 'Apply' under the Revenue tab and set the designations in the 'Apply to commitments' dialog.",
					"param": {
						"_": "Table where each row represents an application to add.\r\n            A row is a mapping of the column captions to a single row's desired values.",
						"name": "applications"
					},
					"key": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_Apply",
					"filename": "M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_Apply.htm",
					"title": "EnhancedRevenueBatchDialog.Apply Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Apply</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">applications</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Apply</span> ( \r\n\t<span class=\"parameter\">applications</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Apply</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">applications</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.IndividualDialog",
					"summary": "Class to handle the interactions for adding/editing an individual dialog.",
					"key": "T_Blueshirt_Core_Crm_IndividualDialog",
					"filename": "T_Blueshirt_Core_Crm_IndividualDialog.htm",
					"title": "IndividualDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">IndividualDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">IndividualDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">IndividualDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Save",
							"link": "M_Blueshirt_Core_Crm_IndividualDialog_Save.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Save the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetHouseholdFields",
							"link": "M_Blueshirt_Core_Crm_IndividualDialog_SetHouseholdFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Household' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetIndividualFields(TableRow)",
							"link": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Individual' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetIndividualFields(TableRow, IDictionaryAddLanguageSpecificTextSet(\"LST81CF9BDE_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LST81CF9BDE_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Individual' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetLastName",
							"link": "M_Blueshirt_Core_Crm_IndividualDialog_SetLastName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Last name' field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.IndividualDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_IndividualDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_IndividualDialog_DialogIds.htm",
					"title": "IndividualDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.IndividualDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_IndividualDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_IndividualDialog_SupportedFields.htm",
					"title": "IndividualDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.IndividualDialog.SetHouseholdFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'Household' tab.",
					"param": {
						"_": "Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.",
						"name": "fieldValues"
					},
					"key": "M_Blueshirt_Core_Crm_IndividualDialog_SetHouseholdFields",
					"filename": "M_Blueshirt_Core_Crm_IndividualDialog_SetHouseholdFields.htm",
					"title": "IndividualDialog.SetHouseholdFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetHouseholdFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetHouseholdFields</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetHouseholdFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.IndividualDialog.SetIndividualFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'Individual' tab.",
					"param": {
						"_": "Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.",
						"name": "fieldValues"
					},
					"key": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields",
					"filename": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields.htm",
					"title": "IndividualDialog.SetIndividualFields Method (TableRow)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetIndividualFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetIndividualFields</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetIndividualFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.IndividualDialog.SetIndividualFields(TechTalk.SpecFlow.TableRow,System.Collections.Generic.IDictionary{System.String,Blueshirt.Core.Base.CrmField})",
					"summary": "Set the fields on the 'Individual' tab.",
					"param": [
						{
							"_": "Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.",
							"name": "fieldValues"
						},
						{
							"_": "Mapping of field captions to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the default SupportedFields mapping can be overridden by including them in this mapping.",
							"name": "CustomSupportedFields"
						}
					],
					"key": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields",
					"filename": "M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields.htm",
					"title": "IndividualDialog.SetIndividualFields Method (TableRow)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetIndividualFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fieldValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetIndividualFields</span> ( \r\n\t<span class=\"parameter\">fieldValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetIndividualFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fieldValues</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.IndividualDialog.SetLastName(System.String)",
					"summary": "Set the 'Last name' field.",
					"param": {
						"_": "The desired value of the field.",
						"name": "lastName"
					},
					"key": "M_Blueshirt_Core_Crm_IndividualDialog_SetLastName",
					"filename": "M_Blueshirt_Core_Crm_IndividualDialog_SetLastName.htm",
					"title": "IndividualDialog.SetLastName Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetLastName</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">lastName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetLastName</span> ( \r\n\t<span class=\"parameter\">lastName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetLastName</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">lastName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.IndividualDialog.Save",
					"summary": "Save the dialog.",
					"key": "M_Blueshirt_Core_Crm_IndividualDialog_Save",
					"filename": "M_Blueshirt_Core_Crm_IndividualDialog_Save.htm",
					"title": "IndividualDialog.Save Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Save</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MarketingAcknowledgementRuleDialog",
					"summary": "Class to handle the interactions for adding/editing a marketing acknowledgement template rule dialog.",
					"key": "T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog",
					"filename": "T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm",
					"title": "MarketingAcknowledgementRuleDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAcknowledgementRuleDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAcknowledgementRuleDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAcknowledgementRuleDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Save",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_Save.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Save the dialog and click 'Yes' on the subsequent confirmation dialogs."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetDetailsTabFields",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SetDetailsTabFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Details' tab of the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.MarketingAcknowledgementRuleDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_DialogIds.htm",
					"title": "MarketingAcknowledgementRuleDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.MarketingAcknowledgementRuleDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SupportedFields.htm",
					"title": "MarketingAcknowledgementRuleDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementRuleDialog.SetDetailsTabFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'Details' tab of the dialog.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SetDetailsTabFields",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SetDetailsTabFields.htm",
					"title": "MarketingAcknowledgementRuleDialog.SetDetailsTabFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetailsTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetDetailsTabFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetailsTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementRuleDialog.Save(System.Int32)",
					"summary": "Save the dialog and click 'Yes' on the subsequent confirmation dialogs.",
					"param": {
						"_": "The number of expected confirmation dialogs to accept.",
						"name": "numOfApprovedChanges"
					},
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_Save",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_Save.htm",
					"title": "MarketingAcknowledgementRuleDialog.Save Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numOfApprovedChanges</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Save</span> ( \r\n\t<span class=\"parameter\">numOfApprovedChanges</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numOfApprovedChanges</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog",
					"summary": "Class to handle the interactions for adding/editing a marketing acknowledgement template dialog.",
					"key": "T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog",
					"filename": "T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm",
					"title": "MarketingAcknowledgementTemplateDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAcknowledgementTemplateDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAcknowledgementTemplateDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAcknowledgementTemplateDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IncludeAllRecords",
							"link": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_IncludeAllRecords.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select the 'Include all records' box on the 'Universe' tab."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetActivationTabFields",
							"link": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetActivationTabFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Activation' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetGeneralTabFields",
							"link": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetGeneralTabFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'General' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetSourceCode",
							"link": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetSourceCode.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Source code' field on the 'Source Code' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_DialogIds.htm",
					"title": "MarketingAcknowledgementTemplateDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SupportedFields.htm",
					"title": "MarketingAcknowledgementTemplateDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.SetGeneralTabFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'General' tab.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetGeneralTabFields",
					"filename": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetGeneralTabFields.htm",
					"title": "MarketingAcknowledgementTemplateDialog.SetGeneralTabFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGeneralTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetGeneralTabFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetGeneralTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.SetSourceCode(System.String)",
					"summary": "Set the 'Source code' field on the 'Source Code' tab.",
					"param": {
						"_": "The desired value of the field.",
						"name": "sourceCode"
					},
					"key": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetSourceCode",
					"filename": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetSourceCode.htm",
					"title": "MarketingAcknowledgementTemplateDialog.SetSourceCode Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSourceCode</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sourceCode</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetSourceCode</span> ( \r\n\t<span class=\"parameter\">sourceCode</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSourceCode</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sourceCode</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.IncludeAllRecords",
					"summary": "Select the 'Include all records' box on the 'Universe' tab.",
					"key": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_IncludeAllRecords",
					"filename": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_IncludeAllRecords.htm",
					"title": "MarketingAcknowledgementTemplateDialog.IncludeAllRecords Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">IncludeAllRecords</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">IncludeAllRecords</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">IncludeAllRecords</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Dialogs.MarketingAcknowledgementTemplateDialog.SetActivationTabFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'Activation' tab.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetActivationTabFields",
					"filename": "M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetActivationTabFields.htm",
					"title": "MarketingAcknowledgementTemplateDialog.SetActivationTabFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetActivationTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetActivationTabFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetActivationTabFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.NewAdhocQueryDialog",
					"summary": "Add Ad-hoc Query Dialog functions and interactions in BBCRM.",
					"key": "T_Blueshirt_Core_Crm_NewAdhocQueryDialog",
					"filename": "T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm",
					"title": "NewAdhocQueryDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">NewAdhocQueryDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">NewAdhocQueryDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">NewAdhocQueryDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ApplyCriteria",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_ApplyCriteria.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXCriteriaInput",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXCriteriaInput.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format a unique XPath for a Input on an AdHocQueryCriteriaForm on the NewAdhocQueryDialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXFieldResult",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFieldResult.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get an XPath for a result field on a NewAdhocQueryDialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSaveOptionsInput",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsInput.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get an XPath for an input field on a NewAdhocQueryDialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSaveOptionsTextArea",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsTextArea.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Get an XPath for a TextArea on a NewAdhocQueryDialog."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTab",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXTab.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format a unique XPath for a tab on the Ad-Hoc Query Dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IncludeDisplayField",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_IncludeDisplayField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IncludeRecordCriteria",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_IncludeRecordCriteria.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFindField",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_SetFindField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetSaveOptions",
							"link": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_SetSaveOptions.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the values on the 'Set save options' tab"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXSaveOptionsInput(System.String)",
					"summary": "Get an XPath for an input field on a NewAdhocQueryDialog.",
					"param": {
						"_": "The Id of the input field.",
						"name": "inputId"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsInput",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsInput.htm",
					"title": "NewAdhocQueryDialog.getXSaveOptionsInput Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSaveOptionsInput</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">inputId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSaveOptionsInput</span> ( \r\n\t<span class=\"parameter\">inputId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSaveOptionsInput</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">inputId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXSaveOptionsTextArea(System.String)",
					"summary": "Get an XPath for a TextArea on a NewAdhocQueryDialog.",
					"param": {
						"_": "The id of the TextArea.",
						"name": "AreaId"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsTextArea",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsTextArea.htm",
					"title": "NewAdhocQueryDialog.getXSaveOptionsTextArea Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSaveOptionsTextArea</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">AreaId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSaveOptionsTextArea</span> ( \r\n\t<span class=\"parameter\">AreaId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSaveOptionsTextArea</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">AreaId</span>\r\n)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXFindField",
					"summary": "Constant XPath for the 'Find' Field of an NewAdhocQueryDialog.",
					"key": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFindField",
					"filename": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFindField.htm",
					"title": "NewAdhocQueryDialog.getXFindField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFindField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXFindField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFindField</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXFieldResult(System.String)",
					"summary": "Get an XPath for a result field on a NewAdhocQueryDialog.",
					"param": {
						"_": "The text of the Result Field.",
						"name": "text"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFieldResult",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFieldResult.htm",
					"title": "NewAdhocQueryDialog.getXFieldResult Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFieldResult</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">text</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXFieldResult</span> ( \r\n\t<span class=\"parameter\">text</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFieldResult</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">text</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXCriteriaInput(System.String)",
					"summary": "Format a unique XPath for a Input on an AdHocQueryCriteriaForm on the NewAdhocQueryDialog.",
					"param": {
						"_": "The ID of the input.",
						"name": "inputId"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXCriteriaInput",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXCriteriaInput.htm",
					"title": "NewAdhocQueryDialog.getXCriteriaInput Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXCriteriaInput</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">inputId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXCriteriaInput</span> ( \r\n\t<span class=\"parameter\">inputId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXCriteriaInput</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">inputId</span>\r\n)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXAddFilterArrow",
					"summary": "Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.",
					"key": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddFilterArrow",
					"filename": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddFilterArrow.htm",
					"title": "NewAdhocQueryDialog.getXAddFilterArrow Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAddFilterArrow</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXAddFilterArrow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAddFilterArrow</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXAddOutputFieldArrow",
					"summary": "Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.",
					"key": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddOutputFieldArrow",
					"filename": "F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddOutputFieldArrow.htm",
					"title": "NewAdhocQueryDialog.getXAddOutputFieldArrow Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAddOutputFieldArrow</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXAddOutputFieldArrow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAddOutputFieldArrow</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXTab(System.String)",
					"summary": "Format a unique XPath for a tab on the Ad-Hoc Query Dialog.",
					"param": {
						"_": "The caption of the tab.",
						"name": "tabCaption"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXTab",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXTab.htm",
					"title": "NewAdhocQueryDialog.getXTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">tabCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTab</span> ( \r\n\t<span class=\"parameter\">tabCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">tabCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.NewAdhocQueryDialog.SetSaveOptions(TechTalk.SpecFlow.Table)",
					"summary": "Set the values on the 'Set save options' tab",
					"param": {
						"_": "Dictionary mapping of the field captions to their desired values",
						"name": "options"
					},
					"key": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_SetSaveOptions",
					"filename": "M_Blueshirt_Core_Crm_NewAdhocQueryDialog_SetSaveOptions.htm",
					"title": "NewAdhocQueryDialog.SetSaveOptions Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSaveOptions</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">options</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetSaveOptions</span> ( \r\n\t<span class=\"parameter\">options</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSaveOptions</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">options</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PackageDialog",
					"summary": "Class to handle the interactions for adding/editing a package dialog.",
					"key": "T_Blueshirt_Core_Crm_PackageDialog",
					"filename": "T_Blueshirt_Core_Crm_PackageDialog.htm",
					"title": "PackageDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PackageDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PackageDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PackageDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields",
							"link": "M_Blueshirt_Core_Crm_PackageDialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the field values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PackageDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_PackageDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_PackageDialog_DialogIds.htm",
					"title": "PackageDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PackageDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_PackageDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_PackageDialog_SupportedFields.htm",
					"title": "PackageDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackageDialog.SetFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the field values.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_PackageDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_PackageDialog_SetFields.htm",
					"title": "PackageDialog.SetFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PaymentDialog",
					"summary": "Class to handle the interactions for adding/editing a payment dialog.",
					"key": "T_Blueshirt_Core_Crm_PaymentDialog",
					"filename": "T_Blueshirt_Core_Crm_PaymentDialog.htm",
					"title": "PaymentDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PaymentDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PaymentDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PaymentDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddApplication",
							"link": "M_Blueshirt_Core_Crm_PaymentDialog_AddApplication.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an application to the payment."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields",
							"link": "M_Blueshirt_Core_Crm_PaymentDialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields to their desired values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PaymentDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_PaymentDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_PaymentDialog_DialogIds.htm",
					"title": "PaymentDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PaymentDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_PaymentDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_PaymentDialog_SupportedFields.htm",
					"title": "PaymentDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PaymentDialog.ApplicationToAddButtonId",
					"summary": "\r\n            Mapping of the 'Application' dropdown options to their 'Add' button id.\r\n            "
				},
				{
					"name": "M:Blueshirt.Core.Crm.PaymentDialog.SetFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields to their desired values.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_PaymentDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_PaymentDialog_SetFields.htm",
					"title": "PaymentDialog.SetFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PaymentDialog.AddApplication(TechTalk.SpecFlow.TableRow)",
					"summary": "Add an application to the payment.",
					"param": {
						"_": "Mapping of the field captions to their desired values in the various application types.",
						"name": "application"
					},
					"key": "M_Blueshirt_Core_Crm_PaymentDialog_AddApplication",
					"filename": "M_Blueshirt_Core_Crm_PaymentDialog_AddApplication.htm",
					"title": "PaymentDialog.AddApplication Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddApplication</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">application</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddApplication</span> ( \r\n\t<span class=\"parameter\">application</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddApplication</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">application</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MajorGivingPlanDialog",
					"summary": "Class to handle the interactions for adding/editing a major giving plan dialog",
					"key": "T_Blueshirt_Core_Crm_MajorGivingPlanDialog",
					"filename": "T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm",
					"title": "MajorGivingPlanDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MajorGivingPlanDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MajorGivingPlanDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MajorGivingPlanDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "InsertStep",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_InsertStep.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row and insert a new step above it."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Save",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_Save.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Save the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectStepRow",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SelectStepRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in the Steps grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetDetails",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetDetails.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "The fields on the Details tab of the dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetOutline",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetOutline.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the plan outline."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetParticipants",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetParticipants.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the participants grid values. Starts with the first row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetPlanStartDate",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPlanStartDate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Start date' of the plan."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetPrimaryManagerStartDate",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPrimaryManagerStartDate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Start date' of the primary manager."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetSecondaryManagerStartDate",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetSecondaryManagerStartDate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Start date' of the secondary manager."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetStepRow",
							"link": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetStepRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set a step row's values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.MajorGivingPlanDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_MajorGivingPlanDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_MajorGivingPlanDialog_DialogIds.htm",
					"title": "MajorGivingPlanDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.MajorGivingPlanDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_MajorGivingPlanDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_MajorGivingPlanDialog_SupportedFields.htm",
					"title": "MajorGivingPlanDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetPlanStartDate(System.String)",
					"summary": "Set the 'Start date' of the plan.",
					"param": {
						"_": "The date to set the 'Start date' to.",
						"name": "startDate"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPlanStartDate",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPlanStartDate.htm",
					"title": "MajorGivingPlanDialog.SetPlanStartDate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetPlanStartDate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">startDate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetPlanStartDate</span> ( \r\n\t<span class=\"parameter\">startDate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetPlanStartDate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">startDate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetPrimaryManagerStartDate(System.String)",
					"summary": "Set the 'Start date' of the primary manager.",
					"param": {
						"_": "The date to set the 'Start date' to.",
						"name": "startDate"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPrimaryManagerStartDate",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPrimaryManagerStartDate.htm",
					"title": "MajorGivingPlanDialog.SetPrimaryManagerStartDate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetPrimaryManagerStartDate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">startDate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetPrimaryManagerStartDate</span> ( \r\n\t<span class=\"parameter\">startDate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetPrimaryManagerStartDate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">startDate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetSecondaryManagerStartDate(System.String)",
					"summary": "Set the 'Start date' of the secondary manager.",
					"param": {
						"_": "The date to set the 'Start date' to.",
						"name": "startDate"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetSecondaryManagerStartDate",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetSecondaryManagerStartDate.htm",
					"title": "MajorGivingPlanDialog.SetSecondaryManagerStartDate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSecondaryManagerStartDate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">startDate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetSecondaryManagerStartDate</span> ( \r\n\t<span class=\"parameter\">startDate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSecondaryManagerStartDate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">startDate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetDetails(TechTalk.SpecFlow.TableRow)",
					"summary": "The fields on the Details tab of the dialog.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "details"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetDetails",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetDetails.htm",
					"title": "MajorGivingPlanDialog.SetDetails Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetails</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">details</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetDetails</span> ( \r\n\t<span class=\"parameter\">details</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetails</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">details</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetParticipants(TechTalk.SpecFlow.Table)",
					"summary": "Set the participants grid values. Starts with the first row.",
					"param": {
						"_": "Table where each row represents a participant to add.\r\n            A row is a mapping of the column captions to a single row's values.",
						"name": "participants"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetParticipants",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetParticipants.htm",
					"title": "MajorGivingPlanDialog.SetParticipants Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetParticipants</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">participants</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetParticipants</span> ( \r\n\t<span class=\"parameter\">participants</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetParticipants</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">participants</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetOutline(System.String)",
					"summary": "Set the plan outline.",
					"param": {
						"_": "The type of outline to use.",
						"name": "outline"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetOutline",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetOutline.htm",
					"title": "MajorGivingPlanDialog.SetOutline Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetOutline</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">outline</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetOutline</span> ( \r\n\t<span class=\"parameter\">outline</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetOutline</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">outline</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SelectStepRow(System.Int32)",
					"summary": "Select a row in the Steps grid.",
					"param": {
						"_": "The index of the row to select.  The first row's index is 1.",
						"name": "index"
					},
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SelectStepRow",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SelectStepRow.htm",
					"title": "MajorGivingPlanDialog.SelectStepRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectStepRow</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectStepRow</span> ( \r\n\t<span class=\"parameter\">index</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectStepRow</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetStepRow(TechTalk.SpecFlow.TableRow,System.Int32)",
					"summary": "Set a step row's values.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "step"
						},
						{
							"_": "The index of the row.  The first row's index is 1.",
							"name": "index"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetStepRow",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetStepRow.htm",
					"title": "MajorGivingPlanDialog.SetStepRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetStepRow</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">step</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetStepRow</span> ( \r\n\t<span class=\"parameter\">step</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">index</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetStepRow</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">step</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.InsertStep(TechTalk.SpecFlow.TableRow,System.Int32)",
					"summary": "Select a row and insert a new step above it.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "step"
						},
						{
							"_": "The index of the row to select before inserting.  The first row's index is 1.",
							"name": "index"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_InsertStep",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_InsertStep.htm",
					"title": "MajorGivingPlanDialog.InsertStep Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">InsertStep</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">step</span>,\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">InsertStep</span> ( \r\n\t<span class=\"parameter\">step</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">index</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">InsertStep</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">step</span>, \r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">index</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.Save",
					"summary": "Save the dialog.",
					"key": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_Save",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingPlanDialog_Save.htm",
					"title": "MajorGivingPlanDialog.Save Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Save</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Save</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingPlanDialog.SetAddProspectPlanStartDate(System.String,System.String)",
					"summary": "\r\n            Set the 'Start date' of the 'Add prospect plan' dialog.  For whatever reason this requires custom logic\r\n            from the default SetField.  Tab over or clicking on the input does NOT change its class to contain the\r\n            focused attribute value.  This means it just continues trying to click the field and never sending it a value.\r\n            \r\n            If you unfocus from the web browser to another application at any point in this attempt, the field magically starts \r\n            to work and the focus attribute does get added from a click.  I believe this is an underlying product bug that is only\r\n            discoverable through automation via a selenium change of field focus.  Stepping through the default setfield implementation. \r\n            causes it to work.  Manually executing the steps shows all the expected element attribute changes when inspecting the field.\r\n            ",
					"param": [
						{
							"_": "The XPath to find an element for setting the value to.",
							"name": "xPath"
						},
						{
							"_": "The desired value of the element.",
							"name": "value"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.QuerySourceViewDialog",
					"summary": "Base object for QuerySourceViewDialog functionality and interactions in BBCRM. Inherits the Dialog base class.",
					"key": "T_Blueshirt_Core_Crm_QuerySourceViewDialog",
					"filename": "T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm",
					"title": "QuerySourceViewDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">QuerySourceViewDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">QuerySourceViewDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">QuerySourceViewDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXRecordTypeNameColumn",
							"link": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeNameColumn.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an XPath for the Name column of a QuerySourceViewDialog."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectRecordTypeName",
							"link": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SelectRecordTypeName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select the record Type on a QuerySourceViewDialog"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetRecordType",
							"link": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SetRecordType.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the record Type on a QuerySourceViewDialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.QuerySourceViewDialog.getXRecordTypeField",
					"summary": "Constant XPath for the Record Field of a QuerySourceViewDialog.",
					"key": "F_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeField",
					"filename": "F_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeField.htm",
					"title": "QuerySourceViewDialog.getXRecordTypeField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXRecordTypeField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXRecordTypeField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXRecordTypeField</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.QuerySourceViewDialog.getXRecordTypeNameColumn(System.String)",
					"summary": "Returns an XPath for the Name column of a QuerySourceViewDialog.",
					"param": {
						"_": "The Name of the Column.",
						"name": "name"
					},
					"key": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeNameColumn",
					"filename": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeNameColumn.htm",
					"title": "QuerySourceViewDialog.getXRecordTypeNameColumn Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXRecordTypeNameColumn</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXRecordTypeNameColumn</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXRecordTypeNameColumn</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.QuerySourceViewDialog.SetRecordType(System.String)",
					"summary": "Set the record Type on a QuerySourceViewDialog.",
					"param": {
						"_": "The type to select.",
						"name": "type"
					},
					"key": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SetRecordType",
					"filename": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SetRecordType.htm",
					"title": "QuerySourceViewDialog.SetRecordType Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRecordType</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">type</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetRecordType</span> ( \r\n\t<span class=\"parameter\">type</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRecordType</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">type</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.QuerySourceViewDialog.SelectRecordTypeName(System.String)",
					"summary": "Select the record Type on a QuerySourceViewDialog",
					"param": {
						"_": "The type to be selected.",
						"name": "type"
					},
					"key": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SelectRecordTypeName",
					"filename": "M_Blueshirt_Core_Crm_QuerySourceViewDialog_SelectRecordTypeName.htm",
					"title": "QuerySourceViewDialog.SelectRecordTypeName Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectRecordTypeName</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">type</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectRecordTypeName</span> ( \r\n\t<span class=\"parameter\">type</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectRecordTypeName</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">type</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.RegistrantDialog",
					"summary": "Class to handle the interactions for adding/editing an event registrant dialog.",
					"key": "T_Blueshirt_Core_Crm_RegistrantDialog",
					"filename": "T_Blueshirt_Core_Crm_RegistrantDialog.htm",
					"title": "RegistrantDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">RegistrantDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">RegistrantDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">RegistrantDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetRegistrant",
							"link": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrant.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the registrant."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetRegistrants",
							"link": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrants.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the registrants and registration options in the registration grid."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.RegistrantDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_RegistrantDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_RegistrantDialog_DialogIds.htm",
					"title": "RegistrantDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.RegistrantDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_RegistrantDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_RegistrantDialog_SupportedFields.htm",
					"title": "RegistrantDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RegistrantDialog.SetRegistrant(System.String)",
					"summary": "Set the registrant.",
					"param": {
						"name": "registrant"
					},
					"key": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrant",
					"filename": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrant.htm",
					"title": "RegistrantDialog.SetRegistrant Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRegistrant</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">registrant</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetRegistrant</span> ( \r\n\t<span class=\"parameter\">registrant</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRegistrant</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">registrant</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RegistrantDialog.SetRegistrants(TechTalk.SpecFlow.Table)",
					"summary": "Set the registrants and registration options in the registration grid.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "registrants"
					},
					"key": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrants",
					"filename": "M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrants.htm",
					"title": "RegistrantDialog.SetRegistrants Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRegistrants</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">registrants</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetRegistrants</span> ( \r\n\t<span class=\"parameter\">registrants</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetRegistrants</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">registrants</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.SegmentDialog",
					"summary": "Class to handle the interactions for adding/editing a segment dialog.",
					"key": "T_Blueshirt_Core_Crm_SegmentDialog",
					"filename": "T_Blueshirt_Core_Crm_SegmentDialog.htm",
					"title": "SegmentDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">SegmentDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">SegmentDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">SegmentDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddSelection",
							"link": "M_Blueshirt_Core_Crm_SegmentDialog_AddSelection.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a marketing selection to the segment."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetDetailsFields",
							"link": "M_Blueshirt_Core_Crm_SegmentDialog_SetDetailsFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the 'Details' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SegmentDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_SegmentDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_SegmentDialog_DialogIds.htm",
					"title": "SegmentDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SegmentDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_SegmentDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_SegmentDialog_SupportedFields.htm",
					"title": "SegmentDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentDialog.SetDetailsFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the 'Details' tab.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentDialog_SetDetailsFields",
					"filename": "M_Blueshirt_Core_Crm_SegmentDialog_SetDetailsFields.htm",
					"title": "SegmentDialog.SetDetailsFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetailsFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetDetailsFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetDetailsFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentDialog.AddSelection(System.String)",
					"summary": "Add a marketing selection to the segment.",
					"param": {
						"_": "The selection to add.",
						"name": "selection"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentDialog_AddSelection",
					"filename": "M_Blueshirt_Core_Crm_SegmentDialog_AddSelection.htm",
					"title": "SegmentDialog.AddSelection Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSelection</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">selection</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddSelection</span> ( \r\n\t<span class=\"parameter\">selection</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSelection</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">selection</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.SearchDialog",
					"summary": "Base class to handle the interactions for search dialogs. Inherits the Dialog base class.",
					"key": "T_Blueshirt_Core_Crm_SearchDialog",
					"filename": "T_Blueshirt_Core_Crm_SearchDialog.htm",
					"title": "SearchDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">SearchDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">SearchDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">SearchDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CheckConstituentSearchResultsContain",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsContain.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks that the search results contain the specified string on a SearchDialog. Throws an exception on failure."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CheckConstituentSearchResultsToolbarContains",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsToolbarContains.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks that the search results tool bar message contains the specified string on a SearchDialog. Throws an exception on failure."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Search",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_Search.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Press search on the SearchDialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Select",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_Select.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Select' button"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectFirstResult",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_SelectFirstResult.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select the first result returned. If no results are returned, Cancel is clicked and an Exception is thrown."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFirstNameToSearch",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_SetFirstNameToSearch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Sets the value of the First Name search field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetLastNameToSearch",
							"link": "M_Blueshirt_Core_Crm_SearchDialog_SetLastNameToSearch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Sets the value of the Last Name search field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXFirstNameField",
					"summary": "Returns an Xpath for the FirstName Field on a SerachDialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXFirstNameField",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXFirstNameField.htm",
					"title": "SearchDialog.getXFirstNameField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFirstNameField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXFirstNameField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFirstNameField</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXResultsBar",
					"summary": "Returns an Xpath for the Results Tool bar on a SerachDialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXResultsBar",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXResultsBar.htm",
					"title": "SearchDialog.getXResultsBar Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXResultsBar</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXResultsBar</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXResultsBar</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXLastNameField",
					"summary": "Returns an Xpath for the LastName Field on a SerachDialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXLastNameField",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXLastNameField.htm",
					"title": "SearchDialog.getXLastNameField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXLastNameField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXLastNameField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXLastNameField</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXGridNameField",
					"summary": "Returns an Xpath for the Grid Name Field on a SerachDialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXGridNameField",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXGridNameField.htm",
					"title": "SearchDialog.getXGridNameField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridNameField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXGridNameField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridNameField</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXSelectedResultsRow",
					"summary": "ConstantXPath value for finding a search dialog's selected row in the results pane.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXSelectedResultsRow",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXSelectedResultsRow.htm",
					"title": "SearchDialog.getXSelectedResultsRow Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectedResultsRow</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXSelectedResultsRow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectedResultsRow</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXNoRecordsFound",
					"summary": "Constant XPath value for checking if no search results were found on a search dialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXNoRecordsFound",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXNoRecordsFound.htm",
					"title": "SearchDialog.getXNoRecordsFound Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXNoRecordsFound</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXNoRecordsFound</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXNoRecordsFound</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXSearchButton",
					"summary": "Constant XPath value for finding a Search button WebElement.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXSearchButton",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXSearchButton.htm",
					"title": "SearchDialog.getXSearchButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSearchButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXSearchButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSearchButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXSelectButton",
					"summary": "Constant XPath value for finding a Select button WebElement.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXSelectButton",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXSelectButton.htm",
					"title": "SearchDialog.getXSelectButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXSelectButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.SearchDialog.getXSearchResultsGrid",
					"summary": "Returns an Xpath for the Search Results Grid on a SerachDialog.",
					"key": "F_Blueshirt_Core_Crm_SearchDialog_getXSearchResultsGrid",
					"filename": "F_Blueshirt_Core_Crm_SearchDialog_getXSearchResultsGrid.htm",
					"title": "SearchDialog.getXSearchResultsGrid Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSearchResultsGrid</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXSearchResultsGrid</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSearchResultsGrid</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.Search",
					"summary": "Press search on the SearchDialog.",
					"key": "M_Blueshirt_Core_Crm_SearchDialog_Search",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_Search.htm",
					"title": "SearchDialog.Search Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Search</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Search</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Search</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.Select",
					"summary": "Click the 'Select' button",
					"key": "M_Blueshirt_Core_Crm_SearchDialog_Select",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_Select.htm",
					"title": "SearchDialog.Select Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Select</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Select</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Select</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.CheckConstituentSearchResultsToolbarContains(System.String)",
					"summary": "Checks that the search results tool bar message contains the specified string on a SearchDialog. Throws an exception on failure.",
					"param": {
						"_": "The string to check for.",
						"name": "expected"
					},
					"key": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsToolbarContains",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsToolbarContains.htm",
					"title": "SearchDialog.CheckConstituentSearchResultsToolbarContains Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CheckConstituentSearchResultsToolbarContains</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">expected</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CheckConstituentSearchResultsToolbarContains</span> ( \r\n\t<span class=\"parameter\">expected</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CheckConstituentSearchResultsToolbarContains</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">expected</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.SetFirstNameToSearch(System.String)",
					"summary": "Sets the value of the First Name search field.",
					"param": {
						"_": "The text to set.",
						"name": "name"
					},
					"key": "M_Blueshirt_Core_Crm_SearchDialog_SetFirstNameToSearch",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_SetFirstNameToSearch.htm",
					"title": "SearchDialog.SetFirstNameToSearch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFirstNameToSearch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFirstNameToSearch</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFirstNameToSearch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.SetLastNameToSearch(System.String)",
					"summary": "Sets the value of the Last Name search field.",
					"param": {
						"_": "The text to set.",
						"name": "name"
					},
					"key": "M_Blueshirt_Core_Crm_SearchDialog_SetLastNameToSearch",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_SetLastNameToSearch.htm",
					"title": "SearchDialog.SetLastNameToSearch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetLastNameToSearch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetLastNameToSearch</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetLastNameToSearch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.SelectFirstResult",
					"summary": "Select the first result returned. If no results are returned, Cancel is clicked and an Exception is thrown.",
					"key": "M_Blueshirt_Core_Crm_SearchDialog_SelectFirstResult",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_SelectFirstResult.htm",
					"title": "SearchDialog.SelectFirstResult Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectFirstResult</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectFirstResult</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectFirstResult</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SearchDialog.CheckConstituentSearchResultsContain(System.String)",
					"summary": "Checks that the search results contain the specified string on a SearchDialog. Throws an exception on failure.",
					"param": {
						"_": "The string to check for.",
						"name": "expected"
					},
					"key": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsContain",
					"filename": "M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsContain.htm",
					"title": "SearchDialog.CheckConstituentSearchResultsContain Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CheckConstituentSearchResultsContain</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">expected</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CheckConstituentSearchResultsContain</span> ( \r\n\t<span class=\"parameter\">expected</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CheckConstituentSearchResultsContain</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">expected</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.AdHocQueryDialog",
					"summary": "Class to handle the interactions for adding/editing an ad-hoc query dialog.",
					"key": "T_Blueshirt_Core_Crm_AdHocQueryDialog",
					"filename": "T_Blueshirt_Core_Crm_AdHocQueryDialog.htm",
					"title": "AdHocQueryDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">AdHocQueryDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">AdHocQueryDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">AdHocQueryDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddFilterField",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddFilterField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a field and add it as a filter field uing the provided criteria."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddOutputField",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddOutputField.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a field and add it as an output field to display."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ApplyCriteria",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ApplyCriteria.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields on the apply criteria dialog that appears when adding a filter field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ExpandNode",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ExpandNode.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Expand a tree node if it is collapsed."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "FilterBy",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_FilterBy.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a filter category in the 'Browse for fields in' panel"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SaveAndClose",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SaveAndClose.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Save and close' button"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetSaveOptions",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SetSaveOptions.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the values on the 'Set save options' tab"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.AdHocQueryDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_AdHocQueryDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_AdHocQueryDialog_DialogIds.htm",
					"title": "AdHocQueryDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.AdHocQueryDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_AdHocQueryDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_AdHocQueryDialog_SupportedFields.htm",
					"title": "AdHocQueryDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.ExpandNode(System.String)",
					"summary": "Expand a tree node if it is collapsed.",
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ExpandNode",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ExpandNode.htm",
					"title": "AdHocQueryDialog.ExpandNode Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ExpandNode</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">xPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ExpandNode</span> ( \r\n\t<span class=\"parameter\">xPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ExpandNode</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">xPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.FilterBy(System.String)",
					"summary": "Select a filter category in the 'Browse for fields in' panel",
					"param": {
						"_": "The complete filter path.  Nested filters should be provided as a complete\r\n            path (i.e. 'Revenue\\Constituent\\Spouse'",
						"name": "filter"
					},
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_FilterBy",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_FilterBy.htm",
					"title": "AdHocQueryDialog.FilterBy Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">FilterBy</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">filter</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">FilterBy</span> ( \r\n\t<span class=\"parameter\">filter</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">FilterBy</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">filter</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.ApplyCriteria(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields on the apply criteria dialog that appears when adding a filter field.",
					"param": {
						"_": "Mapping of the unique field ids to their desired values.",
						"name": "criteria"
					},
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ApplyCriteria",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_ApplyCriteria.htm",
					"title": "AdHocQueryDialog.ApplyCriteria Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ApplyCriteria</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">criteria</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ApplyCriteria</span> ( \r\n\t<span class=\"parameter\">criteria</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ApplyCriteria</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">criteria</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.AddFilterField(System.String,TechTalk.SpecFlow.TableRow)",
					"summary": "Select a field and add it as a filter field uing the provided criteria.",
					"param": [
						{
							"_": "The field to add.",
							"name": "fieldCaption"
						},
						{
							"_": "Mapping of the unique field ids to their desired values for the criteria dialog.",
							"name": "criteria"
						}
					],
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddFilterField",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddFilterField.htm",
					"title": "AdHocQueryDialog.AddFilterField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddFilterField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldCaption</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">criteria</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddFilterField</span> ( \r\n\t<span class=\"parameter\">fieldCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">criteria</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddFilterField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldCaption</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">criteria</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.AddOutputField(System.String)",
					"summary": "Select a field and add it as an output field to display.",
					"param": {
						"_": "The field to add.",
						"name": "fieldCaption"
					},
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddOutputField",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_AddOutputField.htm",
					"title": "AdHocQueryDialog.AddOutputField Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddOutputField</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddOutputField</span> ( \r\n\t<span class=\"parameter\">fieldCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddOutputField</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.SetSaveOptions(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the values on the 'Set save options' tab",
					"param": {
						"_": "Dictionary mapping of the field captions to their desired values",
						"name": "options"
					},
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SetSaveOptions",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SetSaveOptions.htm",
					"title": "AdHocQueryDialog.SetSaveOptions Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSaveOptions</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">options</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetSaveOptions</span> ( \r\n\t<span class=\"parameter\">options</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetSaveOptions</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">options</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryDialog.SaveAndClose",
					"summary": "Click the 'Save and close' button",
					"key": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SaveAndClose",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryDialog_SaveAndClose.htm",
					"title": "AdHocQueryDialog.SaveAndClose Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SaveAndClose</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SaveAndClose</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SaveAndClose</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MultiLevelEventDialog",
					"summary": "Class to handle the interactions for adding/editing an add a multi-level event dialog.",
					"key": "T_Blueshirt_Core_Crm_MultiLevelEventDialog",
					"filename": "T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm",
					"title": "MultiLevelEventDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MultiLevelEventDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MultiLevelEventDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MultiLevelEventDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddChildEvent",
							"link": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddChildEvent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an event to the multi-level event as a child to a specified event already added to the multi-level event."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddExistingEvent",
							"link": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddExistingEvent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an event to the multi-level event. If an event if currently selected in the hierachy, then the new event will be added a child to the selected event."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CopyFrom",
							"link": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_CopyFrom.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a parent event to add a new child event to. The child event will be copied from an existing event."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXAddedEvent",
							"link": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_getXAddedEvent.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetTemplate",
							"link": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_SetTemplate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the 'Event management template' dropdown."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.MultiLevelEventDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_MultiLevelEventDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_MultiLevelEventDialog_DialogIds.htm",
					"title": "MultiLevelEventDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiLevelEventDialog.getXAddedEvent(System.String)",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_getXAddedEvent",
					"filename": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_getXAddedEvent.htm",
					"title": "MultiLevelEventDialog.getXAddedEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAddedEvent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">existingEvent</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXAddedEvent</span> ( \r\n\t<span class=\"parameter\">existingEvent</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAddedEvent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">existingEvent</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiLevelEventDialog.SetTemplate(System.String)",
					"summary": "Set the 'Event management template' dropdown.",
					"param": {
						"_": "The name of the template to set.",
						"name": "templateName"
					},
					"key": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_SetTemplate",
					"filename": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_SetTemplate.htm",
					"title": "MultiLevelEventDialog.SetTemplate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetTemplate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">templateName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetTemplate</span> ( \r\n\t<span class=\"parameter\">templateName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetTemplate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">templateName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiLevelEventDialog.AddExistingEvent(System.String)",
					"summary": "Add an event to the multi-level event. If an event if currently selected in the hierachy, then the new event will be added a child to the selected event.",
					"param": {
						"_": "The name of the event to add.",
						"name": "eventName"
					},
					"key": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddExistingEvent",
					"filename": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddExistingEvent.htm",
					"title": "MultiLevelEventDialog.AddExistingEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddExistingEvent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">eventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddExistingEvent</span> ( \r\n\t<span class=\"parameter\">eventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddExistingEvent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">eventName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiLevelEventDialog.AddChildEvent(System.String,System.String)",
					"summary": "Add an event to the multi-level event as a child to a specified event already added to the multi-level event.",
					"param": [
						{
							"_": "The name of the event to add.",
							"name": "eventName"
						},
						{
							"_": "The name of the parent event.",
							"name": "parentEventName"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddChildEvent",
					"filename": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddChildEvent.htm",
					"title": "MultiLevelEventDialog.AddChildEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddChildEvent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">eventName</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">parentEventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddChildEvent</span> ( \r\n\t<span class=\"parameter\">eventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">parentEventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddChildEvent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">eventName</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">parentEventName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiLevelEventDialog.CopyFrom(System.String,System.String,System.String)",
					"summary": "Select a parent event to add a new child event to. The child event will be copied from an existing event.",
					"param": [
						{
							"_": "The name of the event to copy.",
							"name": "copyFromEventName"
						},
						{
							"_": "The name of the parent event to add the new event as a child to.",
							"name": "parentEventName"
						},
						{
							"_": "The name to set for the new event.",
							"name": "newEventName"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_CopyFrom",
					"filename": "M_Blueshirt_Core_Crm_MultiLevelEventDialog_CopyFrom.htm",
					"title": "MultiLevelEventDialog.CopyFrom Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyFrom</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">copyFromEventName</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">parentEventName</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">newEventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CopyFrom</span> ( \r\n\t<span class=\"parameter\">copyFromEventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">parentEventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">newEventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyFrom</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">copyFromEventName</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">parentEventName</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">newEventName</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.TaskDialog",
					"summary": "Class to handle the interactions for adding/editing a task dialog.",
					"key": "T_Blueshirt_Core_Crm_TaskDialog",
					"filename": "T_Blueshirt_Core_Crm_TaskDialog.htm",
					"title": "TaskDialog Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">TaskDialog</span> : <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">TaskDialog</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Dialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">TaskDialog</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Dialog</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "CloseDialog",
							"link": "M_Blueshirt_Core_Crm_Dialog_CloseDialog.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from Dialog.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFields",
							"link": "M_Blueshirt_Core_Crm_TaskDialog_SetFields.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the fields to their desired values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetReminders",
							"link": "M_Blueshirt_Core_Crm_TaskDialog_SetReminders.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Set the reminders or the task. Always starts at the first row, replacing whatever existing rows might exist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.TaskDialog.DialogIds",
					"summary": "Static list of supported unique dialog id.",
					"key": "F_Blueshirt_Core_Crm_TaskDialog_DialogIds",
					"filename": "F_Blueshirt_Core_Crm_TaskDialog_DialogIds.htm",
					"title": "TaskDialog.DialogIds Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">string</span>[] <span class=\"identifier\">DialogIds</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">DialogIds</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>()"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"keyword\">array</span>&lt;<span class=\"identifier\">String</span>^&gt;^ <span class=\"identifier\">DialogIds</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.TaskDialog.SupportedFields",
					"summary": "Static mapping of supported field captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_TaskDialog_SupportedFields",
					"filename": "F_Blueshirt_Core_Crm_TaskDialog_SupportedFields.htm",
					"title": "TaskDialog.SupportedFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedFields</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.TaskDialog.SupportedRemindersGridFields",
					"summary": "Static mapping of supported Grid column captions to CrmField objects encapsulating all relevant variables needed to set the field's value.",
					"key": "F_Blueshirt_Core_Crm_TaskDialog_SupportedRemindersGridFields",
					"filename": "F_Blueshirt_Core_Crm_TaskDialog_SupportedRemindersGridFields.htm",
					"title": "TaskDialog.SupportedRemindersGridFields Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">CrmField</span>&gt; <span class=\"identifier\">SupportedRemindersGridFields</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">ReadOnly</span> <span class=\"identifier\">SupportedRemindersGridFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">CrmField</span>)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">initonly</span> <span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">CrmField</span>^&gt;^ <span class=\"identifier\">SupportedRemindersGridFields</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.TaskDialog.SetFields(TechTalk.SpecFlow.TableRow)",
					"summary": "Set the fields to their desired values.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "fields"
					},
					"key": "M_Blueshirt_Core_Crm_TaskDialog_SetFields",
					"filename": "M_Blueshirt_Core_Crm_TaskDialog_SetFields.htm",
					"title": "TaskDialog.SetFields Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">fields</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetFields</span> ( \r\n\t<span class=\"parameter\">fields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetFields</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">fields</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.TaskDialog.SetReminders(TechTalk.SpecFlow.Table)",
					"summary": "Set the reminders or the task. Always starts at the first row, replacing whatever existing rows might exist.",
					"param": {
						"_": "Table where each row represents a reminder to add.  \r\n            A row is a mapping of the 'Reminders' grid's column captions to the row's values.  ",
						"name": "reminders"
					},
					"key": "M_Blueshirt_Core_Crm_TaskDialog_SetReminders",
					"filename": "M_Blueshirt_Core_Crm_TaskDialog_SetReminders.htm",
					"title": "TaskDialog.SetReminders Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetReminders</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">reminders</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SetReminders</span> ( \r\n\t<span class=\"parameter\">reminders</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SetReminders</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">reminders</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.AnalysisFunctionalArea",
					"summary": "Class to handle interactions for the 'Analysis' functional area.",
					"key": "T_Blueshirt_Core_Crm_AnalysisFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_AnalysisFunctionalArea.htm",
					"title": "AnalysisFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">AnalysisFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">AnalysisFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">AnalysisFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "InformationLibrary",
							"link": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_InformationLibrary.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Information Library' Panel"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenQueryPanel",
							"link": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_OpenQueryPanel.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "TODO - THIS IS A CUSTOMIZATION IMPLEMENTATION FOR BHF AND SHOULD BE MOVED TO THEIR TEST SOLUTION"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.FunctionalArea",
					"summary": "Utility methods for operations on a functional area.",
					"key": "T_Blueshirt_Core_Crm_FunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_FunctionalArea.htm",
					"title": "FunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">FunctionalArea</span> : <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">FunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">FunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BaseComponent</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXAddMenu",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_getXAddMenu.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath to handle an Add menu."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXFaLink",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_getXFaLink.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an Xpath for a Functional Area link."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXFunctionalAreaTask(String)",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath for finding a task on a functional area page using the task link's caption."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXFunctionalAreaTask(String, String)",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats the unique XPath for finding a task on a functional area page using the grouping caption and task caption."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenLink(String)",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click on the functional area link."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenLink(String, String)",
							"link": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click on the functional area link."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.getXFaLink(System.String)",
					"summary": "Returns an Xpath for a Functional Area link.",
					"param": {
						"_": "The Link text to use.",
						"name": "linkText"
					},
					"returns": "",
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_getXFaLink",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_getXFaLink.htm",
					"title": "FunctionalArea.getXFaLink Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFaLink</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">linkText</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXFaLink</span> ( \r\n\t<span class=\"parameter\">linkText</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFaLink</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">linkText</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.getXAddMenu(System.String,System.String)",
					"summary": "Formats an XPath to handle an Add menu.",
					"param": [
						{
							"_": "The unique ID in the HTML Table element's id. i.e. 'ADDNEWGROUP'",
							"name": "addId"
						},
						{
							"_": "The caption of the add menu.  Defaults to 'Add new'",
							"name": "caption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_getXAddMenu",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_getXAddMenu.htm",
					"title": "FunctionalArea.getXAddMenu Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAddMenu</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">addId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span> = &quot;Add new&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXAddMenu</span> ( \r\n\t<span class=\"parameter\">addId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add new&quot;\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAddMenu</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">addId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span> = L&quot;Add new&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.getXFunctionalAreaTask(System.String,System.String)",
					"summary": "Formats an XPath for finding a task on a functional area page using the task link's caption.",
					"param": [
						{
							"_": "The caption of the Grouping header that the task belongs to.",
							"name": "groupCaption"
						},
						{
							"_": "The name of the task to interact with.",
							"name": "taskName"
						}
					],
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask.htm",
					"title": "FunctionalArea.getXFunctionalAreaTask Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFunctionalAreaTask</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXFunctionalAreaTask</span> ( \r\n\t<span class=\"parameter\">taskName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFunctionalAreaTask</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.getXFunctionalAreaTask(System.String)",
					"summary": "Formats an XPath for finding a task on a functional area page using the task link's caption.",
					"param": {
						"_": "The name/caption of the task.",
						"name": "taskName"
					},
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask.htm",
					"title": "FunctionalArea.getXFunctionalAreaTask Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFunctionalAreaTask</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXFunctionalAreaTask</span> ( \r\n\t<span class=\"parameter\">taskName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFunctionalAreaTask</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.OpenLink(System.String)",
					"summary": "Click on the functional area link.",
					"param": {
						"_": "The caption of the task link.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink.htm",
					"title": "FunctionalArea.OpenLink Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenLink</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenLink</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenLink</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FunctionalArea.OpenLink(System.String,System.String)",
					"summary": "Click on the functional area link.",
					"param": [
						{
							"_": "The group header caption of the task.",
							"name": "groupCaption"
						},
						{
							"_": "The caption of the task link.",
							"name": "linkCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink",
					"filename": "M_Blueshirt_Core_Crm_FunctionalArea_OpenLink.htm",
					"title": "FunctionalArea.OpenLink Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenLink</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenLink</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenLink</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AnalysisFunctionalArea.OpenQueryPanel",
					"summary": "TODO - THIS IS A CUSTOMIZATION IMPLEMENTATION FOR BHF AND SHOULD BE MOVED TO THEIR TEST SOLUTION",
					"key": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_OpenQueryPanel",
					"filename": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_OpenQueryPanel.htm",
					"title": "AnalysisFunctionalArea.OpenQueryPanel Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenQueryPanel</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenQueryPanel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenQueryPanel</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AnalysisFunctionalArea.InformationLibrary(System.String,System.String)",
					"summary": "Navigate to the 'Information Library' Panel",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Information library\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Information library\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_InformationLibrary",
					"filename": "M_Blueshirt_Core_Crm_AnalysisFunctionalArea_InformationLibrary.htm",
					"title": "AnalysisFunctionalArea.InformationLibrary Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">InformationLibrary</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Information library&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Information library&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">InformationLibrary</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Information library&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Information library&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">InformationLibrary</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Information library&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Information library&quot;\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.ConstituentsFunctionalArea",
					"summary": "Class to handle interactions for the 'Constituents' functional area.",
					"key": "T_Blueshirt_Core_Crm_ConstituentsFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm",
					"title": "ConstituentsFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">ConstituentsFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">ConstituentsFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">ConstituentsFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAnIndividual(String, String)",
							"link": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add an individual."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAnIndividual(TableRow, String, String)",
							"link": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add an individual, set the fields to the provided values, and save."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ConstituentExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Determine if at least a single matching constituent can be found based on the provided search field value and select it. Selects the first returned result, or cancels the search dialog if no results are found."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ConstituentSearch",
							"link": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentSearch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Search for a constituent and navigate to the first returned result. An Exception is thrown if no results are found."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenConstituentSearchDialog",
							"link": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_OpenConstituentSearchDialog.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentsFunctionalArea.ConstituentExists(System.String,System.String,System.String,System.String,System.String)",
					"summary": "Determine if at least a single matching constituent can be found based on the provided search field value and select it. Selects the first returned result, or cancels the search dialog if no results are found.",
					"param": [
						{
							"_": "The desired value of the search criteria field.",
							"name": "fieldValue"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Constituents\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Constituent search\".",
							"name": "taskCaption"
						},
						{
							"_": "The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"ConstituentSearchbyNameorLookupID\".",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"KEYNAME\".",
							"name": "fieldId"
						}
					],
					"returns": "True if at least one matching element is found, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentExists.htm",
					"title": "ConstituentsFunctionalArea.ConstituentExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConstituentExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldValue</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Constituents&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Constituent search&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span> = &quot;ConstituentSearchbyNameorLookupID&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldId</span> = &quot;KEYNAME&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ConstituentExists</span> ( \r\n\t<span class=\"parameter\">fieldValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Constituents&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Constituent search&quot;,\r\n\tOptional <span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;ConstituentSearchbyNameorLookupID&quot;,\r\n\tOptional <span class=\"parameter\">fieldId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;KEYNAME&quot;\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConstituentExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldValue</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Constituents&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Constituent search&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span> = L&quot;ConstituentSearchbyNameorLookupID&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldId</span> = L&quot;KEYNAME&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentsFunctionalArea.AddAnIndividual(System.String,System.String)",
					"summary": "Open the dialog to add an individual.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Individuals and households\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Add an individual\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual",
					"filename": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual.htm",
					"title": "ConstituentsFunctionalArea.AddAnIndividual Method (String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAnIndividual</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Individuals and households&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Add an individual&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAnIndividual</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Individuals and households&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add an individual&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAnIndividual</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Individuals and households&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Add an individual&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentsFunctionalArea.AddAnIndividual(TechTalk.SpecFlow.TableRow,System.String,System.String)",
					"summary": "Open the dialog to add an individual.",
					"param": [
						{
							"_": "Mapping of the 'Add an individual' dialog's field captions to their desired values.",
							"name": "individual"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Individuals and households\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Add an individual\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual",
					"filename": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual.htm",
					"title": "ConstituentsFunctionalArea.AddAnIndividual Method (String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAnIndividual</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Individuals and households&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Add an individual&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAnIndividual</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Individuals and households&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add an individual&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAnIndividual</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Individuals and households&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Add an individual&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentsFunctionalArea.ConstituentSearch(System.String,System.String,System.String,System.String,System.String)",
					"summary": "Search for a constituent and navigate to the first returned result. An Exception is thrown if no results are found.",
					"param": [
						{
							"_": "The desired value of the search criteria field.",
							"name": "fieldValue"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Constituents\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Constituent search\".",
							"name": "taskCaption"
						},
						{
							"_": "The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"ConstituentSearchbyNameorLookupID\".",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"KEYNAME\".",
							"name": "fieldId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentSearch",
					"filename": "M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentSearch.htm",
					"title": "ConstituentsFunctionalArea.ConstituentSearch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ConstituentSearch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldValue</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Constituents&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Constituent search&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span> = &quot;ConstituentSearchbyNameorLookupID&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldId</span> = &quot;KEYNAME&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ConstituentSearch</span> ( \r\n\t<span class=\"parameter\">fieldValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Constituents&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Constituent search&quot;,\r\n\tOptional <span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;ConstituentSearchbyNameorLookupID&quot;,\r\n\tOptional <span class=\"parameter\">fieldId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;KEYNAME&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ConstituentSearch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldValue</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Constituents&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Constituent search&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span> = L&quot;ConstituentSearchbyNameorLookupID&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldId</span> = L&quot;KEYNAME&quot;\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.EventsFunctionalArea",
					"summary": "Class to handle interactions for the 'Events' functional area.",
					"key": "T_Blueshirt_Core_Crm_EventsFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_EventsFunctionalArea.htm",
					"title": "EventsFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">EventsFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">EventsFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">EventsFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddEventAddLanguageSpecificTextSet(\"LSTB473993A_4?cs=()|vb=|cpp=()|nu=()|fs=()\");",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add an event."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddEvent(TableRow)",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add an event, set the fields to their desired values, and save."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddMultiEvent",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddMultiEvent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog for adding a 'Multi-level event'."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CollapseCalendar",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_CollapseCalendar.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Collapse the Event Calendar if it is expanded and wait for the collapse to complete."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EventManagementTemplates",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventManagementTemplates.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Event Management Templates' panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EventSearch",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventSearch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Search for an event and select the first matching record."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Locations",
							"link": "M_Blueshirt_Core_Crm_EventsFunctionalArea_Locations.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Locations' panel."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.AddEvent",
					"summary": "Open the dialog to add an event.",
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent.htm",
					"title": "EventsFunctionalArea.AddEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddEvent</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddEvent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddEvent</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.AddEvent(TechTalk.SpecFlow.TableRow)",
					"summary": "Open the dialog to add an event.",
					"param": {
						"_": "Dictionary mapping field caption keys to their values.",
						"name": "eventValue"
					},
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent.htm",
					"title": "EventsFunctionalArea.AddEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddEvent</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddEvent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddEvent</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.AddMultiEvent",
					"summary": "Open the dialog for adding a 'Multi-level event'.",
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddMultiEvent",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_AddMultiEvent.htm",
					"title": "EventsFunctionalArea.AddMultiEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMultiEvent</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddMultiEvent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMultiEvent</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.EventSearch(System.String,System.String,System.String,System.String,System.String)",
					"summary": "Search for an event and select the first matching record.",
					"param": [
						{
							"_": "The desired value of the search criteria field.",
							"name": "fieldValue"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Fundraising events\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Event search\".",
							"name": "taskCaption"
						},
						{
							"_": "The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"EventSearch\".",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"NAME\".",
							"name": "fieldId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventSearch",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventSearch.htm",
					"title": "EventsFunctionalArea.EventSearch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EventSearch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldValue</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Fundraising events&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Event search&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span> = &quot;EventSearch&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldId</span> = &quot;NAME&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EventSearch</span> ( \r\n\t<span class=\"parameter\">fieldValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Fundraising events&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Event search&quot;,\r\n\tOptional <span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;EventSearch&quot;,\r\n\tOptional <span class=\"parameter\">fieldId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;NAME&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EventSearch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldValue</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Fundraising events&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Event search&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span> = L&quot;EventSearch&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldId</span> = L&quot;NAME&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.Locations(System.String,System.String)",
					"summary": "Navigate to the 'Locations' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Fundraising events\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Locations\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_Locations",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_Locations.htm",
					"title": "EventsFunctionalArea.Locations Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Locations</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Fundraising events&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Locations&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Locations</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Fundraising events&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Locations&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Locations</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Fundraising events&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Locations&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.EventManagementTemplates(System.String,System.String)",
					"summary": "Navigate to the 'Event Management Templates' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Fundraising events\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Event management templates\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventManagementTemplates",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_EventManagementTemplates.htm",
					"title": "EventsFunctionalArea.EventManagementTemplates Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EventManagementTemplates</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Fundraising events&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Event management templates&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EventManagementTemplates</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Fundraising events&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Event management templates&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EventManagementTemplates</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Fundraising events&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Event management templates&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventsFunctionalArea.CollapseCalendar",
					"summary": "Collapse the Event Calendar if it is expanded and wait for the collapse to complete.",
					"key": "M_Blueshirt_Core_Crm_EventsFunctionalArea_CollapseCalendar",
					"filename": "M_Blueshirt_Core_Crm_EventsFunctionalArea_CollapseCalendar.htm",
					"title": "EventsFunctionalArea.CollapseCalendar Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseCalendar</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CollapseCalendar</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseCalendar</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.FundraisingFunctionalArea",
					"summary": "Class to handle interactions for the 'Fundraising' functional area.",
					"key": "T_Blueshirt_Core_Crm_FundraisingFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_FundraisingFunctionalArea.htm",
					"title": "FundraisingFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">FundraisingFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">FundraisingFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">FundraisingFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DesignationExists",
							"link": "M_Blueshirt_Core_Crm_FundraisingFunctionalArea_DesignationExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a designation exists and navigate to it if so."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.FundraisingFunctionalArea.DesignationExists(System.String,System.String,System.String,System.String,System.String)",
					"summary": "Check if a designation exists and navigate to it if so.",
					"param": [
						{
							"_": "The name of the designation.",
							"name": "designation"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Fundraising\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Designation search\"",
							"name": "taskCaption"
						},
						{
							"_": "The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"DesignationSearch\".",
							"name": "dialogId"
						},
						{
							"_": "The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"COMBINEDSEARCH\".",
							"name": "fieldId"
						}
					],
					"returns": "True if the designation exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_FundraisingFunctionalArea_DesignationExists",
					"filename": "M_Blueshirt_Core_Crm_FundraisingFunctionalArea_DesignationExists.htm",
					"title": "FundraisingFunctionalArea.DesignationExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">designation</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Fundraising&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Designation search&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span> = &quot;DesignationSearch&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">fieldId</span> = &quot;COMBINEDSEARCH&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">DesignationExists</span> ( \r\n\t<span class=\"parameter\">designation</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Fundraising&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Designation search&quot;,\r\n\tOptional <span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;DesignationSearch&quot;,\r\n\tOptional <span class=\"parameter\">fieldId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;COMBINEDSEARCH&quot;\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">designation</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Fundraising&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Designation search&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span> = L&quot;DesignationSearch&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">fieldId</span> = L&quot;COMBINEDSEARCH&quot;\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.HomeFunctionalArea",
					"summary": "Class to handle interactions for the 'Home' functional area.",
					"key": "T_Blueshirt_Core_Crm_HomeFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_HomeFunctionalArea.htm",
					"title": "HomeFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">HomeFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">HomeFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">HomeFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MarketingAndCommFunctionalArea",
					"summary": "Class to handle interactions for the 'Marketing and Communications' functional area.",
					"key": "T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm",
					"title": "MarketingAndCommFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAndCommFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAndCommFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAndCommFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "MarketingAcknowledgements",
							"link": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_MarketingAcknowledgements.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Marketing Acknowledgements' panel."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Packages",
							"link": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Packages.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Packages' panel and then navigate to the 'View packages' panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Receipts",
							"link": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Receipts.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Receipts' panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Segments",
							"link": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Segments.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Segments' panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAndCommFunctionalArea.Receipts(System.String,System.String)",
					"summary": "Navigate to the 'Receipts' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Donor relations\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Receipts\"",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Receipts",
					"filename": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Receipts.htm",
					"title": "MarketingAndCommFunctionalArea.Receipts Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Receipts</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Donor relations&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Receipts&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Receipts</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Donor relations&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Receipts&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Receipts</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Donor relations&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Receipts&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAndCommFunctionalArea.MarketingAcknowledgements(System.String,System.String)",
					"summary": "Navigate to the 'Marketing Acknowledgements' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Marketing efforts\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Marketing acknowledgements\"",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_MarketingAcknowledgements",
					"filename": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_MarketingAcknowledgements.htm",
					"title": "MarketingAndCommFunctionalArea.MarketingAcknowledgements Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">MarketingAcknowledgements</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Marketing efforts&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Marketing acknowledgements&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">MarketingAcknowledgements</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Marketing efforts&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Marketing acknowledgements&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">MarketingAcknowledgements</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Marketing efforts&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Marketing acknowledgements&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAndCommFunctionalArea.Segments(System.String,System.String)",
					"summary": "Navigate to the 'Segments' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Acquisition and segmentation\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Segments\"",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Segments",
					"filename": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Segments.htm",
					"title": "MarketingAndCommFunctionalArea.Segments Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Segments</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Acquisition and segmentation&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Segments&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Segments</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Acquisition and segmentation&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Segments&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Segments</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Acquisition and segmentation&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Segments&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAndCommFunctionalArea.Packages(System.String,System.String)",
					"summary": "Navigate to the 'Packages' panel and then navigate to the 'View packages' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Packages\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Packages\"",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Packages",
					"filename": "M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Packages.htm",
					"title": "MarketingAndCommFunctionalArea.Packages Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Packages</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Packages&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Packages&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Packages</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Packages&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Packages&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Packages</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Packages&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Packages&quot;\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.ProspectsFunctionalArea",
					"summary": "Class to handle interactions for the 'Prospects' functional area.",
					"key": "T_Blueshirt_Core_Crm_ProspectsFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_ProspectsFunctionalArea.htm",
					"title": "ProspectsFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">ProspectsFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">ProspectsFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">ProspectsFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CollapseResearchLists",
							"link": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_CollapseResearchLists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Collapse the Research Lists Calendar if it is expanded and wait for the collapse to complete."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "MajorGivingSetup",
							"link": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_MajorGivingSetup.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Major Giving Setup' panel."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ProspectsFunctionalArea.MajorGivingSetup(System.String,System.String)",
					"summary": "Navigate to the 'Major Giving Setup' panel.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Configuration\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Major giving setup\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_MajorGivingSetup",
					"filename": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_MajorGivingSetup.htm",
					"title": "ProspectsFunctionalArea.MajorGivingSetup Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">MajorGivingSetup</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Configuration&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Major giving setup&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">MajorGivingSetup</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Configuration&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Major giving setup&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">MajorGivingSetup</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Configuration&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Major giving setup&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ProspectsFunctionalArea.CollapseResearchLists",
					"summary": "Collapse the Research Lists Calendar if it is expanded and wait for the collapse to complete.",
					"key": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_CollapseResearchLists",
					"filename": "M_Blueshirt_Core_Crm_ProspectsFunctionalArea_CollapseResearchLists.htm",
					"title": "ProspectsFunctionalArea.CollapseResearchLists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseResearchLists</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CollapseResearchLists</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseResearchLists</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.RevenueFunctionalArea",
					"summary": "Class to handle interactions for the 'Revenue' functional area.",
					"key": "T_Blueshirt_Core_Crm_RevenueFunctionalArea",
					"filename": "T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm",
					"title": "RevenueFunctionalArea Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">RevenueFunctionalArea</span> : <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">RevenueFunctionalArea</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">FunctionalArea</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">RevenueFunctionalArea</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">FunctionalArea</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAPayment",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPayment.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add a payment."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAPledge(String, String)",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add a pledge."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAPledge(TableRow, String, String)",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the dialog to add a pledge, set its values, and save."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "BatchEntry",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_BatchEntry.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Batch Entry' panel"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PledgeSubtypes",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_PledgeSubtypes.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Pledge Subtypes' panel"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "TransactionSearchByConstituent",
							"link": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_TransactionSearchByConstituent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Search for a revenue record by all records associated with a constituent and select the first returned result."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.AddAPayment(System.String,System.String)",
					"summary": "Open the dialog to add a payment.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Transactions\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Add a payment\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPayment",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPayment.htm",
					"title": "RevenueFunctionalArea.AddAPayment Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPayment</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Transactions&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Add a payment&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAPayment</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transactions&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add a payment&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPayment</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Transactions&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Add a payment&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.AddAPledge(System.String,System.String)",
					"summary": "Open the dialog to add a pledge.",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Transactions\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Add a pledge\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge.htm",
					"title": "RevenueFunctionalArea.AddAPledge Method (String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPledge</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Transactions&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Add a pledge&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAPledge</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transactions&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add a pledge&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPledge</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Transactions&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Add a pledge&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.AddAPledge(TechTalk.SpecFlow.TableRow,System.String,System.String)",
					"summary": "Open the dialog to add a pledge.",
					"param": [
						{
							"_": "Mapping of the 'Add a pledge' dialog's field captions to their desired values.",
							"name": "pledge"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Transactions\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Add a pledge\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge.htm",
					"title": "RevenueFunctionalArea.AddAPledge Method (String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPledge</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Transactions&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Add a pledge&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAPledge</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transactions&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add a pledge&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAPledge</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Transactions&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Add a pledge&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.BatchEntry(System.String,System.String)",
					"summary": "Navigate to the 'Batch Entry' panel",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Transactions\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Batch entry\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_BatchEntry",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_BatchEntry.htm",
					"title": "RevenueFunctionalArea.BatchEntry Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">BatchEntry</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Transactions&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Batch entry&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">BatchEntry</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transactions&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Batch entry&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">BatchEntry</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Transactions&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Batch entry&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.PledgeSubtypes(System.String,System.String)",
					"summary": "Navigate to the 'Pledge Subtypes' panel",
					"param": [
						{
							"_": "The group header caption of the task.  Defaults to \"Configuration\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Pledge subtypes\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_PledgeSubtypes",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_PledgeSubtypes.htm",
					"title": "RevenueFunctionalArea.PledgeSubtypes Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">PledgeSubtypes</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Configuration&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Pledge subtypes&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">PledgeSubtypes</span> ( \r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Configuration&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Pledge subtypes&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">PledgeSubtypes</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Configuration&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Pledge subtypes&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueFunctionalArea.TransactionSearchByConstituent(System.String,System.String,System.String)",
					"summary": "Search for a revenue record by all records associated with a constituent and select the first returned result.",
					"param": [
						{
							"_": "The last name of the constituent.",
							"name": "constituent"
						},
						{
							"_": "The group header caption of the task.  Defaults to \"Transactions\".",
							"name": "groupCaption"
						},
						{
							"_": "The link caption of the task.  Defaults to \"Transaction search\".",
							"name": "taskCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_TransactionSearchByConstituent",
					"filename": "M_Blueshirt_Core_Crm_RevenueFunctionalArea_TransactionSearchByConstituent.htm",
					"title": "RevenueFunctionalArea.TransactionSearchByConstituent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">TransactionSearchByConstituent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">constituent</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">groupCaption</span> = &quot;Transactions&quot;,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskCaption</span> = &quot;Transaction search&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">TransactionSearchByConstituent</span> ( \r\n\t<span class=\"parameter\">constituent</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">groupCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transactions&quot;,\r\n\tOptional <span class=\"parameter\">taskCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Transaction search&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">TransactionSearchByConstituent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">constituent</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">groupCaption</span> = L&quot;Transactions&quot;, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskCaption</span> = L&quot;Transaction search&quot;\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.AdHocQueryPanel",
					"summary": "Class to handle interactions for the 'Ad-hoc Query' panel.",
					"key": "T_Blueshirt_Core_Crm_AdHocQueryPanel",
					"filename": "T_Blueshirt_Core_Crm_AdHocQueryPanel.htm",
					"title": "AdHocQueryPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">AdHocQueryPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">AdHocQueryPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">AdHocQueryPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPanelHeader",
							"link": "M_Blueshirt_Core_Crm_AdHocQueryPanel_IsPanelHeader.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the Ad-Hoc Query Panel has the provided name in the header."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.Panel",
					"summary": "Base class to handle interactions for panels.",
					"key": "T_Blueshirt_Core_Crm_Panel",
					"filename": "T_Blueshirt_Core_Crm_Panel.htm",
					"title": "Panel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">Panel</span> : <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">Panel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">Panel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BaseComponent</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AdditionalDatalistPagesExist",
							"link": "M_Blueshirt_Core_Crm_Panel_AdditionalDatalistPagesExist.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if additional pages exist for a datalist to load. If so load the page."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ClickSectionAddButton",
							"link": "M_Blueshirt_Core_Crm_Panel_ClickSectionAddButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Add' button of a section."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CollapseSection",
							"link": "M_Blueshirt_Core_Crm_Panel_CollapseSection.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Collapse a section if it is expanded and a collapse/expand button exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ExpandRow",
							"link": "M_Blueshirt_Core_Crm_Panel_ExpandRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Expand a row if it is not already expanded."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDataListColumnValue",
							"link": "M_Blueshirt_Core_Crm_Panel_getXDataListColumnValue.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the DOM index of a datalist column and the value for that column, return an XPath to append to a datalist XPath for finding that value in the requested column index. No element will be found if the value does not exist in this column."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDatalistRowLinkByActionAndCaption",
							"link": "M_Blueshirt_Core_Crm_Panel_getXDatalistRowLinkByActionAndCaption.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath for handling a link on any datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDatalistSpan",
							"link": "M_Blueshirt_Core_Crm_Panel_getXDatalistSpan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDiv",
							"link": "M_Blueshirt_Core_Crm_Panel_getXDiv.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and div, return a unique identifier XPath to find the DIV field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDuplicateSectionDatalistColumnHeaders",
							"link": "M_Blueshirt_Core_Crm_Panel_getXDuplicateSectionDatalistColumnHeaders.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "XPath to get the TR row of column headers for a section's datalist when multiple sections with matching captions exists for a single panel on different tabs."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGrid",
							"link": "M_Blueshirt_Core_Crm_Panel_getXGrid.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find a grid/datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridHeaders",
							"link": "M_Blueshirt_Core_Crm_Panel_getXGridHeaders.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find the TR header row of a grid/datalist that contains the column captions."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridRow",
							"link": "M_Blueshirt_Core_Crm_Panel_getXGridRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath to find a single row in a grid/datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXGridRows",
							"link": "M_Blueshirt_Core_Crm_Panel_getXGridRows.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find the TR rows of a grid/datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXInnerTab",
							"link": "M_Blueshirt_Core_Crm_Panel_getXInnerTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath for a Tab in an inner Tab bar."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelHeaderAddLanguageSpecificTextSet(\"LST7F1E7F6D_3?cs=()|vb=|cpp=()|nu=()|fs=()\");",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Generic XPath to get the panel header."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelHeader(String)",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formatter for an XPath to find a panel header with a specific image type."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelHeaderByText",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderByText.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find a panel header containing the provided text."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelHeaderLinkAddLanguageSpecificTextSet(\"LST7F1E7F6D_4?cs=()|vb=|cpp=()|nu=()|fs=()\");",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for finding a context link located in the header of a panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelHeaderLink(String)",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for finding a link based on its caption located in the header of a panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXPanelTab",
							"link": "M_Blueshirt_Core_Crm_Panel_getXPanelTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSection",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSection.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the caption header of a section, return a unique identifier XPath for handling the section WebElement."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionAddButton",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionAddButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the caption header of a section, formats an XPath for handling the Add button."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistColumnHeaders",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistColumnHeaders.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "XPath to get the TR row of column headers for a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistCurrentPageIndex",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistCurrentPageIndex.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find the top-right index DIV whose text will be the current page index of a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistPageIndexButtons",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistPageIndexButtons.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find all top-right indexing buttons for a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistRow",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats a unique XPath to find a single datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistRows",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRows.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "XPath to get the TR datalist rows of a section."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionExpandButton",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionExpandButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath to get the expand/collpase button of a section"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionViewForm",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionViewForm.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for a section's view form root."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionViewFormSpan",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionViewFormSpan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to append to a section view form that has an item with the provided caption and CONTAINING (not matching) the value. No element will be found if the caption does not exist with this value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionWidget",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSectionWidget.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an XPath to get the DIV parent of the Research Lists UI widget whose 'stlye' attribute contains visibility info about the widget."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSelectedDatalistRowButton",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowButton.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for handling a button on the selected datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSelectedDatalistRowLinkByAction",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByAction.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for handling a link on the selected datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSelectedDatalistRowLinkByCaption",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByCaption.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for handling a link on the selected datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSelectedDatalistRowLinkById",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkById.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath for handling a link on the selected datalist row."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSpan",
							"link": "M_Blueshirt_Core_Crm_Panel_getXSpan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the unique HTML element ids of a dialog and span, return a unique identifier XPath to find the SPAN field."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTab",
							"link": "M_Blueshirt_Core_Crm_Panel_getXTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats an XPath for a Tab in a top Tab bar."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXViewForm",
							"link": "M_Blueshirt_Core_Crm_Panel_getXViewForm.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an XPath to find a single view form in a section. Field values will be checked to CONTAIN (not match) the provided values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GridRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_GridRowExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a grid/datalist row exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GridRowExists(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_GridRowExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a grid/datalist row exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPanelHeader",
							"link": "M_Blueshirt_Core_Crm_Panel_IsPanelHeader.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the panel header's text matches the expected value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPanelType",
							"link": "M_Blueshirt_Core_Crm_Panel_IsPanelType.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the panel header's image contains the provided image type."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenTab",
							"link": "M_Blueshirt_Core_Crm_Panel_OpenTab.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a row exists in a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists_2.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a row exists in a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a row exists in a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(TableRow, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists_3.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a row exists in a section's datalist."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionViewFormExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a view form exists in a section CONTAINING (not identically matching) the provided values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionViewFormExists(TableRow, String, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check whether a view form exists in a section CONTAINING (not identically matching) the provided values."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectDuplicateSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken. Use this when the same panel has tabs with the same section caption."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectDuplicateSectionDatalistRow(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken. Use this when the same panel has tabs with the same section caption."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectInnerTab",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectInnerTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a Tab from an inner Tab bar."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow_2.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(TableRow, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_25?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow_3.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a row in a section's datalist. If the row is already selected, no action is taken."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectTab",
							"link": "M_Blueshirt_Core_Crm_Panel_SelectTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a Tab from the top Tab bar."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "WaitForPanelHeaderNotContain",
							"link": "M_Blueshirt_Core_Crm_Panel_WaitForPanelHeaderNotContain.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait the default time for the panel header to not contain the provided value."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "WaitForPanelType",
							"link": "M_Blueshirt_Core_Crm_Panel_WaitForPanelType.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait until the panel header's image contains the provided image type. A WebDriverTimeoutException is thrown is no displayed panel header loads with the image."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panel.getXTabsBarRightScroller",
					"summary": "Constant XPath for getting the right scroller on the top Tab bar.",
					"key": "F_Blueshirt_Core_Crm_Panel_getXTabsBarRightScroller",
					"filename": "F_Blueshirt_Core_Crm_Panel_getXTabsBarRightScroller.htm",
					"title": "Panel.getXTabsBarRightScroller Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTabsBarRightScroller</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXTabsBarRightScroller</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTabsBarRightScroller</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panel.getXTabsBar",
					"summary": "Constant XPath for getting an element that indicates the top Tab bar has loaded an active Tab.",
					"key": "F_Blueshirt_Core_Crm_Panel_getXTabsBar",
					"filename": "F_Blueshirt_Core_Crm_Panel_getXTabsBar.htm",
					"title": "Panel.getXTabsBar Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTabsBar</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXTabsBar</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTabsBar</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panel.getXTabsBarActiveTab",
					"summary": "Constant XPath for getting an element corresponds to the currently active Tab in the top Tab bar.",
					"key": "F_Blueshirt_Core_Crm_Panel_getXTabsBarActiveTab",
					"filename": "F_Blueshirt_Core_Crm_Panel_getXTabsBarActiveTab.htm",
					"title": "Panel.getXTabsBarActiveTab Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTabsBarActiveTab</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXTabsBarActiveTab</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTabsBarActiveTab</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panel.getXInnerTabsBar",
					"summary": "Constant XPath for getting an element that indicates an inner Tab bar has loaded an active Tab.",
					"key": "F_Blueshirt_Core_Crm_Panel_getXInnerTabsBar",
					"filename": "F_Blueshirt_Core_Crm_Panel_getXInnerTabsBar.htm",
					"title": "Panel.getXInnerTabsBar Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXInnerTabsBar</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXInnerTabsBar</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXInnerTabsBar</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSpan(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and span, return a unique identifier XPath to find the SPAN field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'",
							"name": "dialogId"
						},
						{
							"_": "The SPAN element's unique id identifier - i.e. '_LOCATION_value'",
							"name": "spanId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXSpan",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSpan.htm",
					"title": "Panel.getXSpan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSpan</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">spanId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSpan</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">spanId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSpan</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">spanId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXDiv(System.String,System.String)",
					"summary": "Given the unique HTML element ids of a dialog and div, return a unique identifier XPath to find the DIV field.",
					"param": [
						{
							"_": "The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'",
							"name": "dialogId"
						},
						{
							"_": "The DIV element's unique id identifier - i.e. '_LASTNAME_value'",
							"name": "divId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXDiv",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXDiv.htm",
					"title": "Panel.getXDiv Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDiv</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">dialogId</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">divId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDiv</span> ( \r\n\t<span class=\"parameter\">dialogId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">divId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDiv</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">dialogId</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">divId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionDatalistPageIndexButtons(System.String)",
					"summary": "Format an XPath to find all top-right indexing buttons for a section's datalist.",
					"param": {
						"_": "The caption of the section.",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistPageIndexButtons",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistPageIndexButtons.htm",
					"title": "Panel.getXSectionDatalistPageIndexButtons Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistPageIndexButtons</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistPageIndexButtons</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistPageIndexButtons</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionDatalistCurrentPageIndex(System.String)",
					"summary": "Format an XPath to find the top-right index DIV whose text will be the current page index of a section's datalist.",
					"param": {
						"_": "The caption of the section",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistCurrentPageIndex",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistCurrentPageIndex.htm",
					"title": "Panel.getXSectionDatalistCurrentPageIndex Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistCurrentPageIndex</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistCurrentPageIndex</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistCurrentPageIndex</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowButton(System.String)",
					"summary": "Format an XPath for handling a button on the selected datalist row.",
					"param": {
						"_": "The caption of the button.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowButton",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowButton.htm",
					"title": "Panel.getXSelectedDatalistRowButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectedDatalistRowButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSelectedDatalistRowButton</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectedDatalistRowButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkByAction(System.String)",
					"summary": "Format an XPath for handling a link on the selected datalist row.",
					"param": {
						"_": "The tooltip caption of the action displayed when hovering over the link. i.e. 'Go to plan:'",
						"name": "action"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByAction",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByAction.htm",
					"title": "Panel.getXSelectedDatalistRowLinkByAction Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectedDatalistRowLinkByAction</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">action</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSelectedDatalistRowLinkByAction</span> ( \r\n\t<span class=\"parameter\">action</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectedDatalistRowLinkByAction</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">action</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXDatalistRowLinkByActionAndCaption(System.String,System.String)",
					"summary": "Format an xPath for handling a link on any datalist row.",
					"param": [
						{
							"_": "The result of the action. i.e. 'Go to segment:'",
							"name": "action"
						},
						{
							"_": "The caption of the link.",
							"name": "caption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXDatalistRowLinkByActionAndCaption",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXDatalistRowLinkByActionAndCaption.htm",
					"title": "Panel.getXDatalistRowLinkByActionAndCaption Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDatalistRowLinkByActionAndCaption</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">action</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDatalistRowLinkByActionAndCaption</span> ( \r\n\t<span class=\"parameter\">action</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDatalistRowLinkByActionAndCaption</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">action</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkById(System.String)",
					"summary": "Format an XPath for handling a link on the selected datalist row.",
					"param": {
						"_": "The id of the link that is the value of the 'data-fieldid' attribute.  i.e. 'PLANNAME'",
						"name": "id"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkById",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkById.htm",
					"title": "Panel.getXSelectedDatalistRowLinkById Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectedDatalistRowLinkById</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">id</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSelectedDatalistRowLinkById</span> ( \r\n\t<span class=\"parameter\">id</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectedDatalistRowLinkById</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">id</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkByCaption(System.String)",
					"summary": "Format an XPath for handling a link on the selected datalist row.",
					"param": {
						"_": "The caption text of the link.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByCaption",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByCaption.htm",
					"title": "Panel.getXSelectedDatalistRowLinkByCaption Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSelectedDatalistRowLinkByCaption</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSelectedDatalistRowLinkByCaption</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSelectedDatalistRowLinkByCaption</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink(System.String)",
					"summary": "Format an XPath for finding a context link located in the header of a panel.",
					"param": {
						"name": "linkCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink.htm",
					"title": "Panel.getXPanelHeaderLink Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXPanelHeaderLink</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXPanelHeaderLink</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXPanelHeaderLink</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink",
					"summary": "Format an XPath for finding a context link located in the header of a panel.",
					"key": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink.htm",
					"title": "Panel.getXPanelHeaderLink Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXPanelHeaderLink</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXPanelHeaderLink</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXPanelHeaderLink</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXPanelHeader(System.String)",
					"summary": "Generic XPath to get the panel header.",
					"param": {
						"_": "Unique name of the image associated with the panel header.",
						"name": "imageName"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader.htm",
					"title": "Panel.getXPanelHeader Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXPanelHeader</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXPanelHeader</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXPanelHeader</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXPanelHeader",
					"summary": "Generic XPath to get the panel header.",
					"key": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXPanelHeader.htm",
					"title": "Panel.getXPanelHeader Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXPanelHeader</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXPanelHeader</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXPanelHeader</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXPanelHeaderByText(System.String)",
					"summary": "Format an XPath to find a panel header containing the provided text.",
					"param": {
						"_": "The value to check for in the panel header.",
						"name": "text"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderByText",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXPanelHeaderByText.htm",
					"title": "Panel.getXPanelHeaderByText Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXPanelHeaderByText</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">text</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXPanelHeaderByText</span> ( \r\n\t<span class=\"parameter\">text</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXPanelHeaderByText</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">text</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXDataListColumnValue(System.Int32,System.String)",
					"summary": "Given the DOM index of a datalist column and the value for that column, return an XPath to append to a datalist XPath for finding that value in the requested column index. No element will be found if the value does not exist in this column.",
					"param": [
						{
							"_": "The DOM index for the TD element representing the desired column.",
							"name": "columnIndex"
						},
						{
							"_": "The value corresponding the provided column.  ",
							"name": "columnValue"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXDataListColumnValue",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXDataListColumnValue.htm",
					"title": "Panel.getXDataListColumnValue Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDataListColumnValue</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">columnValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDataListColumnValue</span> ( \r\n\t<span class=\"parameter\">columnIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDataListColumnValue</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">columnValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionDatalistRows(System.String)",
					"summary": "XPath to get the TR datalist rows of a section.",
					"param": {
						"_": "The caption of the section that the datalist belongs to.",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRows",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRows.htm",
					"title": "Panel.getXSectionDatalistRows Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistRows</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistRows</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistRows</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionDatalistRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Formats a unique XPath to find a single datalist row.",
					"param": [
						{
							"_": "The caption of the section that the datalist belongs to.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the datalist column captions to their DOM TD index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the datalist column captions to their values in a single row.",
							"name": "columnCaptionToValue"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRow.htm",
					"title": "Panel.getXSectionDatalistRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">columnCaptionToValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXViewForm(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Format an XPath to find a single view form in a section. Field values will be checked to CONTAIN (not match) the provided values.",
					"param": [
						{
							"_": "The caption of the section that the view form belongs to.",
							"name": "sectionCaption"
						},
						{
							"_": "The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'",
							"name": "viewFormId"
						},
						{
							"_": "Mapping of a single view form's captions (excluding the colon) to their desired value.\r\n            Field values will be checked to CONTAIN (not match) the provided values.",
							"name": "viewFormValues"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXViewForm",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXViewForm.htm",
					"title": "Panel.getXViewForm Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXViewForm</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">viewFormId</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">viewFormValues</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXViewForm</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">viewFormId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">viewFormValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXViewForm</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">viewFormId</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">viewFormValues</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionViewFormSpan(System.String,System.String)",
					"summary": "Format an XPath to append to a section view form that has an item with the provided caption and CONTAINING (not matching) the value. No element will be found if the caption does not exist with this value.",
					"param": [
						{
							"_": "The caption of the view form field.",
							"name": "caption"
						},
						{
							"_": "The expected value associated with the provided caption.",
							"name": "value"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionViewFormSpan",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionViewFormSpan.htm",
					"title": "Panel.getXSectionViewFormSpan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionViewFormSpan</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">value</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionViewFormSpan</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">value</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionViewFormSpan</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">value</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionViewForm(System.String,System.String)",
					"summary": "Format an XPath for a section's view form root.",
					"param": [
						{
							"_": "The caption of the section.",
							"name": "secionCaption"
						},
						{
							"_": "The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'",
							"name": "viewFormId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionViewForm",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionViewForm.htm",
					"title": "Panel.getXSectionViewForm Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionViewForm</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">secionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">viewFormId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionViewForm</span> ( \r\n\t<span class=\"parameter\">secionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">viewFormId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionViewForm</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">secionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">viewFormId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionDatalistColumnHeaders(System.String)",
					"summary": "XPath to get the TR row of column headers for a section's datalist.",
					"param": {
						"_": "The caption of the section that the datalist belongs to.",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistColumnHeaders",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionDatalistColumnHeaders.htm",
					"title": "Panel.getXSectionDatalistColumnHeaders Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistColumnHeaders</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistColumnHeaders</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistColumnHeaders</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXDuplicateSectionDatalistColumnHeaders(System.String)",
					"summary": "XPath to get the TR row of column headers for a section's datalist when multiple sections with matching captions exists for a single panel on different tabs.",
					"param": {
						"_": "The caption of the section that the datalist belongs to.",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXDuplicateSectionDatalistColumnHeaders",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXDuplicateSectionDatalistColumnHeaders.htm",
					"title": "Panel.getXDuplicateSectionDatalistColumnHeaders Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDuplicateSectionDatalistColumnHeaders</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDuplicateSectionDatalistColumnHeaders</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDuplicateSectionDatalistColumnHeaders</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionAddButton(System.String,System.String)",
					"summary": "Given the caption header of a section, formats an XPath for handling the Add button.",
					"param": [
						{
							"_": "The caption head of the section.",
							"name": "sectionName"
						},
						{
							"_": "The caption of the button defaulting to \"Add\".  \r\n            A unique caption value can be specified if the button caption is not \"Add\".",
							"name": "addCaption"
						}
					],
					"returns": "",
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionAddButton",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionAddButton.htm",
					"title": "Panel.getXSectionAddButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionAddButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionName</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">addCaption</span> = &quot;Add&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionAddButton</span> ( \r\n\t<span class=\"parameter\">sectionName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">addCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add&quot;\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionAddButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionName</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">addCaption</span> = L&quot;Add&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSection(System.String)",
					"summary": "Given the caption header of a section, return a unique identifier XPath for handling the section WebElement.",
					"param": {
						"_": "The caption header of the section to reference",
						"name": "sectionName"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSection",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSection.htm",
					"title": "Panel.getXSection Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSection</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSection</span> ( \r\n\t<span class=\"parameter\">sectionName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSection</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXTab(System.String)",
					"summary": "Formats an XPath for a Tab in a top Tab bar.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXTab",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXTab.htm",
					"title": "Panel.getXTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXInnerTab(System.String)",
					"summary": "Formats an XPath for a Tab in an inner Tab bar.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXInnerTab",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXInnerTab.htm",
					"title": "Panel.getXInnerTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXInnerTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXInnerTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXInnerTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionExpandButton(System.String)",
					"summary": "Formats an XPath to get the expand/collpase button of a section",
					"param": {
						"_": "The caption of the section.",
						"name": "sectionCaption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionExpandButton",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionExpandButton.htm",
					"title": "Panel.getXSectionExpandButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionExpandButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionExpandButton</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionExpandButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXSectionWidget(System.String,System.String)",
					"summary": "Returns an XPath to get the DIV parent of the Research Lists UI widget whose 'stlye' attribute contains visibility info about the widget.",
					"param": [
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "A unique part of the widget element's id in the DOM.  i.e. 'ResearchGroupNavigationViewDataForm'",
							"name": "widgetId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXSectionWidget",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXSectionWidget.htm",
					"title": "Panel.getXSectionWidget Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionWidget</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">widgetId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionWidget</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">widgetId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionWidget</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">widgetId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.CollapseSection(System.String,System.String)",
					"summary": "Collapse a section if it is expanded and a collapse/expand button exists.",
					"param": [
						{
							"_": "The caption of the section",
							"name": "sectionCaption"
						},
						{
							"_": "A unique part of the widget element's id in the DOM.  i.e. 'ResearchGroupNavigationViewDataForm'",
							"name": "widgetId"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_CollapseSection",
					"filename": "M_Blueshirt_Core_Crm_Panel_CollapseSection.htm",
					"title": "Panel.CollapseSection Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseSection</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">widgetId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CollapseSection</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">widgetId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CollapseSection</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">widgetId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectSectionDatalistRow(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.Int32})",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken.",
					"param": [
						{
							"_": "Mapping of the column caption to the single row's values.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the column captions to their TD index.",
							"name": "columnCaptionToIndex"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm",
					"title": "Panel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectSectionDatalistRow(TechTalk.SpecFlow.TableRow,System.String,System.Collections.Generic.IDictionary{System.String,System.Int32})",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken.",
					"param": [
						{
							"_": "Mapping of the column caption to the single row's values.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the column captions to their TD index.",
							"name": "columnCaptionToIndex"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm",
					"title": "Panel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectSectionDatalistRow(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken.",
					"param": [
						{
							"_": "Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm",
					"title": "Panel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectSectionDatalistRow(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken.",
					"param": [
						{
							"_": "Mapping of the column caption to the single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm",
					"title": "Panel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectDuplicateSectionDatalistRow(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken. Use this when the same panel has tabs with the same section caption.",
					"param": [
						{
							"_": "Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow.htm",
					"title": "Panel.SelectDuplicateSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectDuplicateSectionDatalistRow(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Select a row in a section's datalist. If the row is already selected, no action is taken. Use this when the same panel has tabs with the same section caption.",
					"param": [
						{
							"_": "Mapping of the column caption to the single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow.htm",
					"title": "Panel.SelectDuplicateSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectDuplicateSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionDatalistRowExists(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Check whether a row exists in a section's datalist.",
					"param": [
						{
							"_": "Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm",
					"title": "Panel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionDatalistRowExists(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Check whether a row exists in a section's datalist.",
					"param": [
						{
							"_": "Mapping of the datalist columns to a single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm",
					"title": "Panel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionDatalistRowExists(TechTalk.SpecFlow.TableRow,System.String,System.Collections.Generic.IDictionary{System.String,System.Int32})",
					"summary": "Check whether a row exists in a section's datalist.",
					"param": [
						{
							"_": "Mapping of the datalist columns to a single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the column captions to their TD index.",
							"name": "columnCaptionToIndex"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm",
					"title": "Panel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionDatalistRowExists(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.IDictionary{System.String,System.Int32})",
					"summary": "Check whether a row exists in a section's datalist.",
					"param": [
						{
							"_": "Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the column captions to their TD index.",
							"name": "columnCaptionToIndex"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm",
					"title": "Panel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionViewFormExists(TechTalk.SpecFlow.TableRow,System.String,System.String)",
					"summary": "Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.",
					"param": [
						{
							"_": "Mapping of the view form captions (excluding the colon) to a single view form's values.",
							"name": "viewForm"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'",
							"name": "viewFormId"
						}
					],
					"returns": "True if the view form exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists.htm",
					"title": "Panel.SectionViewFormExists Method (IDictionary(String, String), String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionViewFormExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">viewForm</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">viewFormId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionViewFormExists</span> ( \r\n\t<span class=\"parameter\">viewForm</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">viewFormId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionViewFormExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">viewForm</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">viewFormId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SectionViewFormExists(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String)",
					"summary": "Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.",
					"param": [
						{
							"_": "Mapping of the view form captions (excluding the colon) to a single view form's values.",
							"name": "viewForm"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						},
						{
							"_": "The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'",
							"name": "viewFormId"
						}
					],
					"returns": "True if the view form exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_SectionViewFormExists.htm",
					"title": "Panel.SectionViewFormExists Method (IDictionary(String, String), String, String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionViewFormExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">viewForm</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">viewFormId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionViewFormExists</span> ( \r\n\t<span class=\"parameter\">viewForm</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">viewFormId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionViewFormExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">viewForm</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">viewFormId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.GridRowExists(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Check if a grid/datalist row exists.",
					"param": [
						{
							"_": "Mapping of the grid/datalist column captions to a single row's values.",
							"name": "row"
						},
						{
							"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
							"name": "gridId"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_GridRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_GridRowExists.htm",
					"title": "Panel.GridRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">GridRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">row</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GridRowExists</span> ( \r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">GridRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">row</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.GridRowExists(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Check if a grid/datalist row exists.",
					"param": [
						{
							"_": "Dictionary mapping the grid/datalist columns to a single row's values.  Keys represent column captions.",
							"name": "row"
						},
						{
							"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
							"name": "gridId"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_GridRowExists",
					"filename": "M_Blueshirt_Core_Crm_Panel_GridRowExists.htm",
					"title": "Panel.GridRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">GridRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">row</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">GridRowExists</span> ( \r\n\t<span class=\"parameter\">row</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">GridRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">row</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXGridRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Formats an XPath to find a single row in a grid/datalist.",
					"param": [
						{
							"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
							"name": "gridId"
						},
						{
							"_": "Mapping of the column captions to their index in the TD.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "columnCaptionToValue"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_getXGridRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXGridRow.htm",
					"title": "Panel.getXGridRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridRow</span> ( \r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">columnCaptionToValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXGridRows(System.String)",
					"summary": "Format an XPath to find the TR rows of a grid/datalist.",
					"param": {
						"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
						"name": "gridId"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXGridRows",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXGridRows.htm",
					"title": "Panel.getXGridRows Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridRows</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridRows</span> ( \r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridRows</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXGridHeaders(System.String)",
					"summary": "Format an XPath to find the TR header row of a grid/datalist that contains the column captions.",
					"param": {
						"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
						"name": "gridId"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXGridHeaders",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXGridHeaders.htm",
					"title": "Panel.getXGridHeaders Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGridHeaders</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGridHeaders</span> ( \r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGridHeaders</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.getXGrid(System.String)",
					"summary": "Format an XPath to find a grid/datalist.",
					"param": {
						"_": "The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'",
						"name": "gridId"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_getXGrid",
					"filename": "M_Blueshirt_Core_Crm_Panel_getXGrid.htm",
					"title": "Panel.getXGrid Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXGrid</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">gridId</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXGrid</span> ( \r\n\t<span class=\"parameter\">gridId</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXGrid</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">gridId</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectTab(System.String)",
					"summary": "Select a Tab from the top Tab bar.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_SelectTab",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectTab.htm",
					"title": "Panel.SelectTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.SelectInnerTab(System.String)",
					"summary": "Select a Tab from an inner Tab bar.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_SelectInnerTab",
					"filename": "M_Blueshirt_Core_Crm_Panel_SelectInnerTab.htm",
					"title": "Panel.SelectInnerTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectInnerTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectInnerTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectInnerTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.ClickSectionAddButton(System.String,System.String)",
					"summary": "Click the 'Add' button of a section.",
					"param": [
						{
							"_": "The caption of the section that the button belongs to.",
							"name": "sectionCaption"
						},
						{
							"_": "The caption of the button to click.  Defaults to 'Add'.",
							"name": "addButtonCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_Panel_ClickSectionAddButton",
					"filename": "M_Blueshirt_Core_Crm_Panel_ClickSectionAddButton.htm",
					"title": "Panel.ClickSectionAddButton Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickSectionAddButton</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">addButtonCaption</span> = &quot;Add&quot;\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ClickSectionAddButton</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">addButtonCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span> = &quot;Add&quot;\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ClickSectionAddButton</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">addButtonCaption</span> = L&quot;Add&quot;\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.IsPanelHeader(System.String)",
					"summary": "Check if the panel header's text matches the expected value.",
					"param": {
						"_": "The expected value of the header.",
						"name": "expectedValue"
					},
					"returns": "True if the text of the header matches the provided expected value, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_IsPanelHeader",
					"filename": "M_Blueshirt_Core_Crm_Panel_IsPanelHeader.htm",
					"title": "Panel.IsPanelHeader Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelHeader</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">expectedValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPanelHeader</span> ( \r\n\t<span class=\"parameter\">expectedValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelHeader</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">expectedValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.IsPanelType(System.String)",
					"summary": "Check if the panel header's image contains the provided image type.",
					"param": {
						"_": "The unique image name of the panel.  i.e. 'individual.png'",
						"name": "panelImage"
					},
					"returns": "True if the panel header image contains the provided image type, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_IsPanelType",
					"filename": "M_Blueshirt_Core_Crm_Panel_IsPanelType.htm",
					"title": "Panel.IsPanelType Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelType</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">panelImage</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPanelType</span> ( \r\n\t<span class=\"parameter\">panelImage</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelType</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">panelImage</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.WaitForPanelType(System.String)",
					"summary": "Wait until the panel header's image contains the provided image type. A WebDriverTimeoutException is thrown is no displayed panel header loads with the image.",
					"param": {
						"_": "The unique image name of the panel.  i.e. 'individual.png'",
						"name": "panelImage"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_WaitForPanelType",
					"filename": "M_Blueshirt_Core_Crm_Panel_WaitForPanelType.htm",
					"title": "Panel.WaitForPanelType Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitForPanelType</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">panelImage</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">WaitForPanelType</span> ( \r\n\t<span class=\"parameter\">panelImage</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitForPanelType</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">panelImage</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.WaitForPanelHeaderNotContain(System.String)",
					"summary": "Wait the default time for the panel header to not contain the provided value.",
					"param": {
						"_": "The value to wait until not displayed in the header.",
						"name": "header"
					},
					"key": "M_Blueshirt_Core_Crm_Panel_WaitForPanelHeaderNotContain",
					"filename": "M_Blueshirt_Core_Crm_Panel_WaitForPanelHeaderNotContain.htm",
					"title": "Panel.WaitForPanelHeaderNotContain Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitForPanelHeaderNotContain</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">header</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">WaitForPanelHeaderNotContain</span> ( \r\n\t<span class=\"parameter\">header</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">WaitForPanelHeaderNotContain</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">header</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.ExpandRow(System.String)",
					"summary": "Expand a row if it is not already expanded.",
					"key": "M_Blueshirt_Core_Crm_Panel_ExpandRow",
					"filename": "M_Blueshirt_Core_Crm_Panel_ExpandRow.htm",
					"title": "Panel.ExpandRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ExpandRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">XPath</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ExpandRow</span> ( \r\n\t<span class=\"parameter\">XPath</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ExpandRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">XPath</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panel.AdditionalDatalistPagesExist(System.String)",
					"summary": "Check if additional pages exist for a datalist to load. If so load the page.",
					"returns": "Returns true if an additional page was found and clicked, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_Panel_AdditionalDatalistPagesExist",
					"filename": "M_Blueshirt_Core_Crm_Panel_AdditionalDatalistPagesExist.htm",
					"title": "Panel.AdditionalDatalistPagesExist Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">AdditionalDatalistPagesExist</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">AdditionalDatalistPagesExist</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">AdditionalDatalistPagesExist</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.AdHocQueryPanel.IsPanelHeader(System.String)",
					"summary": "Check if the Ad-Hoc Query Panel has the provided name in the header.",
					"param": {
						"_": "The value to check for in the header.",
						"name": "queryName"
					},
					"returns": "True if the header contains the value, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_AdHocQueryPanel_IsPanelHeader",
					"filename": "M_Blueshirt_Core_Crm_AdHocQueryPanel_IsPanelHeader.htm",
					"title": "AdHocQueryPanel.IsPanelHeader Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelHeader</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">queryName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPanelHeader</span> ( \r\n\t<span class=\"parameter\">queryName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPanelHeader</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">queryName</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.BatchEntryPanel",
					"summary": "Class to handle interactions for the 'Batch Entry' panel.",
					"key": "T_Blueshirt_Core_Crm_BatchEntryPanel",
					"filename": "T_Blueshirt_Core_Crm_BatchEntryPanel.htm",
					"title": "BatchEntryPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">BatchEntryPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">BatchEntryPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">BatchEntryPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddBatch(String)",
							"link": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Create a new batch using the specified template and load the batch dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddBatch(String, String)",
							"link": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Create a new batch with the specified template and description."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CommitSelectedBatch",
							"link": "M_Blueshirt_Core_Crm_BatchEntryPanel_CommitSelectedBatch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Commit the currently selected batch."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectUncommittedBatch",
							"link": "M_Blueshirt_Core_Crm_BatchEntryPanel_SelectUncommittedBatch.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select an uncommitted batch."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "UncommittedBatchExists",
							"link": "M_Blueshirt_Core_Crm_BatchEntryPanel_UncommittedBatchExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a batch exists as a row in the uncommitted batches datalist."
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchEntryPanel.AddBatch(System.String)",
					"summary": "Create a new batch using the specified template and load the batch dialog.",
					"param": {
						"_": "The template to use for the new batch.",
						"name": "batchTemplate"
					},
					"key": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch",
					"filename": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch.htm",
					"title": "BatchEntryPanel.AddBatch Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddBatch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">batchTemplate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddBatch</span> ( \r\n\t<span class=\"parameter\">batchTemplate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddBatch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">batchTemplate</span>\r\n)"
						}
					]
				},
				{
					"_": "\r\n            \r\n            \r\n            /// \r\n        ",
					"name": "M:Blueshirt.Core.Crm.BatchEntryPanel.AddBatch(System.String,System.String)",
					"summary": "Create a new batch using the specified template and load the batch dialog.",
					"param": [
						{
							"_": "The template to use for the new batch.",
							"name": "batchTemplate"
						},
						{
							"_": "The description to use for the new batch.",
							"name": "description"
						}
					],
					"key": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch",
					"filename": "M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch.htm",
					"title": "BatchEntryPanel.AddBatch Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddBatch</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">batchTemplate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddBatch</span> ( \r\n\t<span class=\"parameter\">batchTemplate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddBatch</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">batchTemplate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchEntryPanel.UncommittedBatchExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a batch exists as a row in the uncommitted batches datalist.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "batch"
					},
					"returns": "True if the batch exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_BatchEntryPanel_UncommittedBatchExists",
					"filename": "M_Blueshirt_Core_Crm_BatchEntryPanel_UncommittedBatchExists.htm",
					"title": "BatchEntryPanel.UncommittedBatchExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">UncommittedBatchExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">batch</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">UncommittedBatchExists</span> ( \r\n\t<span class=\"parameter\">batch</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">UncommittedBatchExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">batch</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchEntryPanel.SelectUncommittedBatch(TechTalk.SpecFlow.TableRow)",
					"summary": "Select an uncommitted batch.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "batchRow"
					},
					"key": "M_Blueshirt_Core_Crm_BatchEntryPanel_SelectUncommittedBatch",
					"filename": "M_Blueshirt_Core_Crm_BatchEntryPanel_SelectUncommittedBatch.htm",
					"title": "BatchEntryPanel.SelectUncommittedBatch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectUncommittedBatch</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">batchRow</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectUncommittedBatch</span> ( \r\n\t<span class=\"parameter\">batchRow</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectUncommittedBatch</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">batchRow</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BatchEntryPanel.CommitSelectedBatch",
					"summary": "Commit the currently selected batch.",
					"key": "M_Blueshirt_Core_Crm_BatchEntryPanel_CommitSelectedBatch",
					"filename": "M_Blueshirt_Core_Crm_BatchEntryPanel_CommitSelectedBatch.htm",
					"title": "BatchEntryPanel.CommitSelectedBatch Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CommitSelectedBatch</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CommitSelectedBatch</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CommitSelectedBatch</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.BusinessProcess",
					"summary": "Base class to handle interactions for the 'Business Process' panel.",
					"key": "T_Blueshirt_Core_Crm_BusinessProcess",
					"filename": "T_Blueshirt_Core_Crm_BusinessProcess.htm",
					"title": "BusinessProcess Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">BusinessProcess</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">BusinessProcess</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">BusinessProcess</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsCompleted",
							"link": "M_Blueshirt_Core_Crm_BusinessProcess_IsCompleted.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait for the business process to complete and check if the status finished as 'Completed'."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsNumRecordsProcessed",
							"link": "M_Blueshirt_Core_Crm_BusinessProcess_IsNumRecordsProcessed.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check for the total number of records processed."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BusinessProcess.getXCommitStatus",
					"summary": "Get a formatted xPath for an element whose text represents the commit status of the business process.",
					"key": "F_Blueshirt_Core_Crm_BusinessProcess_getXCommitStatus",
					"filename": "F_Blueshirt_Core_Crm_BusinessProcess_getXCommitStatus.htm",
					"title": "BusinessProcess.getXCommitStatus Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXCommitStatus</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXCommitStatus</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXCommitStatus</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BusinessProcess.getXRecordsProcessed",
					"summary": "Get a formatted xPath for an element whose test represents the number of records processed for the business process.",
					"key": "F_Blueshirt_Core_Crm_BusinessProcess_getXRecordsProcessed",
					"filename": "F_Blueshirt_Core_Crm_BusinessProcess_getXRecordsProcessed.htm",
					"title": "BusinessProcess.getXRecordsProcessed Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXRecordsProcessed</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXRecordsProcessed</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXRecordsProcessed</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BusinessProcess.IsCompleted",
					"summary": "Wait for the business process to complete and check if the status finished as 'Completed'.",
					"returns": "True if the business process completes without errors or exceptions, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_BusinessProcess_IsCompleted",
					"filename": "M_Blueshirt_Core_Crm_BusinessProcess_IsCompleted.htm",
					"title": "BusinessProcess.IsCompleted Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsCompleted</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BusinessProcess.IsNumRecordsProcessed(System.Int32)",
					"summary": "Check for the total number of records processed.",
					"param": {
						"_": "The expected number of total records processed by the business process.",
						"name": "numRecords"
					},
					"returns": "True if the posted number of total processed records equals the provided expected amount, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_BusinessProcess_IsNumRecordsProcessed",
					"filename": "M_Blueshirt_Core_Crm_BusinessProcess_IsNumRecordsProcessed.htm",
					"title": "BusinessProcess.IsNumRecordsProcessed Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumRecordsProcessed</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numRecords</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsNumRecordsProcessed</span> ( \r\n\t<span class=\"parameter\">numRecords</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumRecordsProcessed</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numRecords</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MarketingAcknowledgementBusinessProcess",
					"summary": "Class to handle interactions for the 'Marketing Acknowledgement Business Process' panel.",
					"key": "T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess",
					"filename": "T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess.htm",
					"title": "MarketingAcknowledgementBusinessProcess Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAcknowledgementBusinessProcess</span> : <span class=\"identifier\">BusinessProcess</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAcknowledgementBusinessProcess</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BusinessProcess</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAcknowledgementBusinessProcess</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BusinessProcess</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsCompleted",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsCompleted.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait for the the business process to finish and validate if it finished with a \"Completed\" status."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsNumRecordsProcessed",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsNumRecordsProcessed.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check for the number of records successfully processed."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementBusinessProcess.IsNumRecordsProcessed(System.Int32)",
					"summary": "Check for the number of records successfully processed.",
					"param": {
						"_": "The number of records to check for.",
						"name": "numRecords"
					},
					"returns": "True if the provided number matches the listed amount of successfully processed records, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsNumRecordsProcessed",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsNumRecordsProcessed.htm",
					"title": "MarketingAcknowledgementBusinessProcess.IsNumRecordsProcessed Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumRecordsProcessed</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numRecords</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsNumRecordsProcessed</span> ( \r\n\t<span class=\"parameter\">numRecords</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumRecordsProcessed</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numRecords</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementBusinessProcess.IsCompleted",
					"summary": "Wait for the the business process to finish and validate if it finished with a \"Completed\" status.",
					"returns": "True if the process completed without errors or exceptions, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsCompleted",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsCompleted.htm",
					"title": "MarketingAcknowledgementBusinessProcess.IsCompleted Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsCompleted</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.ReceiptBusinessProcess",
					"summary": "Class to handle interactions for the 'Receipt Business Process' panel.",
					"key": "T_Blueshirt_Core_Crm_ReceiptBusinessProcess",
					"filename": "T_Blueshirt_Core_Crm_ReceiptBusinessProcess.htm",
					"title": "ReceiptBusinessProcess Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">ReceiptBusinessProcess</span> : <span class=\"identifier\">BusinessProcess</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">ReceiptBusinessProcess</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BusinessProcess</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">ReceiptBusinessProcess</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BusinessProcess</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsCompleted",
							"link": "M_Blueshirt_Core_Crm_ReceiptBusinessProcess_IsCompleted.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Wait for the the business process to finish and validate if it finished with a \"Completed\" status."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ReceiptBusinessProcess.IsCompleted",
					"summary": "Wait for the the business process to finish and validate if it finished with a \"Completed\" status.",
					"returns": "True if the process completed without errors or exceptions, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ReceiptBusinessProcess_IsCompleted",
					"filename": "M_Blueshirt_Core_Crm_ReceiptBusinessProcess_IsCompleted.htm",
					"title": "ReceiptBusinessProcess.IsCompleted Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsCompleted</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsCompleted</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.ConstituentPanel",
					"summary": "Class to handle interactions for the 'Constituent' panel.",
					"key": "T_Blueshirt_Core_Crm_ConstituentPanel",
					"filename": "T_Blueshirt_Core_Crm_ConstituentPanel.htm",
					"title": "ConstituentPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">ConstituentPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">ConstituentPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">ConstituentPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddConstituency",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddConstituency.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a constituency under the 'Personal Info' => 'Constituencies' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddMajorGivingPlan",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddMajorGivingPlan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a major giving plan to a prospect constituent."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddNote",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNote.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddNotification",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNotification.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a Notification to the specified Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddTeamMember",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamMember.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a prospect team member from the 'Prospect' => 'Prospect Team' tab. Constituent may need to have the 'Prospect' constituency for this tab to be displayed."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddTeamRole",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamRole.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add Team Member Role through the 'Add a prospect team member' dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ConstituencyExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_ConstituencyExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a constituency exists on the 'Personal Info' => 'Constituencies' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXNotification",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_getXNotification.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "XPath to find a notification on a Constituent panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GoToPlan",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_GoToPlan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate the plan panel of an existing plan for the constituent."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsBirthDate",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_IsBirthDate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the Birth Date of the constituent."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsConstituentPanelHeader",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_IsConstituentPanelHeader.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the Constituent panel header has the expected text."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsLastName",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_IsLastName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks if the constituent record panel has the provided last name."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsStateAddress",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_IsStateAddress.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the State address of the constituent."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsTitle",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_IsTitle.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the Title of the constituent."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "NotificationExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_NotificationExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a Notification exists for the provided Note."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PlanExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_PlanExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a plan exists for the constituent."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectNote",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_SelectNote.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a Note."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "StartToAddAPlan",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_StartToAddAPlan.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add a plan to the prospect constituent."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "TeamMemberExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamMemberExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a prospect team member exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "TeamRoleExists",
							"link": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamRoleExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a Team Member Role exists when adding a Prospect team member through the 'Add a prospect team member' dialog."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.getXNotification(System.String)",
					"summary": "XPath to find a notification on a Constituent panel.",
					"param": {
						"_": "Part of the title that the notification must have.",
						"name": "noteTitle"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_getXNotification",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_getXNotification.htm",
					"title": "ConstituentPanel.getXNotification Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXNotification</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">noteTitle</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXNotification</span> ( \r\n\t<span class=\"parameter\">noteTitle</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXNotification</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">noteTitle</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.IsTitle(System.String)",
					"summary": "Check the Title of the constituent.",
					"param": {
						"_": "The Title value to check for.",
						"name": "title"
					},
					"returns": "True if the provided value is the constituent's Title, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_IsTitle",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_IsTitle.htm",
					"title": "ConstituentPanel.IsTitle Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsTitle</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">title</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsTitle</span> ( \r\n\t<span class=\"parameter\">title</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsTitle</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">title</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.IsStateAddress(System.String)",
					"summary": "Check the State address of the constituent.",
					"param": {
						"_": "The State abbreviation to check for.",
						"name": "state"
					},
					"returns": "True if the provided value is the constituent's state, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_IsStateAddress",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_IsStateAddress.htm",
					"title": "ConstituentPanel.IsStateAddress Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsStateAddress</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">state</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsStateAddress</span> ( \r\n\t<span class=\"parameter\">state</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsStateAddress</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">state</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.IsBirthDate(System.String)",
					"summary": "Check the Birth Date of the constituent.",
					"param": {
						"_": "The birth date value to check for.",
						"name": "birthDate"
					},
					"returns": "True if the provided value is the constituent's birth date, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_IsBirthDate",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_IsBirthDate.htm",
					"title": "ConstituentPanel.IsBirthDate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsBirthDate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">birthDate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsBirthDate</span> ( \r\n\t<span class=\"parameter\">birthDate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsBirthDate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">birthDate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.IsLastName(System.String)",
					"summary": "Checks if the constituent record panel has the provided last name.",
					"param": {
						"_": "The last name to check for.",
						"name": "lastName"
					},
					"returns": "True if the constituent has the provided last name, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_IsLastName",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_IsLastName.htm",
					"title": "ConstituentPanel.IsLastName Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsLastName</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">lastName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsLastName</span> ( \r\n\t<span class=\"parameter\">lastName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsLastName</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">lastName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.IsConstituentPanelHeader(System.String)",
					"summary": "Check if the Constituent panel header has the expected text.",
					"param": {
						"_": "The expected text of the header to check for.",
						"name": "expectedText"
					},
					"returns": "True if the header has the expected text, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_IsConstituentPanelHeader",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_IsConstituentPanelHeader.htm",
					"title": "ConstituentPanel.IsConstituentPanelHeader Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsConstituentPanelHeader</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">expectedText</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsConstituentPanelHeader</span> ( \r\n\t<span class=\"parameter\">expectedText</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsConstituentPanelHeader</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">expectedText</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.ConstituencyExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a constituency exists on the 'Personal Info' => 'Constituencies' tab.",
					"param": {
						"_": "Mapping of column captions to a row's values.",
						"name": "values"
					},
					"returns": "True if the constituency exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_ConstituencyExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_ConstituencyExists.htm",
					"title": "ConstituentPanel.ConstituencyExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConstituencyExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">values</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ConstituencyExists</span> ( \r\n\t<span class=\"parameter\">values</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ConstituencyExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">values</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddConstituency(System.String,TechTalk.SpecFlow.TableRow)",
					"summary": "Add a constituency under the 'Personal Info' => 'Constituencies' tab.",
					"param": [
						{
							"_": "The type of constituency to add (i.e. 'Staff')",
							"name": "constituency"
						},
						{
							"_": "Mapping of the field captions and desired values to set on the 'Add constituency' dialog.  \r\n            Defaults to null where no values are set.",
							"name": "values"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddConstituency",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddConstituency.htm",
					"title": "ConstituentPanel.AddConstituency Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddConstituency</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">constituency</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">values</span> = <span class=\"keyword\">null</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddConstituency</span> ( \r\n\t<span class=\"parameter\">constituency</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\tOptional <span class=\"parameter\">values</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span> = <span class=\"keyword\">Nothing</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddConstituency</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">constituency</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">values</span> = <span class=\"keyword\">nullptr</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddNote(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab",
					"param": {
						"_": "Mapping of the field captions for the 'Add a note' dialog to their desired values.",
						"name": "note"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNote",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNote.htm",
					"title": "ConstituentPanel.AddNote Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddNote</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">note</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddNote</span> ( \r\n\t<span class=\"parameter\">note</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddNote</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">note</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.SelectNote(System.String)",
					"summary": "Select a Note.",
					"param": {
						"_": "The value of the 'Title' column for the desired row.",
						"name": "noteTitle"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_SelectNote",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_SelectNote.htm",
					"title": "ConstituentPanel.SelectNote Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectNote</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">noteTitle</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectNote</span> ( \r\n\t<span class=\"parameter\">noteTitle</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectNote</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">noteTitle</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddNotification(System.String,TechTalk.SpecFlow.TableRow)",
					"summary": "Add a Notification to the specified Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab.",
					"param": [
						{
							"_": "The 'Title' of the Note to add a notification to.",
							"name": "noteTitle"
						},
						{
							"_": "Mapping of the field captions for the 'Add notification' dialog to their desired values.",
							"name": "notification"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNotification",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddNotification.htm",
					"title": "ConstituentPanel.AddNotification Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddNotification</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">noteTitle</span>,\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">notification</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddNotification</span> ( \r\n\t<span class=\"parameter\">noteTitle</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">notification</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddNotification</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">noteTitle</span>, \r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">notification</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.NotificationExists(System.String)",
					"summary": "Check if a Notification exists for the provided Note.",
					"param": {
						"_": "The 'Title' of the Note.",
						"name": "noteTitle"
					},
					"returns": "True if the notification exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_NotificationExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_NotificationExists.htm",
					"title": "ConstituentPanel.NotificationExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">NotificationExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">noteTitle</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">NotificationExists</span> ( \r\n\t<span class=\"parameter\">noteTitle</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">NotificationExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">noteTitle</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.TeamRoleExists(System.String)",
					"summary": "Check if a Team Member Role exists when adding a Prospect team member through the 'Add a prospect team member' dialog.",
					"param": {
						"_": "The name of the team role to check for.",
						"name": "teamRole"
					},
					"returns": "True if the team role exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamRoleExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamRoleExists.htm",
					"title": "ConstituentPanel.TeamRoleExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TeamRoleExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">teamRole</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">TeamRoleExists</span> ( \r\n\t<span class=\"parameter\">teamRole</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TeamRoleExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">teamRole</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddTeamRole(System.String)",
					"summary": "Add Team Member Role through the 'Add a prospect team member' dialog.",
					"param": {
						"_": "The name of the team role to add.",
						"name": "teamRole"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamRole",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamRole.htm",
					"title": "ConstituentPanel.AddTeamRole Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTeamRole</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">teamRole</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddTeamRole</span> ( \r\n\t<span class=\"parameter\">teamRole</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTeamRole</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">teamRole</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddTeamMember(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a prospect team member from the 'Prospect' => 'Prospect Team' tab. Constituent may need to have the 'Prospect' constituency for this tab to be displayed.",
					"param": {
						"_": "Mapping of the field captions for the 'Add a prospect team member' dialog to their desired values.",
						"name": "teamMember"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamMember",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamMember.htm",
					"title": "ConstituentPanel.AddTeamMember Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTeamMember</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">teamMember</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddTeamMember</span> ( \r\n\t<span class=\"parameter\">teamMember</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTeamMember</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">teamMember</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.TeamMemberExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a prospect team member exists.",
					"param": {
						"_": "Mapping of column captions to a row's values.",
						"name": "teamMember"
					},
					"returns": "True if the team member exists, false otherwise",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamMemberExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_TeamMemberExists.htm",
					"title": "ConstituentPanel.TeamMemberExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TeamMemberExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">teamMember</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">TeamMemberExists</span> ( \r\n\t<span class=\"parameter\">teamMember</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TeamMemberExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">teamMember</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.AddMajorGivingPlan(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Add a major giving plan to a prospect constituent.",
					"param": [
						{
							"_": "Mapping of the 'Details' tab field captions to their desired values.",
							"name": "detailFields"
						},
						{
							"_": "The outline to use.",
							"name": "outline"
						}
					],
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_AddMajorGivingPlan",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_AddMajorGivingPlan.htm",
					"title": "ConstituentPanel.AddMajorGivingPlan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMajorGivingPlan</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">detailFields</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">outline</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddMajorGivingPlan</span> ( \r\n\t<span class=\"parameter\">detailFields</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>,\r\n\t<span class=\"parameter\">outline</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMajorGivingPlan</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">detailFields</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">outline</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.GoToPlan(System.String)",
					"summary": "Navigate the plan panel of an existing plan for the constituent.",
					"param": {
						"_": "The name of the plan.",
						"name": "planName"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_GoToPlan",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_GoToPlan.htm",
					"title": "ConstituentPanel.GoToPlan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">GoToPlan</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">planName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">GoToPlan</span> ( \r\n\t<span class=\"parameter\">planName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">GoToPlan</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">planName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.PlanExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a plan exists for the constituent.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "plan"
					},
					"returns": "True if the plan exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_PlanExists",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_PlanExists.htm",
					"title": "ConstituentPanel.PlanExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlanExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">plan</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PlanExists</span> ( \r\n\t<span class=\"parameter\">plan</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlanExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">plan</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ConstituentPanel.StartToAddAPlan(System.String)",
					"summary": "Start to add a plan to the prospect constituent.",
					"param": {
						"_": "The caption of the add menu item for the type of plan to add.",
						"name": "planType"
					},
					"key": "M_Blueshirt_Core_Crm_ConstituentPanel_StartToAddAPlan",
					"filename": "M_Blueshirt_Core_Crm_ConstituentPanel_StartToAddAPlan.htm",
					"title": "ConstituentPanel.StartToAddAPlan Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">StartToAddAPlan</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">planType</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">StartToAddAPlan</span> ( \r\n\t<span class=\"parameter\">planType</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">StartToAddAPlan</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">planType</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.EventManagementTemplatesPanel",
					"summary": "Class to handle interactions for the 'Event Management Templates' panel.",
					"key": "T_Blueshirt_Core_Crm_EventManagementTemplatesPanel",
					"filename": "T_Blueshirt_Core_Crm_EventManagementTemplatesPanel.htm",
					"title": "EventManagementTemplatesPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">EventManagementTemplatesPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">EventManagementTemplatesPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">EventManagementTemplatesPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddTemplate",
							"link": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_AddTemplate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an event management template with a single level labeled 'Default'"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "TemplateExists",
							"link": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_TemplateExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if an event management template exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventManagementTemplatesPanel.TemplateExists(System.String)",
					"summary": "Check if an event management template exists.",
					"param": {
						"_": "The name of the event management template.",
						"name": "templateName"
					},
					"returns": "True if the template exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_TemplateExists",
					"filename": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_TemplateExists.htm",
					"title": "EventManagementTemplatesPanel.TemplateExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TemplateExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">templateName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">TemplateExists</span> ( \r\n\t<span class=\"parameter\">templateName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TemplateExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">templateName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventManagementTemplatesPanel.AddTemplate(System.String)",
					"summary": "Add an event management template with a single level labeled 'Default'",
					"param": {
						"_": "The name of the template to add.",
						"name": "templateName"
					},
					"key": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_AddTemplate",
					"filename": "M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_AddTemplate.htm",
					"title": "EventManagementTemplatesPanel.AddTemplate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTemplate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">templateName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddTemplate</span> ( \r\n\t<span class=\"parameter\">templateName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTemplate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">templateName</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.EventPanel",
					"summary": "Class to handle interactions for the 'Event' panel.",
					"key": "T_Blueshirt_Core_Crm_EventPanel",
					"filename": "T_Blueshirt_Core_Crm_EventPanel.htm",
					"title": "EventPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">EventPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">EventPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">EventPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddCoordinator",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddCoordinator.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a coordinator."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddExpense",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddExpense.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an expense under the 'Expenses' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddPreference",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddPreference.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a Preference to an Event under the 'Options' tab"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddRegistrant",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrant.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add a registrant by clicking the add button under the 'Registrations' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddRegistrationOption",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrationOption.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a registration option."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddTaskDialog",
							"link": "M_Blueshirt_Core_Crm_EventPanel_AddTaskDialog.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Initiate the dialog for adding a task on the 'Tasks/Coordinators' tab. Note: This is technically a different dialog than the dialog for editing a task."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CoordinatorExists",
							"link": "M_Blueshirt_Core_Crm_EventPanel_CoordinatorExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the event record panel has the provided coordinator listed."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CopyRegistrationOptions",
							"link": "M_Blueshirt_Core_Crm_EventPanel_CopyRegistrationOptions.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Copy the registration options from another existing event."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EditTask",
							"link": "M_Blueshirt_Core_Crm_EventPanel_EditTask.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open the 'Edit task' dialog for task in the 'Tasks/Coordinators' tab. Note: This is technically a different dialog than the dialog for adding a task."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ExpenseExists",
							"link": "M_Blueshirt_Core_Crm_EventPanel_ExpenseExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if an expense exists in the 'Expenses' tab."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsEventName",
							"link": "M_Blueshirt_Core_Crm_EventPanel_IsEventName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the event record panel has the provided name."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsLocation",
							"link": "M_Blueshirt_Core_Crm_EventPanel_IsLocation.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the event record panel occurs at the provided location."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsStartDate",
							"link": "M_Blueshirt_Core_Crm_EventPanel_IsStartDate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the event record panel starts on the provided start date."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PreferenceExists",
							"link": "M_Blueshirt_Core_Crm_EventPanel_PreferenceExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a preference exists under the 'Options' tab of the current Event Panel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "RegistrationOptionExists",
							"link": "M_Blueshirt_Core_Crm_EventPanel_RegistrationOptionExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a registration option exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ReminderExists",
							"link": "M_Blueshirt_Core_Crm_EventPanel_ReminderExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a reminder exists on task in the 'Tasks/Coordinators' tab."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddCoordinator(System.String)",
					"summary": "Add a coordinator.",
					"param": {
						"_": "The last name of the constituent to add as a coordinator.",
						"name": "constituentLastName"
					},
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddCoordinator",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddCoordinator.htm",
					"title": "EventPanel.AddCoordinator Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddCoordinator</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">constituentLastName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddCoordinator</span> ( \r\n\t<span class=\"parameter\">constituentLastName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddCoordinator</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">constituentLastName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.CoordinatorExists(System.String)",
					"summary": "Check if the event record panel has the provided coordinator listed.",
					"param": {
						"_": "The name of coordinator.",
						"name": "coordinatorName"
					},
					"returns": "True if the coordinator exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_CoordinatorExists",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_CoordinatorExists.htm",
					"title": "EventPanel.CoordinatorExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">CoordinatorExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">coordinatorName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">CoordinatorExists</span> ( \r\n\t<span class=\"parameter\">coordinatorName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">CoordinatorExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">coordinatorName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.IsEventName(System.String)",
					"summary": "Check if the event record panel has the provided name.",
					"param": {
						"_": "The event name value to check for.",
						"name": "eventName"
					},
					"returns": "True if the event has the provided name, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_IsEventName",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_IsEventName.htm",
					"title": "EventPanel.IsEventName Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsEventName</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">eventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsEventName</span> ( \r\n\t<span class=\"parameter\">eventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsEventName</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">eventName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.IsStartDate(System.String)",
					"summary": "Check if the event record panel starts on the provided start date.",
					"param": {
						"_": "The start date value to check for.",
						"name": "startDate"
					},
					"returns": "True if the event starts on the start date, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_IsStartDate",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_IsStartDate.htm",
					"title": "EventPanel.IsStartDate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsStartDate</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">startDate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsStartDate</span> ( \r\n\t<span class=\"parameter\">startDate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsStartDate</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">startDate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.IsLocation(System.String)",
					"summary": "Check if the event record panel occurs at the provided location.",
					"param": {
						"_": "The location to check for.",
						"name": "location"
					},
					"returns": "True if the event occurs at the location, false otherwise",
					"key": "M_Blueshirt_Core_Crm_EventPanel_IsLocation",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_IsLocation.htm",
					"title": "EventPanel.IsLocation Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsLocation</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">location</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsLocation</span> ( \r\n\t<span class=\"parameter\">location</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsLocation</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">location</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddRegistrationOption(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a registration option.",
					"param": {
						"_": "Mapping of field captions to their desired values.",
						"name": "option"
					},
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrationOption",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrationOption.htm",
					"title": "EventPanel.AddRegistrationOption Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddRegistrationOption</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">option</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddRegistrationOption</span> ( \r\n\t<span class=\"parameter\">option</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddRegistrationOption</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">option</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.RegistrationOptionExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a registration option exists.",
					"param": {
						"_": "Mapping a column headers to a single row's values.",
						"name": "option"
					},
					"returns": "True if the registration option exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_RegistrationOptionExists",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_RegistrationOptionExists.htm",
					"title": "EventPanel.RegistrationOptionExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">RegistrationOptionExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">option</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">RegistrationOptionExists</span> ( \r\n\t<span class=\"parameter\">option</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">RegistrationOptionExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">option</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.CopyRegistrationOptions(System.String)",
					"summary": "Copy the registration options from another existing event.",
					"param": {
						"_": "The name of the event to copy the registration options from.",
						"name": "copyFromEventName"
					},
					"key": "M_Blueshirt_Core_Crm_EventPanel_CopyRegistrationOptions",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_CopyRegistrationOptions.htm",
					"title": "EventPanel.CopyRegistrationOptions Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyRegistrationOptions</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">copyFromEventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CopyRegistrationOptions</span> ( \r\n\t<span class=\"parameter\">copyFromEventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyRegistrationOptions</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">copyFromEventName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddExpense(TechTalk.SpecFlow.TableRow)",
					"summary": "Add an expense under the 'Expenses' tab.",
					"param": {
						"_": "Mapping of the 'Add an expese' dialogs field captions to their desired values.",
						"name": "expense"
					},
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddExpense",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddExpense.htm",
					"title": "EventPanel.AddExpense Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddExpense</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">expense</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddExpense</span> ( \r\n\t<span class=\"parameter\">expense</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddExpense</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">expense</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.ExpenseExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if an expense exists in the 'Expenses' tab.",
					"param": {
						"_": "Mapping of the column captions to a row's values.",
						"name": "expense"
					},
					"returns": "True if the expense exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_ExpenseExists",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_ExpenseExists.htm",
					"title": "EventPanel.ExpenseExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ExpenseExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">expense</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ExpenseExists</span> ( \r\n\t<span class=\"parameter\">expense</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ExpenseExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">expense</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddTaskDialog",
					"summary": "Initiate the dialog for adding a task on the 'Tasks/Coordinators' tab. Note: This is technically a different dialog than the dialog for editing a task.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddTaskDialog",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddTaskDialog.htm",
					"title": "EventPanel.AddTaskDialog Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTaskDialog</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddTaskDialog</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTaskDialog</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.EditTask(System.String)",
					"summary": "Open the 'Edit task' dialog for task in the 'Tasks/Coordinators' tab. Note: This is technically a different dialog than the dialog for adding a task.",
					"param": {
						"_": "The name of task to edit.",
						"name": "taskName"
					},
					"key": "M_Blueshirt_Core_Crm_EventPanel_EditTask",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_EditTask.htm",
					"title": "EventPanel.EditTask Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditTask</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EditTask</span> ( \r\n\t<span class=\"parameter\">taskName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditTask</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.ReminderExists(System.String,System.String)",
					"summary": "Check if a reminder exists on task in the 'Tasks/Coordinators' tab.",
					"param": [
						{
							"_": "The name of task to check for the reminder on.",
							"name": "taskName"
						},
						{
							"_": "The complete title of the reminder to check for.",
							"name": "reminderTitle"
						}
					],
					"returns": "True if the reminder exists on the task, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_ReminderExists",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_ReminderExists.htm",
					"title": "EventPanel.ReminderExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ReminderExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">taskName</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">reminderTitle</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ReminderExists</span> ( \r\n\t<span class=\"parameter\">taskName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">reminderTitle</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ReminderExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">taskName</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">reminderTitle</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.SelectTask(System.String)",
					"summary": "\r\n            Select a task.\r\n            ",
					"param": {
						"_": "The row's value for the task under the 'Name' column.",
						"name": "taskName"
					}
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddPreference(System.String,TechTalk.SpecFlow.Table)",
					"summary": "Add a Preference to an Event under the 'Options' tab",
					"param": [
						{
							"_": "The name of the preference to add.",
							"name": "name"
						},
						{
							"_": "Table where each TableRow corresponds to a desired grid row's values in the 'Add a preference' dialog.",
							"name": "preferences"
						}
					],
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddPreference",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddPreference.htm",
					"title": "EventPanel.AddPreference Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddPreference</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>,\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">preferences</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddPreference</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">preferences</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddPreference</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>, \r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">preferences</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.PreferenceExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a preference exists under the 'Options' tab of the current Event Panel.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "preference"
					},
					"returns": "True if the preference exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_PreferenceExists",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_PreferenceExists.htm",
					"title": "EventPanel.PreferenceExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PreferenceExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">preference</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PreferenceExists</span> ( \r\n\t<span class=\"parameter\">preference</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PreferenceExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">preference</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.EventPanel.AddRegistrant",
					"summary": "Start to add a registrant by clicking the add button under the 'Registrations' tab.",
					"key": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrant",
					"filename": "M_Blueshirt_Core_Crm_EventPanel_AddRegistrant.htm",
					"title": "EventPanel.AddRegistrant Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddRegistrant</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddRegistrant</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddRegistrant</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.InformationLibraryPanel",
					"summary": "Class to handle interactions for the 'Information Library' panel.",
					"key": "T_Blueshirt_Core_Crm_InformationLibraryPanel",
					"filename": "T_Blueshirt_Core_Crm_InformationLibraryPanel.htm",
					"title": "InformationLibraryPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">InformationLibraryPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">InformationLibraryPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">InformationLibraryPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAdHocQuery",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_AddAdHocQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Load the dialog to add an Ad-Hoc Query and select the type of query to create."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CopyQueryAsStaticSelection",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_CopyQueryAsStaticSelection.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Create a copy of an existing query as a static selection."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteQuery(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a query."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteQuery(TableRow)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a query."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDataListColumnValue",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXDataListColumnValue.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Given the DOM index of a datalist column and the value for that column, return an XPath to append to a datalist XPath for finding that value in the requested column index. No element will be found if the value does not exist in this column."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXQuery",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an Xpath for the highlighted Query search result."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXSectionDatalistRow",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXSectionDatalistRow.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Formats a unique xPath to find a single datalist row."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "QueryExists(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a query exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "QueryExists(TableRow)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a query exists."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a datalist row exists."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "SectionDatalistRowExists(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists_1.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a datalist row exists."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a datalist row for a section."
						},
						{
							"icons": [
								"../icons/protmethod.gif",
								"../icons/static.gif"
							],
							"name": "SelectSectionDatalistRow(TableRow, String)",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow_1.htm",
							"properties": [
								"protected",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a datalist row for a section."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFilter",
							"link": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SetFilter.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.AddAdHocQuery(System.String)",
					"summary": "Load the dialog to add an Ad-Hoc Query and select the type of query to create.",
					"param": {
						"_": "The type of query to add.",
						"name": "type"
					},
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_AddAdHocQuery",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_AddAdHocQuery.htm",
					"title": "InformationLibraryPanel.AddAdHocQuery Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAdHocQuery</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">type</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAdHocQuery</span> ( \r\n\t<span class=\"parameter\">type</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAdHocQuery</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">type</span>\r\n)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.InformationLibraryPanel.getXFilterQueryField",
					"summary": "Return an Xpath for the Query Field on the InformationLibraryPanel.",
					"key": "F_Blueshirt_Core_Crm_InformationLibraryPanel_getXFilterQueryField",
					"filename": "F_Blueshirt_Core_Crm_InformationLibraryPanel_getXFilterQueryField.htm",
					"title": "InformationLibraryPanel.getXFilterQueryField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFilterQueryField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXFilterQueryField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFilterQueryField</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.InformationLibraryPanel.getXDeleteQuery",
					"summary": "Returns an Xpath for the Delete Query menu item on a InformationLibraryPanel.",
					"key": "F_Blueshirt_Core_Crm_InformationLibraryPanel_getXDeleteQuery",
					"filename": "F_Blueshirt_Core_Crm_InformationLibraryPanel_getXDeleteQuery.htm",
					"title": "InformationLibraryPanel.getXDeleteQuery Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDeleteQuery</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXDeleteQuery</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDeleteQuery</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.getXQuery(System.String)",
					"summary": "Returns an Xpath for the highlighted Query search result.",
					"param": {
						"_": "The text of the result.",
						"name": "text"
					},
					"returns": "",
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXQuery",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXQuery.htm",
					"title": "InformationLibraryPanel.getXQuery Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXQuery</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">text</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXQuery</span> ( \r\n\t<span class=\"parameter\">text</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXQuery</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">text</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.CopyQueryAsStaticSelection(System.String,System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Create a copy of an existing query as a static selection.",
					"param": [
						{
							"_": "The name to give to the new static selection.",
							"name": "selection"
						},
						{
							"_": "The query to create a copy off.  Mapping of the column captions to a single row's values.",
							"name": "query"
						}
					],
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_CopyQueryAsStaticSelection",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_CopyQueryAsStaticSelection.htm",
					"title": "InformationLibraryPanel.CopyQueryAsStaticSelection Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyQueryAsStaticSelection</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">selection</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">query</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">CopyQueryAsStaticSelection</span> ( \r\n\t<span class=\"parameter\">selection</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">query</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">CopyQueryAsStaticSelection</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">selection</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">query</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.QueryExists(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Check if a query exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "query"
					},
					"returns": "True if the query exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists.htm",
					"title": "InformationLibraryPanel.QueryExists Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">QueryExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">query</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">QueryExists</span> ( \r\n\t<span class=\"parameter\">query</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">QueryExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">query</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.QueryExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a query exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "query"
					},
					"returns": "True if the query exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists.htm",
					"title": "InformationLibraryPanel.QueryExists Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">QueryExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">query</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">QueryExists</span> ( \r\n\t<span class=\"parameter\">query</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">QueryExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">query</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.DeleteQuery(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Delete a query.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "query"
					},
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery.htm",
					"title": "InformationLibraryPanel.DeleteQuery Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteQuery</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">query</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteQuery</span> ( \r\n\t<span class=\"parameter\">query</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteQuery</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">query</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.DeleteQuery(TechTalk.SpecFlow.TableRow)",
					"summary": "Delete a query.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "query"
					},
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery.htm",
					"title": "InformationLibraryPanel.DeleteQuery Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteQuery</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">query</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteQuery</span> ( \r\n\t<span class=\"parameter\">query</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteQuery</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">query</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.SelectSectionDatalistRow(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Select a datalist row for a section.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow.htm",
					"title": "InformationLibraryPanel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.SelectSectionDatalistRow(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Select a datalist row for a section.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow.htm",
					"title": "InformationLibraryPanel.SelectSectionDatalistRow Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">SelectSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">SelectSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.SectionDatalistRowExists(TechTalk.SpecFlow.TableRow,System.String)",
					"summary": "Check if a datalist row exists.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "row"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists.htm",
					"title": "InformationLibraryPanel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.SectionDatalistRowExists(System.Collections.Generic.IDictionary{System.String,System.String},System.String)",
					"summary": "Check if a datalist row exists.",
					"param": [
						{
							"_": "Mapping of the column captions to a single row's values.",
							"name": "rowValues"
						},
						{
							"_": "The caption of the section.",
							"name": "sectionCaption"
						}
					],
					"returns": "True if the row exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists.htm",
					"title": "InformationLibraryPanel.SectionDatalistRowExists Method (IDictionary(String, String), String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">rowValues</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SectionDatalistRowExists</span> ( \r\n\t<span class=\"parameter\">rowValues</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>),\r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SectionDatalistRowExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">rowValues</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.getXSectionDatalistRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Formats a unique xPath to find a single datalist row.",
					"param": [
						{
							"_": "The caption of the section that the datalist belongs to.",
							"name": "sectionCaption"
						},
						{
							"_": "Mapping of the datalist column captions to their DOM TD index.",
							"name": "columnCaptionToIndex"
						},
						{
							"_": "Mapping of the datalist column captions to their values in a single row.",
							"name": "columnCaptionToValue"
						}
					],
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXSectionDatalistRow",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXSectionDatalistRow.htm",
					"title": "InformationLibraryPanel.getXSectionDatalistRow Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">sectionCaption</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">int</span>&gt; <span class=\"parameter\">columnCaptionToIndex</span>,\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXSectionDatalistRow</span> ( \r\n\t<span class=\"parameter\">sectionCaption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">columnCaptionToIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">Integer</span>),\r\n\t<span class=\"parameter\">columnCaptionToValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXSectionDatalistRow</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">sectionCaption</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">int</span>&gt;^ <span class=\"parameter\">columnCaptionToIndex</span>, \r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">columnCaptionToValue</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.InformationLibraryPanel.getXDataListColumnValue(System.Int32,System.String)",
					"summary": "Given the DOM index of a datalist column and the value for that column, return an XPath to append to a datalist XPath for finding that value in the requested column index. No element will be found if the value does not exist in this column.",
					"param": [
						{
							"_": "The DOM index for the TD element representing the desired column.",
							"name": "columnIndex"
						},
						{
							"_": "The value corresponding the provided column.  ",
							"name": "columnValue"
						}
					],
					"key": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXDataListColumnValue",
					"filename": "M_Blueshirt_Core_Crm_InformationLibraryPanel_getXDataListColumnValue.htm",
					"title": "InformationLibraryPanel.getXDataListColumnValue Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">protected</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDataListColumnValue</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>,\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">columnValue</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Protected</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDataListColumnValue</span> ( \r\n\t<span class=\"parameter\">columnIndex</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>,\r\n\t<span class=\"parameter\">columnValue</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">protected</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDataListColumnValue</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">columnIndex</span>, \r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">columnValue</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.LocationsPanel",
					"summary": "Class to handle interactions for the 'Locations' panel.",
					"key": "T_Blueshirt_Core_Crm_LocationsPanel",
					"filename": "T_Blueshirt_Core_Crm_LocationsPanel.htm",
					"title": "LocationsPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">LocationsPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">LocationsPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">LocationsPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddLocation",
							"link": "M_Blueshirt_Core_Crm_LocationsPanel_AddLocation.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add an event location."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "LocationExists(String)",
							"link": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks if a location exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "LocationExists(TableRow)",
							"link": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Checks if a location exists."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.LocationsPanel.LocationExists(System.String)",
					"summary": "Checks if a location exists.",
					"param": {
						"_": "The name of the location.",
						"name": "locationName"
					},
					"returns": "True if the location exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists",
					"filename": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists.htm",
					"title": "LocationsPanel.LocationExists Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">LocationExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">locationName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">LocationExists</span> ( \r\n\t<span class=\"parameter\">locationName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">LocationExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">locationName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.LocationsPanel.LocationExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Checks if a location exists.",
					"param": {
						"_": "Mapping of the column captions to the desired location's values.",
						"name": "location"
					},
					"returns": "True if the location exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists",
					"filename": "M_Blueshirt_Core_Crm_LocationsPanel_LocationExists.htm",
					"title": "LocationsPanel.LocationExists Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">LocationExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">locationName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">LocationExists</span> ( \r\n\t<span class=\"parameter\">locationName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">LocationExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">locationName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.LocationsPanel.AddLocation(System.String)",
					"summary": "Add an event location.",
					"param": {
						"_": "The name of the location.",
						"name": "locationName"
					},
					"key": "M_Blueshirt_Core_Crm_LocationsPanel_AddLocation",
					"filename": "M_Blueshirt_Core_Crm_LocationsPanel_AddLocation.htm",
					"title": "LocationsPanel.AddLocation Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddLocation</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">locationName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddLocation</span> ( \r\n\t<span class=\"parameter\">locationName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddLocation</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">locationName</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MajorGivingSetupPanel",
					"summary": "Class to handle interactions for the 'Major Giving Setup' panel.",
					"key": "T_Blueshirt_Core_Crm_MajorGivingSetupPanel",
					"filename": "T_Blueshirt_Core_Crm_MajorGivingSetupPanel.htm",
					"title": "MajorGivingSetupPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MajorGivingSetupPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MajorGivingSetupPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MajorGivingSetupPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddPlanOutline",
							"link": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_AddPlanOutline.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a major giving plan outline."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PlanOutlineExists",
							"link": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_PlanOutlineExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a major giving plan outline exists"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingSetupPanel.AddPlanOutline(System.String,TechTalk.SpecFlow.Table)",
					"summary": "Add a major giving plan outline.",
					"param": [
						{
							"_": "The name of the plan outline.",
							"name": "planName"
						},
						{
							"_": "Table where each row represents a step to add.  Row keys correspond to the column captions.",
							"name": "steps"
						}
					],
					"key": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_AddPlanOutline",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_AddPlanOutline.htm",
					"title": "MajorGivingSetupPanel.AddPlanOutline Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddPlanOutline</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">planName</span>,\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">steps</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddPlanOutline</span> ( \r\n\t<span class=\"parameter\">planName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">steps</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddPlanOutline</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">planName</span>, \r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">steps</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MajorGivingSetupPanel.PlanOutlineExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a major giving plan outline exists",
					"param": {
						"_": "Mapping of field caption keys to their values.",
						"name": "plan"
					},
					"returns": "True if the plan exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_PlanOutlineExists",
					"filename": "M_Blueshirt_Core_Crm_MajorGivingSetupPanel_PlanOutlineExists.htm",
					"title": "MajorGivingSetupPanel.PlanOutlineExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlanOutlineExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">plan</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PlanOutlineExists</span> ( \r\n\t<span class=\"parameter\">plan</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlanOutlineExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">plan</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MarketingAcknowledgementsPanel",
					"summary": "Class to handle interactions for the 'Marketing Acknowledgements' panel.",
					"key": "T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel",
					"filename": "T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel.htm",
					"title": "MarketingAcknowledgementsPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAcknowledgementsPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAcknowledgementsPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAcknowledgementsPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddTemplate",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_AddTemplate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add a new marketing acknowledgement template."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteTemplate",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_DeleteTemplate.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a marketing acknowledgement template."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "TemplateExists",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_TemplateExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a marketing acknowledgement template exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementsPanel.AddTemplate",
					"summary": "Start to add a new marketing acknowledgement template.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_AddTemplate",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_AddTemplate.htm",
					"title": "MarketingAcknowledgementsPanel.AddTemplate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTemplate</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddTemplate</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddTemplate</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementsPanel.TemplateExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a marketing acknowledgement template exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "template"
					},
					"returns": "True if the template exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_TemplateExists",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_TemplateExists.htm",
					"title": "MarketingAcknowledgementsPanel.TemplateExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TemplateExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">template</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">TemplateExists</span> ( \r\n\t<span class=\"parameter\">template</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">TemplateExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">template</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementsPanel.DeleteTemplate(TechTalk.SpecFlow.TableRow)",
					"summary": "Delete a marketing acknowledgement template.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "template"
					},
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_DeleteTemplate",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_DeleteTemplate.htm",
					"title": "MarketingAcknowledgementsPanel.DeleteTemplate Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteTemplate</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">template</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteTemplate</span> ( \r\n\t<span class=\"parameter\">template</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteTemplate</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">template</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MarketingAcknowledgementTemplatePanel",
					"summary": "Class to handle interactions for the 'Marketing Acknowledgement Template' panel.",
					"key": "T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel",
					"filename": "T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel.htm",
					"title": "MarketingAcknowledgementTemplatePanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MarketingAcknowledgementTemplatePanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MarketingAcknowledgementTemplatePanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MarketingAcknowledgementTemplatePanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddAcknowledgementRule",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_AddAcknowledgementRule.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add an acknowledgement rule to the template."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ProcessAcknowledgement",
							"link": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_ProcessAcknowledgement.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start the process for the current acknowledgement template."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementTemplatePanel.AddAcknowledgementRule",
					"summary": "Start to add an acknowledgement rule to the template.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_AddAcknowledgementRule",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_AddAcknowledgementRule.htm",
					"title": "MarketingAcknowledgementTemplatePanel.AddAcknowledgementRule Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAcknowledgementRule</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddAcknowledgementRule</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddAcknowledgementRule</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MarketingAcknowledgementTemplatePanel.ProcessAcknowledgement",
					"summary": "Start the process for the current acknowledgement template.",
					"key": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_ProcessAcknowledgement",
					"filename": "M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_ProcessAcknowledgement.htm",
					"title": "MarketingAcknowledgementTemplatePanel.ProcessAcknowledgement Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ProcessAcknowledgement</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">ProcessAcknowledgement</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">ProcessAcknowledgement</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.MultiEventPanel",
					"summary": "Class to handle interactions for the 'Multi-Event' panel.",
					"key": "T_Blueshirt_Core_Crm_MultiEventPanel",
					"filename": "T_Blueshirt_Core_Crm_MultiEventPanel.htm",
					"title": "MultiEventPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">MultiEventPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">MultiEventPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">MultiEventPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsHierarchy",
							"link": "M_Blueshirt_Core_Crm_MultiEventPanel_IsHierarchy.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the multi-event has the provided event hierarchy."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsMultiEventName",
							"link": "M_Blueshirt_Core_Crm_MultiEventPanel_IsMultiEventName.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the multi event record page has the provided name."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiEventPanel.IsMultiEventName(System.String)",
					"summary": "Check if the multi event record page has the provided name.",
					"param": {
						"_": "The multi event name value to check for.",
						"name": "name"
					},
					"returns": "True if the multi event has the provided name, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MultiEventPanel_IsMultiEventName",
					"filename": "M_Blueshirt_Core_Crm_MultiEventPanel_IsMultiEventName.htm",
					"title": "MultiEventPanel.IsMultiEventName Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsMultiEventName</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsMultiEventName</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsMultiEventName</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiEventPanel.IsHierarchy(TechTalk.SpecFlow.Table)",
					"summary": "Check if the multi-event has the provided event hierarchy.",
					"param": {
						"_": "The hierarchy to validate.  A column 'event' should exist for the event\r\n            name with a column 'parent' mapping the expected parent of the event.  If no value is provided in the 'parent' column,\r\n            it is assumed that this is the root event.",
						"name": "hierarchy"
					},
					"returns": "True if the multi-event has the provided hierarchy, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_MultiEventPanel_IsHierarchy",
					"filename": "M_Blueshirt_Core_Crm_MultiEventPanel_IsHierarchy.htm",
					"title": "MultiEventPanel.IsHierarchy Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsHierarchy</span>(\r\n\t<span class=\"identifier\">Table</span> <span class=\"parameter\">hierarchy</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsHierarchy</span> ( \r\n\t<span class=\"parameter\">hierarchy</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Table</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsHierarchy</span>(\r\n\t<span class=\"identifier\">Table</span>^ <span class=\"parameter\">hierarchy</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiEventPanel.IsRootEvent(System.String)",
					"summary": "\r\n            Check if the provided event name is displayed as the root event for the Multi-Event page\r\n            "
				},
				{
					"name": "M:Blueshirt.Core.Crm.MultiEventPanel.IsChildOfParent(System.String,System.String)",
					"summary": "\r\n            Check if the provided event is listed as a child of the expected parent event.\r\n            "
				},
				{
					"name": "T:Blueshirt.Core.Crm.PackagesPanel",
					"summary": "Class to handle interactions for the 'Packages' panel.",
					"key": "T_Blueshirt_Core_Crm_PackagesPanel",
					"filename": "T_Blueshirt_Core_Crm_PackagesPanel.htm",
					"title": "PackagesPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PackagesPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PackagesPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PackagesPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddMailPackage",
							"link": "M_Blueshirt_Core_Crm_PackagesPanel_AddMailPackage.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add a mail package."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeletePackage(IDictionaryAddLanguageSpecificTextSet(\"LST920513D2_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST920513D2_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a package."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeletePackage(TableRow)",
							"link": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a package."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PackageExists(IDictionaryAddLanguageSpecificTextSet(\"LST920513D2_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST920513D2_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)",
							"link": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a package exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PackageExists(TableRow)",
							"link": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a package exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.PackagesPanel.packagesColumnCaptionToIndex",
					"summary": "\r\n            Static mapping of the column captions to their DOM index for the 'Packages' datalist.\r\n            "
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackagesPanel.DeletePackage(TechTalk.SpecFlow.TableRow)",
					"summary": "Delete a package.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "package"
					},
					"key": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage",
					"filename": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage.htm",
					"title": "PackagesPanel.DeletePackage Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeletePackage</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">package</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeletePackage</span> ( \r\n\t<span class=\"parameter\">package</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeletePackage</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">package</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackagesPanel.DeletePackage(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Delete a package.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "package"
					},
					"key": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage",
					"filename": "M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage.htm",
					"title": "PackagesPanel.DeletePackage Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeletePackage</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">package</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeletePackage</span> ( \r\n\t<span class=\"parameter\">package</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeletePackage</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">package</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackagesPanel.AddMailPackage",
					"summary": "Start to add a mail package.",
					"key": "M_Blueshirt_Core_Crm_PackagesPanel_AddMailPackage",
					"filename": "M_Blueshirt_Core_Crm_PackagesPanel_AddMailPackage.htm",
					"title": "PackagesPanel.AddMailPackage Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMailPackage</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddMailPackage</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddMailPackage</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackagesPanel.PackageExists(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Check if a package exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "package"
					},
					"returns": "True if the package exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists",
					"filename": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists.htm",
					"title": "PackagesPanel.PackageExists Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PackageExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">package</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PackageExists</span> ( \r\n\t<span class=\"parameter\">package</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PackageExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">package</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PackagesPanel.PackageExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a package exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "package"
					},
					"returns": "True if the package exists, false otherwise",
					"key": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists",
					"filename": "M_Blueshirt_Core_Crm_PackagesPanel_PackageExists.htm",
					"title": "PackagesPanel.PackageExists Method (IDictionary(String, String))",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PackageExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">package</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PackageExists</span> ( \r\n\t<span class=\"parameter\">package</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PackageExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">package</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PlanPanel",
					"summary": "Class to handle interactions for the 'Plan' panel.",
					"key": "T_Blueshirt_Core_Crm_PlanPanel",
					"filename": "T_Blueshirt_Core_Crm_PlanPanel.htm",
					"title": "PlanPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PlanPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PlanPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PlanPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddCompletedStep",
							"link": "M_Blueshirt_Core_Crm_PlanPanel_AddCompletedStep.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a completed step to the plan."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CompletedStepExists",
							"link": "M_Blueshirt_Core_Crm_PlanPanel_CompletedStepExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a completed step exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "EditSteps",
							"link": "M_Blueshirt_Core_Crm_PlanPanel_EditSteps.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Click the 'Edit steps' button for the 'Planned and pending steps' section."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PlannedStepExists",
							"link": "M_Blueshirt_Core_Crm_PlanPanel_PlannedStepExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a planned step exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PlanPanel.AddCompletedStep(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a completed step to the plan.",
					"param": {
						"_": "Mapping of the field captions for adding a step to their desired values.",
						"name": "step"
					},
					"key": "M_Blueshirt_Core_Crm_PlanPanel_AddCompletedStep",
					"filename": "M_Blueshirt_Core_Crm_PlanPanel_AddCompletedStep.htm",
					"title": "PlanPanel.AddCompletedStep Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddCompletedStep</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">step</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddCompletedStep</span> ( \r\n\t<span class=\"parameter\">step</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddCompletedStep</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">step</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PlanPanel.CompletedStepExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a completed step exists.",
					"param": {
						"_": "Mapping of the column captions for the 'Completed steps' section to a single row's values.",
						"name": "step"
					},
					"returns": "True if the step exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PlanPanel_CompletedStepExists",
					"filename": "M_Blueshirt_Core_Crm_PlanPanel_CompletedStepExists.htm",
					"title": "PlanPanel.CompletedStepExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">CompletedStepExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">step</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">CompletedStepExists</span> ( \r\n\t<span class=\"parameter\">step</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">CompletedStepExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">step</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PlanPanel.PlannedStepExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a planned step exists.",
					"param": {
						"_": "Mapping of the column captions for the 'Planned and pending steps' section to a single row's values.",
						"name": "step"
					},
					"returns": "True if the step exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PlanPanel_PlannedStepExists",
					"filename": "M_Blueshirt_Core_Crm_PlanPanel_PlannedStepExists.htm",
					"title": "PlanPanel.PlannedStepExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlannedStepExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">step</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PlannedStepExists</span> ( \r\n\t<span class=\"parameter\">step</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PlannedStepExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">step</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PlanPanel.EditSteps",
					"summary": "Click the 'Edit steps' button for the 'Planned and pending steps' section.",
					"key": "M_Blueshirt_Core_Crm_PlanPanel_EditSteps",
					"filename": "M_Blueshirt_Core_Crm_PlanPanel_EditSteps.htm",
					"title": "PlanPanel.EditSteps Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditSteps</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">EditSteps</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">EditSteps</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PledgePanel",
					"summary": "Class to handle interactions for the 'Pledge' panel.",
					"key": "T_Blueshirt_Core_Crm_PledgePanel",
					"filename": "T_Blueshirt_Core_Crm_PledgePanel.htm",
					"title": "PledgePanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PledgePanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PledgePanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PledgePanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DesignationExists",
							"link": "M_Blueshirt_Core_Crm_PledgePanel_DesignationExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a designation exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPledgeAmount",
							"link": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeAmount.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the pledge is for the provided amount."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPledgeConstituent",
							"link": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeConstituent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the pledge is associated with the provided constituent. Verifies by checking which constituent the header link navigates to."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsPledgeSubtype",
							"link": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeSubtype.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if the pledge has the provided subtype."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgePanel.IsPledgeConstituent(System.String)",
					"summary": "Check if the pledge is associated with the provided constituent. Verifies by checking which constituent the header link navigates to.",
					"param": {
						"_": "The last name of the constituent.",
						"name": "constituent"
					},
					"returns": "True if the pledge is associated with the provided constituent, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeConstituent",
					"filename": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeConstituent.htm",
					"title": "PledgePanel.IsPledgeConstituent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeConstituent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">constituent</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPledgeConstituent</span> ( \r\n\t<span class=\"parameter\">constituent</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeConstituent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">constituent</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgePanel.IsPledgeAmount(System.String)",
					"summary": "Check if the pledge is for the provided amount.",
					"param": {
						"_": "The amount to check for.",
						"name": "amount"
					},
					"returns": "True if the pledge is for the provided amount, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeAmount",
					"filename": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeAmount.htm",
					"title": "PledgePanel.IsPledgeAmount Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeAmount</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">amount</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPledgeAmount</span> ( \r\n\t<span class=\"parameter\">amount</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeAmount</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">amount</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgePanel.IsPledgeSubtype(System.String)",
					"summary": "Check if the pledge has the provided subtype.",
					"param": {
						"_": "The subtype to check for.",
						"name": "subtype"
					},
					"returns": "True if the pledge has the subtype, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeSubtype",
					"filename": "M_Blueshirt_Core_Crm_PledgePanel_IsPledgeSubtype.htm",
					"title": "PledgePanel.IsPledgeSubtype Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeSubtype</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">subtype</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsPledgeSubtype</span> ( \r\n\t<span class=\"parameter\">subtype</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsPledgeSubtype</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">subtype</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgePanel.DesignationExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a designation exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "designation"
					},
					"returns": "True if the designation exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgePanel_DesignationExists",
					"filename": "M_Blueshirt_Core_Crm_PledgePanel_DesignationExists.htm",
					"title": "PledgePanel.DesignationExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">designation</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">DesignationExists</span> ( \r\n\t<span class=\"parameter\">designation</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">designation</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.PledgeSubtypePanel",
					"summary": "Class to handle interactions for the 'Pledge Subtype' panel.",
					"key": "T_Blueshirt_Core_Crm_PledgeSubtypePanel",
					"filename": "T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm",
					"title": "PledgeSubtypePanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">PledgeSubtypePanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">PledgeSubtypePanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">PledgeSubtypePanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddSubtype(TableRow)",
							"link": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a pledge subtype."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddSubtype(String, Boolean)",
							"link": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a pledge subtype."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SubtypeExists(String)",
							"link": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a subtype exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SubtypeExists(TableRow)",
							"link": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a subtype exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeSubtypePanel.AddSubtype(System.String,System.Boolean)",
					"summary": "Add a pledge subtype.",
					"param": [
						{
							"_": "The name of the subtype.",
							"name": "name"
						},
						{
							"_": "Boolean indicating whether the 'Post to GL' checkbox should bet set or not.",
							"name": "postToGL"
						}
					],
					"key": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype",
					"filename": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype.htm",
					"title": "PledgeSubtypePanel.AddSubtype Method (String, Boolean)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSubtype</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">postToGL</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddSubtype</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">postToGL</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSubtype</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">postToGL</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeSubtypePanel.AddSubtype(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a pledge subtype.",
					"param": {
						"_": "Mapping of the 'Add a pledge subtype' field captions to their values.",
						"name": "subtype"
					},
					"key": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype",
					"filename": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype.htm",
					"title": "PledgeSubtypePanel.AddSubtype Method (String, Boolean)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSubtype</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>,\r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">postToGL</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddSubtype</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>,\r\n\t<span class=\"parameter\">postToGL</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSubtype</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>, \r\n\t<span class=\"identifier\">bool</span> <span class=\"parameter\">postToGL</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeSubtypePanel.SubtypeExists(System.String)",
					"summary": "Check if a subtype exists.",
					"param": {
						"_": "The name of the subtype/",
						"name": "name"
					},
					"returns": "True if the subtype exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists",
					"filename": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists.htm",
					"title": "PledgeSubtypePanel.SubtypeExists Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SubtypeExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SubtypeExists</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SubtypeExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.PledgeSubtypePanel.SubtypeExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a subtype exists.",
					"param": {
						"_": "Mapping of column captions to a single row's values.",
						"name": "subtype"
					},
					"returns": "True if the subtype exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists",
					"filename": "M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists.htm",
					"title": "PledgeSubtypePanel.SubtypeExists Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SubtypeExists</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">name</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SubtypeExists</span> ( \r\n\t<span class=\"parameter\">name</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SubtypeExists</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">name</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.Panels.QueryPanel",
					"summary": "Class to handle interactions for the 'Query' panel.",
					"key": "T_Blueshirt_Core_Crm_Panels_QueryPanel",
					"filename": "T_Blueshirt_Core_Crm_Panels_QueryPanel.htm",
					"title": "QueryPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">QueryPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">QueryPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">QueryPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddQuery",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_AddQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "CheckQueryPresent",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_CheckQueryPresent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteQuery(String)",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_DeleteQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteQuery(String, String)",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_DeleteQuery_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXDeleteQuery",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXDeleteQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an XPath for the Delete Query menu item on a QueryPanel."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXQuery",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXQuery.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an Xpath for a Query in a results row on a QueryPanel."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenQueriesTab",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_OpenQueriesTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenSelectionsTab",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_OpenSelectionsTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SetFilter",
							"link": "M_Blueshirt_Core_Crm_Panels_QueryPanel_SetFilter.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panels.QueryPanel.getXAddButton",
					"summary": "Returns an Xpath for the Add button on a QueryPanel.",
					"key": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAddButton",
					"filename": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAddButton.htm",
					"title": "QueryPanel.getXAddButton Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAddButton</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXAddButton</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAddButton</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panels.QueryPanel.getXAdhocQuery",
					"summary": "Returns an Xpath for the Adhoc Query menu item on a QueryPanel.",
					"key": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAdhocQuery",
					"filename": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAdhocQuery.htm",
					"title": "QueryPanel.getXAdhocQuery Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXAdhocQuery</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXAdhocQuery</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXAdhocQuery</span>"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.Panels.QueryPanel.getXFilterQueryField",
					"summary": "Returns an Xpath for the Query Filter field on a QueryPanel.",
					"key": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXFilterQueryField",
					"filename": "F_Blueshirt_Core_Crm_Panels_QueryPanel_getXFilterQueryField.htm",
					"title": "QueryPanel.getXFilterQueryField Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXFilterQueryField</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXFilterQueryField</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXFilterQueryField</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panels.QueryPanel.getXDeleteQuery(System.String)",
					"summary": "Returns an XPath for the Delete Query menu item on a QueryPanel.",
					"param": {
						"_": "The text of the Query to delete",
						"name": "text"
					},
					"returns": "",
					"key": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXDeleteQuery",
					"filename": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXDeleteQuery.htm",
					"title": "QueryPanel.getXDeleteQuery Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXDeleteQuery</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">text</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXDeleteQuery</span> ( \r\n\t<span class=\"parameter\">text</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXDeleteQuery</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">text</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.Panels.QueryPanel.getXQuery(System.String)",
					"summary": "Returns an Xpath for a Query in a results row on a QueryPanel.",
					"param": {
						"_": "The text of the Query.",
						"name": "text"
					},
					"returns": "",
					"key": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXQuery",
					"filename": "M_Blueshirt_Core_Crm_Panels_QueryPanel_getXQuery.htm",
					"title": "QueryPanel.getXQuery Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXQuery</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">text</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXQuery</span> ( \r\n\t<span class=\"parameter\">text</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXQuery</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">text</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.BBIS.BBISHomePage.Logon",
					"summary": "Logon with the credentials specified in the config file.",
					"key": "M_Blueshirt_Core_BBIS_BBISHomePage_Logon",
					"filename": "M_Blueshirt_Core_BBIS_BBISHomePage_Logon.htm",
					"title": "BBISHomePage.Logon Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Logon</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Logon</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Logon</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.BBCRMHomePage",
					"summary": "A class for handling interactions and actions on the main BBCRM page.",
					"key": "T_Blueshirt_Core_Crm_BBCRMHomePage",
					"filename": "T_Blueshirt_Core_Crm_BBCRMHomePage.htm",
					"title": "BBCRMHomePage Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">BBCRMHomePage</span> : <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">BBCRMHomePage</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">BaseComponent</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">BBCRMHomePage</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">BaseComponent</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXExtMenuTab",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXExtMenuTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXExtTab",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXExtTab.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Returns an Xpath that will match a Tab either on the main tool bar or the expanded one. Any Functional Area link can be in two places; the main 'Tabs' menu and in the expanded menu. This Xpath matches both elements. It relies on only one side matching at a time, which is true for this method but might not be for all possible permutaions of GUI manipulation, particularly changing window size. So the uniqueness of this Xpath depends on the sequence of GUI actions that lead up to its use."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "getXTask",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXTask.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Format an xPath to find a task in the left explorer bar."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "Logon",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_Logon.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Logon with the credentials specified in the config file."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "LogonAs",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_LogonAs.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenAnalysisFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenAnalysisFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Analysis' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenConstituentsFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenConstituentsFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Constituents' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenEventsFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenEventsFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Events' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenFunctionalArea(String)",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open a Functional Area by caption."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenFunctionalArea(String, String)",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea_1.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Open a Functional Area by caption and wait for its header image to load."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenFundraisingFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFundraisingFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Fundraising' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenMarketingAndCommunicationsFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMarketingAndCommunicationsFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Marketing and Communications' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenMembershipsFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMembershipsFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Memberships' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenProspectsFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenProspectsFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Prospects' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "OpenRevenueFA",
							"link": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenRevenueFA.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the 'Revenue' functional area."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif",
								"../icons/static.gif"
							],
							"name": "BaseUrl",
							"link": "P_Blueshirt_Core_Crm_BBCRMHomePage_BaseUrl.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						},
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						},
						{
							"icons": [
								"../icons/pubproperty.gif",
								"../icons/static.gif"
							],
							"name": "VirtualPath",
							"link": "P_Blueshirt_Core_Crm_BBCRMHomePage_VirtualPath.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": ""
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BBCRMHomePage.getXMenuMore",
					"summary": "Returns an Xpath for the more button icon on the toolbar.",
					"key": "F_Blueshirt_Core_Crm_BBCRMHomePage_getXMenuMore",
					"filename": "F_Blueshirt_Core_Crm_BBCRMHomePage_getXMenuMore.htm",
					"title": "BBCRMHomePage.getXMenuMore Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">const</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXMenuMore</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Const</span> <span class=\"identifier\">getXMenuMore</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">literal</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXMenuMore</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.getXTask(System.String)",
					"summary": "Format an xPath to find a task in the left explorer bar.",
					"param": {
						"_": "The caption of the task.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXTask",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXTask.htm",
					"title": "BBCRMHomePage.getXTask Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXTask</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXTask</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXTask</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.getXExtTab(System.String)",
					"summary": "Returns an Xpath that will match a Tab either on the main tool bar or the expanded one. Any Functional Area link can be in two places; the main 'Tabs' menu and in the expanded menu. This Xpath matches both elements. It relies on only one side matching at a time, which is true for this method but might not be for all possible permutaions of GUI manipulation, particularly changing window size. So the uniqueness of this Xpath depends on the sequence of GUI actions that lead up to its use.",
					"param": {
						"_": "The caption of the tab.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXExtTab",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_getXExtTab.htm",
					"title": "BBCRMHomePage.getXExtTab Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXExtTab</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">getXExtTab</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXExtTab</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "F:Blueshirt.Core.Crm.BBCRMHomePage.getXWaitBar",
					"summary": "Returns an Xpath for the WaitBar",
					"key": "F_Blueshirt_Core_Crm_BBCRMHomePage_getXWaitBar",
					"filename": "F_Blueshirt_Core_Crm_BBCRMHomePage_getXWaitBar.htm",
					"title": "BBCRMHomePage.getXWaitBar Field",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">string</span> <span class=\"identifier\">getXWaitBar</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"identifier\">getXWaitBar</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">String</span>^ <span class=\"identifier\">getXWaitBar</span>"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenConstituentsFA",
					"summary": "Navigate to the 'Constituents' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenConstituentsFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenConstituentsFA.htm",
					"title": "BBCRMHomePage.OpenConstituentsFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenConstituentsFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenConstituentsFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenConstituentsFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenFundraisingFA",
					"summary": "Navigate to the 'Fundraising' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFundraisingFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFundraisingFA.htm",
					"title": "BBCRMHomePage.OpenFundraisingFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFundraisingFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenFundraisingFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFundraisingFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenRevenueFA",
					"summary": "Navigate to the 'Revenue' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenRevenueFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenRevenueFA.htm",
					"title": "BBCRMHomePage.OpenRevenueFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenRevenueFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenRevenueFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenRevenueFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenEventsFA",
					"summary": "Navigate to the 'Events' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenEventsFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenEventsFA.htm",
					"title": "BBCRMHomePage.OpenEventsFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenEventsFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenEventsFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenEventsFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenProspectsFA",
					"summary": "Navigate to the 'Prospects' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenProspectsFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenProspectsFA.htm",
					"title": "BBCRMHomePage.OpenProspectsFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenProspectsFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenProspectsFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenProspectsFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenAnalysisFA",
					"summary": "Navigate to the 'Analysis' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenAnalysisFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenAnalysisFA.htm",
					"title": "BBCRMHomePage.OpenAnalysisFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenAnalysisFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenAnalysisFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenAnalysisFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenMembershipsFA",
					"summary": "Navigate to the 'Memberships' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMembershipsFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMembershipsFA.htm",
					"title": "BBCRMHomePage.OpenMembershipsFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenMembershipsFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenMembershipsFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenMembershipsFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenMarketingAndCommunicationsFA",
					"summary": "Navigate to the 'Marketing and Communications' functional area.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMarketingAndCommunicationsFA",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMarketingAndCommunicationsFA.htm",
					"title": "BBCRMHomePage.OpenMarketingAndCommunicationsFA Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenMarketingAndCommunicationsFA</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenMarketingAndCommunicationsFA</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenMarketingAndCommunicationsFA</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenFunctionalArea(System.String,System.String)",
					"summary": "Open a Functional Area by caption.",
					"param": [
						{
							"_": "The caption(name) of the Functional Area to open.",
							"name": "caption"
						},
						{
							"_": "All or part of the image name that the desired functional area displays in the header.",
							"name": "imageName"
						}
					],
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea.htm",
					"title": "BBCRMHomePage.OpenFunctionalArea Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFunctionalArea</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenFunctionalArea</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFunctionalArea</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.OpenFunctionalArea(System.String)",
					"summary": "Open a Functional Area by caption.",
					"param": {
						"_": "The caption(name) of the Functional Area to open.",
						"name": "caption"
					},
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea.htm",
					"title": "BBCRMHomePage.OpenFunctionalArea Method (String)",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFunctionalArea</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">caption</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">OpenFunctionalArea</span> ( \r\n\t<span class=\"parameter\">caption</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">OpenFunctionalArea</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">caption</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.BBCRMHomePage.Logon",
					"summary": "Logon with the credentials specified in the config file.",
					"key": "M_Blueshirt_Core_Crm_BBCRMHomePage_Logon",
					"filename": "M_Blueshirt_Core_Crm_BBCRMHomePage_Logon.htm",
					"title": "BBCRMHomePage.Logon Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Logon</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">Logon</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">Logon</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.ReceiptsPanel",
					"summary": "Class to handle interactions for the 'Receipts' panel.",
					"key": "T_Blueshirt_Core_Crm_ReceiptsPanel",
					"filename": "T_Blueshirt_Core_Crm_ReceiptsPanel.htm",
					"title": "ReceiptsPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">ReceiptsPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">ReceiptsPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">ReceiptsPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddReceipt",
							"link": "M_Blueshirt_Core_Crm_ReceiptsPanel_AddReceipt.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Add a receipt process."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "RunReceiptProcess",
							"link": "M_Blueshirt_Core_Crm_ReceiptsPanel_RunReceiptProcess.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Select a receipt process and start it."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ReceiptsPanel.AddReceipt(TechTalk.SpecFlow.TableRow)",
					"summary": "Add a receipt process.",
					"param": {
						"_": "Mapping of the field captions to their desired values.",
						"name": "receipt"
					},
					"key": "M_Blueshirt_Core_Crm_ReceiptsPanel_AddReceipt",
					"filename": "M_Blueshirt_Core_Crm_ReceiptsPanel_AddReceipt.htm",
					"title": "ReceiptsPanel.AddReceipt Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddReceipt</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">receipt</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddReceipt</span> ( \r\n\t<span class=\"parameter\">receipt</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddReceipt</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">receipt</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.ReceiptsPanel.RunReceiptProcess(TechTalk.SpecFlow.TableRow)",
					"summary": "Select a receipt process and start it.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "receiptProcess"
					},
					"key": "M_Blueshirt_Core_Crm_ReceiptsPanel_RunReceiptProcess",
					"filename": "M_Blueshirt_Core_Crm_ReceiptsPanel_RunReceiptProcess.htm",
					"title": "ReceiptsPanel.RunReceiptProcess Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">RunReceiptProcess</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">receiptProcess</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">RunReceiptProcess</span> ( \r\n\t<span class=\"parameter\">receiptProcess</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">RunReceiptProcess</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">receiptProcess</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.RecurringGiftPanel",
					"summary": "Class to handle interactions for the 'Recurring Gift' panel.",
					"key": "T_Blueshirt_Core_Crm_RecurringGiftPanel",
					"filename": "T_Blueshirt_Core_Crm_RecurringGiftPanel.htm",
					"title": "RecurringGiftPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">RecurringGiftPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">RecurringGiftPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">RecurringGiftPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DesignationExists",
							"link": "M_Blueshirt_Core_Crm_RecurringGiftPanel_DesignationExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a designation exists for the recurring gift."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RecurringGiftPanel.DesignationExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a designation exists for the recurring gift.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "designation"
					},
					"returns": "True if the designation exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_RecurringGiftPanel_DesignationExists",
					"filename": "M_Blueshirt_Core_Crm_RecurringGiftPanel_DesignationExists.htm",
					"title": "RecurringGiftPanel.DesignationExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">designation</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">DesignationExists</span> ( \r\n\t<span class=\"parameter\">designation</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">DesignationExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">designation</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.RegistrantPanel",
					"summary": "Class to handle interactions for the 'Event Registrant' panel.",
					"key": "T_Blueshirt_Core_Crm_RegistrantPanel",
					"filename": "T_Blueshirt_Core_Crm_RegistrantPanel.htm",
					"title": "RegistrantPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">RegistrantPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">RegistrantPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">RegistrantPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsEvent",
							"link": "M_Blueshirt_Core_Crm_RegistrantPanel_IsEvent.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the name of the event the registrant is registered for."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsNumGuests",
							"link": "M_Blueshirt_Core_Crm_RegistrantPanel_IsNumGuests.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the number of listed guests for the registrant."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsRegistrant",
							"link": "M_Blueshirt_Core_Crm_RegistrantPanel_IsRegistrant.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the name of the registrant on the panel."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RegistrantPanel.IsRegistrant(System.String)",
					"summary": "Check the name of the registrant on the panel.",
					"param": {
						"_": "The name of the registrant to check for.",
						"name": "registrant"
					},
					"returns": "True if the provided name is the name of the registrant.",
					"key": "M_Blueshirt_Core_Crm_RegistrantPanel_IsRegistrant",
					"filename": "M_Blueshirt_Core_Crm_RegistrantPanel_IsRegistrant.htm",
					"title": "RegistrantPanel.IsRegistrant Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsRegistrant</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">registrant</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsRegistrant</span> ( \r\n\t<span class=\"parameter\">registrant</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsRegistrant</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">registrant</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RegistrantPanel.IsEvent(System.String)",
					"summary": "Check the name of the event the registrant is registered for.",
					"param": {
						"_": "The name of the even to check for.",
						"name": "eventName"
					},
					"returns": "True if the provided name is the name of the associated event.",
					"key": "M_Blueshirt_Core_Crm_RegistrantPanel_IsEvent",
					"filename": "M_Blueshirt_Core_Crm_RegistrantPanel_IsEvent.htm",
					"title": "RegistrantPanel.IsEvent Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsEvent</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">eventName</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsEvent</span> ( \r\n\t<span class=\"parameter\">eventName</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsEvent</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">eventName</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RegistrantPanel.IsNumGuests(System.Int32)",
					"summary": "Check the number of listed guests for the registrant.",
					"param": {
						"_": "The number of guests to check for.",
						"name": "numGuests"
					},
					"returns": "True if the provided number is the listed number of guests.",
					"key": "M_Blueshirt_Core_Crm_RegistrantPanel_IsNumGuests",
					"filename": "M_Blueshirt_Core_Crm_RegistrantPanel_IsNumGuests.htm",
					"title": "RegistrantPanel.IsNumGuests Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumGuests</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numGuests</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsNumGuests</span> ( \r\n\t<span class=\"parameter\">numGuests</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Integer</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsNumGuests</span>(\r\n\t<span class=\"identifier\">int</span> <span class=\"parameter\">numGuests</span>\r\n)"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.RevenueRecordPanel",
					"summary": "Class to handle interactions for the 'Revenue Record' panel.",
					"key": "T_Blueshirt_Core_Crm_RevenueRecordPanel",
					"filename": "T_Blueshirt_Core_Crm_RevenueRecordPanel.htm",
					"title": "RevenueRecordPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">RevenueRecordPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">RevenueRecordPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">RevenueRecordPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsAcknowledged",
							"link": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsAcknowledged.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a payment is marked as 'Acknowledged'"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsReceipted",
							"link": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsReceipted.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a payment is marked as 'Receipted'"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "IsSubtype",
							"link": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsSubtype.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check the subtype of the revenue record."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "PaymentExists",
							"link": "M_Blueshirt_Core_Crm_RevenueRecordPanel_PaymentExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a payment exists on the revenue record."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueRecordPanel.IsSubtype(System.String)",
					"summary": "Check the subtype of the revenue record.",
					"param": {
						"_": "The subtype to check for.",
						"name": "subtype"
					},
					"returns": "True if the subtype is the expected value, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsSubtype",
					"filename": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsSubtype.htm",
					"title": "RevenueRecordPanel.IsSubtype Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsSubtype</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">subtype</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsSubtype</span> ( \r\n\t<span class=\"parameter\">subtype</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsSubtype</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">subtype</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueRecordPanel.PaymentExists(TechTalk.SpecFlow.TableRow)",
					"summary": "Check if a payment exists on the revenue record.",
					"param": {
						"_": "Mapping of the donation view form's captions (minus the colon) to a single donation's values.",
						"name": "donation"
					},
					"returns": "True if the donation exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_RevenueRecordPanel_PaymentExists",
					"filename": "M_Blueshirt_Core_Crm_RevenueRecordPanel_PaymentExists.htm",
					"title": "RevenueRecordPanel.PaymentExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PaymentExists</span>(\r\n\t<span class=\"identifier\">TableRow</span> <span class=\"parameter\">donation</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">PaymentExists</span> ( \r\n\t<span class=\"parameter\">donation</span> <span class=\"keyword\">As</span> <span class=\"identifier\">TableRow</span>\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">PaymentExists</span>(\r\n\t<span class=\"identifier\">TableRow</span>^ <span class=\"parameter\">donation</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueRecordPanel.IsReceipted",
					"summary": "Check if a payment is marked as 'Receipted'",
					"returns": "True if the payment is 'Receipted', false otherwise.",
					"key": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsReceipted",
					"filename": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsReceipted.htm",
					"title": "RevenueRecordPanel.IsReceipted Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsReceipted</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsReceipted</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsReceipted</span>()"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.RevenueRecordPanel.IsAcknowledged",
					"summary": "Check if a payment is marked as 'Acknowledged'",
					"returns": "True if the payment is 'Acknowledged', false otherwise.",
					"key": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsAcknowledged",
					"filename": "M_Blueshirt_Core_Crm_RevenueRecordPanel_IsAcknowledged.htm",
					"title": "RevenueRecordPanel.IsAcknowledged Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsAcknowledged</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">IsAcknowledged</span> <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">IsAcknowledged</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.SegmentPanel",
					"summary": "Class to handle interactions for the 'Segment' panel.",
					"key": "T_Blueshirt_Core_Crm_SegmentPanel",
					"filename": "T_Blueshirt_Core_Crm_SegmentPanel.htm",
					"title": "SegmentPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">SegmentPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">SegmentPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">SegmentPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "ActivatedMarketingEffortExists",
							"link": "M_Blueshirt_Core_Crm_SegmentPanel_ActivatedMarketingEffortExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if an activated marketing effort exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteActivatedMarketingEffort",
							"link": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteActivatedMarketingEffort.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete an activated marketing effort using the specified template."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteSegment",
							"link": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteSegment.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete the current segment."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentPanel.ActivatedMarketingEffortExists(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Check if an activated marketing effort exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "effort"
					},
					"returns": "True if the effort exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_SegmentPanel_ActivatedMarketingEffortExists",
					"filename": "M_Blueshirt_Core_Crm_SegmentPanel_ActivatedMarketingEffortExists.htm",
					"title": "SegmentPanel.ActivatedMarketingEffortExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ActivatedMarketingEffortExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">effort</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">ActivatedMarketingEffortExists</span> ( \r\n\t<span class=\"parameter\">effort</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">ActivatedMarketingEffortExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">effort</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentPanel.DeleteActivatedMarketingEffort(System.String)",
					"summary": "Delete an activated marketing effort using the specified template.",
					"param": {
						"_": "The name of the template that the effort uses.",
						"name": "marketingTemplate"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteActivatedMarketingEffort",
					"filename": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteActivatedMarketingEffort.htm",
					"title": "SegmentPanel.DeleteActivatedMarketingEffort Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteActivatedMarketingEffort</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">marketingTemplate</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteActivatedMarketingEffort</span> ( \r\n\t<span class=\"parameter\">marketingTemplate</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteActivatedMarketingEffort</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">marketingTemplate</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentPanel.DeleteSegment",
					"summary": "Delete the current segment.",
					"key": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteSegment",
					"filename": "M_Blueshirt_Core_Crm_SegmentPanel_DeleteSegment.htm",
					"title": "SegmentPanel.DeleteSegment Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteSegment</span>()"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteSegment</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteSegment</span>()"
						}
					]
				},
				{
					"name": "T:Blueshirt.Core.Crm.SegmentsPanel",
					"summary": "Class to handle interactions for the 'Segments' panel.",
					"key": "T_Blueshirt_Core_Crm_SegmentsPanel",
					"filename": "T_Blueshirt_Core_Crm_SegmentsPanel.htm",
					"title": "SegmentsPanel Class",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"identifier\">SegmentsPanel</span> : <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Class</span> <span class=\"identifier\">SegmentsPanel</span>\r\n\t<span class=\"keyword\">Inherits</span> <span class=\"identifier\">Panel</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">ref class</span> <span class=\"identifier\">SegmentsPanel</span> : <span class=\"keyword\">public</span> <span class=\"identifier\">Panel</span>"
						}
					],
					"methods": [
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "AddSegment",
							"link": "M_Blueshirt_Core_Crm_SegmentsPanel_AddSegment.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Start to add a segment of the specified type."
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "DeleteSegment",
							"link": "M_Blueshirt_Core_Crm_SegmentsPanel_DeleteSegment.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Delete a segment."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "Equals",
							"link": "http://msdn2.microsoft.com/en-us/library/bsc2ak47",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "Finalize",
							"link": "http://msdn2.microsoft.com/en-us/library/4k87zsw7",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetHashCode",
							"link": "http://msdn2.microsoft.com/en-us/library/zdee4b3y",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Serves as a hash function for a particular type. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "GetType",
							"link": "http://msdn2.microsoft.com/en-us/library/dfwy45w9",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Gets the Type of the current instance. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "GoToSegment",
							"link": "M_Blueshirt_Core_Crm_SegmentsPanel_GoToSegment.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Navigate to the segment panel of a specified segment."
						},
						{
							"icons": [
								"../icons/protmethod.gif"
							],
							"name": "MemberwiseClone",
							"link": "http://msdn2.microsoft.com/en-us/library/57ctke0a",
							"properties": [
								"protected",
								"inherited",
								"notNetfw"
							],
							"description": "Creates a shallow copy of the current Object. (Inherited from Object.)"
						},
						{
							"icons": [
								"../icons/pubmethod.gif",
								"../icons/static.gif"
							],
							"name": "SegmentExists",
							"link": "M_Blueshirt_Core_Crm_SegmentsPanel_SegmentExists.htm",
							"properties": [
								"public",
								"static",
								"declared",
								"notNetfw"
							],
							"description": "Check if a segment exists."
						},
						{
							"icons": [
								"../icons/pubmethod.gif"
							],
							"name": "ToString",
							"link": "http://msdn2.microsoft.com/en-us/library/7bxwbwt2",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "Returns a string that represents the current object. (Inherited from Object.)"
						}
					],
					"properties": [
						{
							"icons": [
								"../icons/pubproperty.gif"
							],
							"name": "Title",
							"link": "P_Blueshirt_Core_Base_BaseComponent_Title.htm",
							"properties": [
								"public",
								"inherited",
								"notNetfw"
							],
							"description": "(Inherited from BaseComponent.)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentsPanel.AddSegment(System.String)",
					"summary": "Start to add a segment of the specified type.",
					"param": {
						"_": "The type of segment to add.  Corresponds to the caption of Add menu items.",
						"name": "segmentType"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentsPanel_AddSegment",
					"filename": "M_Blueshirt_Core_Crm_SegmentsPanel_AddSegment.htm",
					"title": "SegmentsPanel.AddSegment Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSegment</span>(\r\n\t<span class=\"identifier\">string</span> <span class=\"parameter\">segmentType</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">AddSegment</span> ( \r\n\t<span class=\"parameter\">segmentType</span> <span class=\"keyword\">As</span> <span class=\"identifier\">String</span>\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">AddSegment</span>(\r\n\t<span class=\"identifier\">String</span>^ <span class=\"parameter\">segmentType</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentsPanel.DeleteSegment(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Delete a segment.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "segment"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentsPanel_DeleteSegment",
					"filename": "M_Blueshirt_Core_Crm_SegmentsPanel_DeleteSegment.htm",
					"title": "SegmentsPanel.DeleteSegment Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteSegment</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">segment</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">DeleteSegment</span> ( \r\n\t<span class=\"parameter\">segment</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">DeleteSegment</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">segment</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentsPanel.SegmentExists(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Check if a segment exists.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "segment"
					},
					"returns": "True if the segment exists, false otherwise.",
					"key": "M_Blueshirt_Core_Crm_SegmentsPanel_SegmentExists",
					"filename": "M_Blueshirt_Core_Crm_SegmentsPanel_SegmentExists.htm",
					"title": "SegmentsPanel.SegmentExists Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SegmentExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">segment</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Function</span> <span class=\"identifier\">SegmentExists</span> ( \r\n\t<span class=\"parameter\">segment</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n) <span class=\"keyword\">As</span> <span class=\"identifier\">Boolean</span>"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"identifier\">bool</span> <span class=\"identifier\">SegmentExists</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">segment</span>\r\n)"
						}
					]
				},
				{
					"name": "M:Blueshirt.Core.Crm.SegmentsPanel.GoToSegment(System.Collections.Generic.IDictionary{System.String,System.String})",
					"summary": "Navigate to the segment panel of a specified segment.",
					"param": {
						"_": "Mapping of the column captions to a single row's values.",
						"name": "segment"
					},
					"key": "M_Blueshirt_Core_Crm_SegmentsPanel_GoToSegment",
					"filename": "M_Blueshirt_Core_Crm_SegmentsPanel_GoToSegment.htm",
					"title": "SegmentsPanel.GoToSegment Method ",
					"syntax": [
						{
							"type": "C#",
							"code": "<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">GoToSegment</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">string</span>, <span class=\"identifier\">string</span>&gt; <span class=\"parameter\">segment</span>\r\n)"
						},
						{
							"type": "VB",
							"code": "<span class=\"keyword\">Public</span> <span class=\"keyword\">Shared</span> <span class=\"keyword\">Sub</span> <span class=\"identifier\">GoToSegment</span> ( \r\n\t<span class=\"parameter\">segment</span> <span class=\"keyword\">As</span> <span class=\"identifier\">IDictionary</span>(<span class=\"keyword\">Of</span> <span class=\"identifier\">String</span>, <span class=\"identifier\">String</span>)\r\n)"
						},
						{
							"type": "C++",
							"code": "<span class=\"keyword\">public</span>:\r\n<span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"identifier\">GoToSegment</span>(\r\n\t<span class=\"identifier\">IDictionary</span>&lt;<span class=\"identifier\">String</span>^, <span class=\"identifier\">String</span>^&gt;^ <span class=\"parameter\">segment</span>\r\n)"
						}
					]
				}
			]
		}
	}
}