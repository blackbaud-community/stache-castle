{"doc":{"assembly":{"name":"Blueshirt_Core"},"members":{"member":[{"name":"T_Blueshirt_Core_Base_BaseComponent","summary":"\r\n            Base functionality that applies to entire BBCRM and BBIS products for automation.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","#":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Bbis_Pages_BBISHomePage.htm":"Blueshirt.Core.Bbis.PagesBBISHomePage","T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"Blueshirt.Core.CrmBBCRMHomePage","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel"},"namespace":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BaseComponent type exposes the following members.","constructors":{"BaseComponent":{"value":"Initializes a new instance of the BaseComponent class","description":"Initializes a new instance of the BaseComponent class"}},"methods":{"ClickButton":{"value":"\n            Clicks a basic button.\n            Uniqueness is dependent purely on the caption!\n            ","description":"\n            Clicks a basic button.\n            Uniqueness is dependent purely on the caption!\n            "},"ConvertToBool":{"value":"\n            Convert the string to a bool value.\n            ","description":"\n            Convert the string to a bool value.\n            "},"CopyToClipBoard":{"value":"\n            Start a new thread that copies a value to the System's Clipboard and waits for that\n            thread to return.\n            ","description":"\n            Start a new thread that copies a value to the System's Clipboard and waits for that\n            thread to return.\n            "},"ElementValueIsNotNullOrEmpty":{"value":"\n            Wait until a displayed element found with the provided xPath does not have a null or empty value\n            If no matching element is found, a WebDriverTimeoutException is thrown.\n            ","description":"\n            Wait until a displayed element found with the provided xPath does not have a null or empty value\n            If no matching element is found, a WebDriverTimeoutException is thrown.\n            "},"ElementValueIsSet":{"value":"\n            Wait until a displayed element found with the provided xPath has the expected value as its text.\n            If no matching element is found with the expected value, a WebDriverTimeoutException is thrown.\n            ","description":"\n            Wait until a displayed element found with the provided xPath has the expected value as its text.\n            If no matching element is found with the expected value, a WebDriverTimeoutException is thrown.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Exists":{"value":"\n            Checks if a displayed element exists using the provided xPath selector.\n            ","description":"\n            Checks if a displayed element exists using the provided xPath selector.\n            "},"ExistsNow":{"value":"\n            Check if a displayed element exists immediately using the provided xPath selector.\n            ","description":"\n            Check if a displayed element exists immediately using the provided xPath selector.\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetDatalistColumnIndex":{"value":"\n            Given the xPath for a datalist/grid's headers and the caption of a datalist column, find the index of the column\n            as it relates to the DOM.\n            ","description":"\n            Given the xPath for a datalist/grid's headers and the caption of a datalist column, find the index of the column\n            as it relates to the DOM.\n            "},"GetDisplayedElement":{"value":"\n            Get the displayed IWebElement using the provided xPath.\n            ","description":"\n            Get the displayed IWebElement using the provided xPath.\n            "},"GetEnabledElement":{"value":"\n            Get the first found IWebElement based on an xPath that is Displayed AND Enabled.\n            If no element is found, a WebDriverTimeoutException is thrown.\n            ","description":"\n            Get the first found IWebElement based on an xPath that is Displayed AND Enabled.\n            If no element is found, a WebDriverTimeoutException is thrown.\n            "},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXButton":{"value":"\n            Format an XPath to find a button.  Adds no additional constraints other than\n            the caption of the button equalling the provided value.\n            ","description":"\n            Format an XPath to find a button.  Adds no additional constraints other than\n            the caption of the button equalling the provided value.\n            "},"getXMenuItem":{"value":"\n            Given the caption name of a menu item, return a unique identifier xPath\n            to find a menu item.\n            ","description":"\n            Given the caption name of a menu item, return a unique identifier xPath\n            to find a menu item.\n            "},"MapColumnCaptionsToIndex":{"value":"\n            Create a mapping of the column captions as keys to their DOM index values.\n            ","description":"\n            Create a mapping of the column captions as keys to their DOM index values.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetCheckbox(String, Boolean)":{"value":"\n            Click a checkbox if it is not the desired value.\n            ","description":"\n            Click a checkbox if it is not the desired value.\n            "},"SetCheckbox(String, String)":{"value":"\n            Click a checkbox if it is not the desired value.\n            ","description":"\n            Click a checkbox if it is not the desired value.\n            "},"SetCredentailsField":{"value":"\n            Specialist version of setTextField to deal with the lack of focus in a login splash screen.\n            ","description":"\n            Specialist version of setTextField to deal with the lack of focus in a login splash screen.\n            "},"SetTextField":{"value":"\n            Set the value of a field by copy pasting the value into the field and sending a Tab keystroke.\n            ","description":"\n            Set the value of a field by copy pasting the value into the field and sending a Tab keystroke.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"WaitClick(String)":{"value":"\n            Find an element using a provided xPath and click it once it is displayed and enabled.\n            ","description":"\n            Find an element using a provided xPath and click it once it is displayed and enabled.\n            "},"WaitClick(String, Double)":{"value":"\n            Find an element using a provided xPath and click it once it is displayed and enabled.\n            ","description":"\n            Find an element using a provided xPath and click it once it is displayed and enabled.\n            "}},"properties":{"Driver":{"value":"\n            Selenium WebDriver used to interact with the web browser.\n            ","description":"\n            Selenium WebDriver used to interact with the web browser.\n            "},"TimeoutSecs":{"value":"\n            The default WebDriver timeout value represented in seconds.\n            ","description":"\n            The default WebDriver timeout value represented in seconds.\n            "},"Title":{"value":"","description":""}},"references":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_getXButton","summary":"\r\n            Format an XPath to find a button.  Adds no additional constraints other than\r\n            the caption of the button equalling the provided value.\r\n            ","param":{"_":"The caption of the button.","name":"caption"},"params":{"syntax":{"C#":"protected static string getXButton(\n\tstring caption\n)","VB":"Protected Shared Function getXButton ( \n\tcaption As String\n) As String","C++":"protected:\nstatic String^ getXButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the button."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Base.BaseComponent.getXButton(System.String)\"]"},"type":" The caption of the button.Return Value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_getXMenuItem","summary":"\r\n            Given the caption name of a menu item, return a unique identifier xPath\r\n            to find a menu item.\r\n            ","param":{"_":"The caption of the functional area.","name":"caption"},"params":{"syntax":{"C#":"protected static string getXMenuItem(\n\tstring caption\n)","VB":"Protected Shared Function getXMenuItem ( \n\tcaption As String\n) As String","C++":"protected:\nstatic String^ getXMenuItem(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the functional area."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Base.BaseComponent.getXMenuItem(System.String)\"]"},"type":" The caption of the functional area.Return Value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_ConvertToBool","summary":"\r\n            Convert the string to a bool value.\r\n            ","param":{"_":"The string to try and convert to a bool.","name":"value"},"returns":"A bool if successfully converted.  Unrecognized values throw a NotSupportedException","params":{"syntax":{"C#":"protected static bool ConvertToBool(\n\tstring value\n)","VB":"Protected Shared Function ConvertToBool ( \n\tvalue As String\n) As Boolean","C++":"protected:\nstatic bool ConvertToBool(\n\tString^ value\n)"},"arguments":{"value":{"type":"SystemString","description":"The string to try and convert to a bool."}},"return_val":{"type":" Boolean","description":"A bool if successfully converted.  Unrecognized values throw a NotSupportedException"},"type":" The string to try and convert to a bool.Return Value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_SetCheckbox","summary":"\r\n            Click a checkbox if it is not the desired value.\r\n            ","param":[{"_":"The xPath to use for finding the checkbox INPUT.","name":"xPath"},{"_":"The value to set the checkbox to.","name":"value"}],"params":{"syntax":{"C#":"public static void SetCheckbox(\n\tstring xPath,\n\tbool value\n)","VB":"Public Shared Sub SetCheckbox ( \n\txPath As String,\n\tvalue As Boolean\n)","C++":"public:\nstatic void SetCheckbox(\n\tString^ xPath, \n\tbool value\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to use for finding the checkbox INPUT."},"value":{"type":"SystemBoolean","description":"True if the checkbox should be checked, false otherwise."}},"type":" The xPath to use for finding the checkbox INPUT.value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","Overload_Blueshirt_Core_Base_BaseComponent_SetCheckbox.htm":"SetCheckbox Overload","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_SetCheckbox","summary":"\r\n            Click a checkbox if it is not the desired value.\r\n            ","param":[{"_":"The xPath to use for finding the checkbox INPUT.","name":"xPath"},{"_":"True if the checkbox should be checked, false otherwise.","name":"value"}],"params":{"syntax":{"C#":"public static void SetCheckbox(\n\tstring xPath,\n\tbool value\n)","VB":"Public Shared Sub SetCheckbox ( \n\txPath As String,\n\tvalue As Boolean\n)","C++":"public:\nstatic void SetCheckbox(\n\tString^ xPath, \n\tbool value\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to use for finding the checkbox INPUT."},"value":{"type":"SystemBoolean","description":"True if the checkbox should be checked, false otherwise."}},"type":" The xPath to use for finding the checkbox INPUT.value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","Overload_Blueshirt_Core_Base_BaseComponent_SetCheckbox.htm":"SetCheckbox Overload","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_ElementValueIsNotNullOrEmpty","summary":"\r\n            Wait until a displayed element found with the provided xPath does not have a null or empty value\r\n            If no matching element is found, a WebDriverTimeoutException is thrown.\r\n            ","param":{"_":"The xPath to use for finding an element.","name":"xPath"},"params":{"syntax":{"C#":"public static void ElementValueIsNotNullOrEmpty(\n\tstring xPath\n)","VB":"Public Shared Sub ElementValueIsNotNullOrEmpty ( \n\txPath As String\n)","C++":"public:\nstatic void ElementValueIsNotNullOrEmpty(\n\tString^ xPath\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to use for finding an element."}},"type":" The xPath to use for finding an element.","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_ElementValueIsSet","summary":"\r\n            Wait until a displayed element found with the provided xPath has the expected value as its text.\r\n            If no matching element is found with the expected value, a WebDriverTimeoutException is thrown.\r\n            ","param":[{"_":"The xPath to use for finding an element.","name":"xPath"},{"_":"The expected text value of the element.","name":"expectedvalue"}],"params":{"syntax":{"C#":"public static void ElementValueIsSet(\n\tstring xPath,\n\tstring expectedvalue\n)","VB":"Public Shared Sub ElementValueIsSet ( \n\txPath As String,\n\texpectedvalue As String\n)","C++":"public:\nstatic void ElementValueIsSet(\n\tString^ xPath, \n\tString^ expectedvalue\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to use for finding an element."},"expectedvalue":{"type":"SystemString","description":"The expected text value of the element."}},"type":" The xPath to use for finding an element.expectedvalue","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_ExistsNow","summary":"\r\n            Check if a displayed element exists immediately using the provided xPath selector.\r\n            ","param":{"_":"The xPath selector to find an element with.","name":"xPath"},"returns":"True if a valid element is found immediately, false otherwise.","params":{"syntax":{"C#":"public static bool ExistsNow(\n\tstring xPath\n)","VB":"Public Shared Function ExistsNow ( \n\txPath As String\n) As Boolean","C++":"public:\nstatic bool ExistsNow(\n\tString^ xPath\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath selector to find an element with."}},"return_val":{"type":" Boolean","description":"True if a valid element is found immediately, false otherwise."},"type":" The xPath selector to find an element with.Return Value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_Exists","summary":"\r\n            Checks if a displayed element exists using the provided xPath selector.\r\n            ","param":[{"_":"The xPath selector to find an element with.","name":"xPath"},{"_":"The time to spend looking for the element.  Defaults to TimeoutSecs.","name":"secondsToWait"}],"returns":"True if a valid element is found within the time to wait, false otherwise.","params":{"syntax":{"C#":"public static bool Exists(\n\tstring xPath,\n\tdouble secondsToWait = -1\n)","VB":"Public Shared Function Exists ( \n\txPath As String,\n\tOptional secondsToWait As Double = -1\n) As Boolean","C++":"public:\nstatic bool Exists(\n\tString^ xPath, \n\tdouble secondsToWait = -1\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath selector to find an element with."},"secondsToWait":{"type":"SystemDouble","description":"The time to spend looking for the element.  Defaults to TimeoutSecs."}},"return_val":{"type":" Boolean","description":"True if a valid element is found within the time to wait, false otherwise."},"type":" The xPath selector to find an element with.secondsToWait (Optional)","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_GetDisplayedElement","summary":"\r\n            Get the displayed IWebElement using the provided xPath.\r\n            ","param":[{"_":"The xPath selector to find an element with.","name":"xPath"},{"_":"The amount of time to search for the a valid element.  Default time is TimeoutSecs.","name":"waitTime"}],"returns":"An IWebElement if a valid element is found. A WebDriverTimeoutException is thrown is no element is found.","params":{"syntax":{"C#":"public static IWebElement GetDisplayedElement(\n\tstring xPath,\n\tdouble waitTime = -1\n)","VB":"Public Shared Function GetDisplayedElement ( \n\txPath As String,\n\tOptional waitTime As Double = -1\n) As IWebElement","C++":"public:\nstatic IWebElement^ GetDisplayedElement(\n\tString^ xPath, \n\tdouble waitTime = -1\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath selector to find an element with."},"waitTime":{"type":"SystemDouble","description":"The amount of time to search for the a valid element.  Default time is TimeoutSecs."}},"return_val":{"type":" IWebElement","description":"An IWebElement if a valid element is found. A WebDriverTimeoutException is thrown is no element is found."},"type":" The xPath selector to find an element with.waitTime (Optional)","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_MapColumnCaptionsToIndex","summary":"\r\n            Create a mapping of the column captions as keys to their DOM index values.\r\n            ","param":[{"_":"The list of captions to map.","name":"captions"},{"_":"An xPath to get a parent element of the desired TR header columns.","name":"headersxPath"}],"returns":"Mapping of column captions to an index.","params":{"syntax":{"C#":"public static IDictionary<string, int> MapColumnCaptionsToIndex(\n\tICollection<string> captions,\n\tstring headersxPath\n)","VB":"Public Shared Function MapColumnCaptionsToIndex ( \n\tcaptions As ICollection(Of String),\n\theadersxPath As String\n) As IDictionary(Of String, Integer)","C++":"public:\nstatic IDictionary<String^, int>^ MapColumnCaptionsToIndex(\n\tICollection<String^>^ captions, \n\tString^ headersxPath\n)"},"arguments":{"captions":{"type":"System.Collections.GenericICollectionString","description":"The list of captions to map."},"headersxPath":{"type":"SystemString","description":"An xPath to get a parent element of the desired TR header columns."}},"return_val":{"type":" IDictionaryString, Int32","description":"Mapping of column captions to an index."},"type":" The list of captions to map.headersxPath","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_GetDatalistColumnIndex","summary":"\r\n            Given the xPath for a datalist/grid's headers and the caption of a datalist column, find the index of the column\r\n            as it relates to the DOM.\r\n            ","param":[{"_":"Unique xPath for getting the TR column header row.","name":"headersxPath"},{"_":"The caption of the section's datalist column whose index to find.","name":"columnCaption"}],"params":{"syntax":{"C#":"public static int GetDatalistColumnIndex(\n\tstring headersxPath,\n\tstring columnCaption\n)","VB":"Public Shared Function GetDatalistColumnIndex ( \n\theadersxPath As String,\n\tcolumnCaption As String\n) As Integer","C++":"public:\nstatic int GetDatalistColumnIndex(\n\tString^ headersxPath, \n\tString^ columnCaption\n)"},"arguments":{"headersxPath":{"type":"SystemString","description":"Unique xPath for getting the TR column header row."},"columnCaption":{"type":"SystemString","description":"The caption of the section&apos;s datalist column whose index to find."}},"return_val":{"type":" Int32","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Base.BaseComponent.GetDatalistColumnIndex(System.String,System.String)\"]"},"type":" Unique xPath for getting the TR column header row.columnCaption","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_GetEnabledElement","summary":"\r\n            Get the first found IWebElement based on an xPath that is Displayed AND Enabled.\r\n            If no element is found, a WebDriverTimeoutException is thrown.\r\n            ","param":[{"_":"The xPath selector to find an element with.","name":"xPath"},{"_":"The amount of time to search for the a valid element.  Default time is TimeoutSecs.","name":"waitTime"}],"params":{"syntax":{"C#":"public static IWebElement GetEnabledElement(\n\tstring xPath,\n\tdouble waitTime = -1\n)","VB":"Public Shared Function GetEnabledElement ( \n\txPath As String,\n\tOptional waitTime As Double = -1\n) As IWebElement","C++":"public:\nstatic IWebElement^ GetEnabledElement(\n\tString^ xPath, \n\tdouble waitTime = -1\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath selector to find an element with."},"waitTime":{"type":"SystemDouble","description":"The amount of time to search for the a valid element.  Default time is TimeoutSecs."}},"return_val":{"type":" IWebElement","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Base.BaseComponent.GetEnabledElement(System.String,System.Double)\"]"},"type":" The xPath selector to find an element with.waitTime (Optional)","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_ClickButton","summary":"\r\n            Clicks a basic button.\r\n            Uniqueness is dependent purely on the caption!\r\n            ","param":{"name":"caption"},"params":{"syntax":{"C#":"public static void ClickButton(\n\tstring caption\n)","VB":"Public Shared Sub ClickButton ( \n\tcaption As String\n)","C++":"public:\nstatic void ClickButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString[Missing <param name=\"caption\"/> documentation for \"M:Blueshirt.Core.Base.BaseComponent.ClickButton(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;caption&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Base.BaseComponent.ClickButton(System.String)&quot;]</p>"}},"type":" [Missing <param name=\"caption\"/> documentation for \"M:Blueshirt.Core.Base.BaseComponent.ClickButton(System.String)\"]","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_WaitClick","summary":"\r\n            Find an element using a provided xPath and click it once it is displayed and enabled.\r\n            ","param":[{"_":"The xPath to find the element by.","name":"xPath"},{"_":"The amount of time to try and find a displayed and enabled element to click\r\n            before throwing a WebDriverTimeoutException.","name":"timeout"}],"params":{"syntax":{"C#":"public static void WaitClick(\n\tstring xPath\n)","VB":"Public Shared Sub WaitClick ( \n\txPath As String\n)","C++":"public:\nstatic void WaitClick(\n\tString^ xPath\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to find the element by."}},"type":" The xPath to find the element by.","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","Overload_Blueshirt_Core_Base_BaseComponent_WaitClick.htm":"WaitClick Overload","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_WaitClick","summary":"\r\n            Find an element using a provided xPath and click it once it is displayed and enabled.\r\n            ","param":{"_":"The xPath to find the element by.","name":"xPath"},"params":{"syntax":{"C#":"public static void WaitClick(\n\tstring xPath\n)","VB":"Public Shared Sub WaitClick ( \n\txPath As String\n)","C++":"public:\nstatic void WaitClick(\n\tString^ xPath\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to find the element by."}},"type":" The xPath to find the element by.","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","Overload_Blueshirt_Core_Base_BaseComponent_WaitClick.htm":"WaitClick Overload","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_CopyToClipBoard","summary":"\r\n            Start a new thread that copies a value to the System's Clipboard and waits for that\r\n            thread to return.\r\n            ","param":{"_":"The value to copy to the clipboard.","name":"value"},"params":{"syntax":{"C#":"protected static void CopyToClipBoard(\n\tstring value\n)","VB":"Protected Shared Sub CopyToClipBoard ( \n\tvalue As String\n)","C++":"protected:\nstatic void CopyToClipBoard(\n\tString^ value\n)"},"arguments":{"value":{"type":"SystemString","description":"The value to copy to the clipboard."}},"type":" The value to copy to the clipboard.","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseComponent_SetTextField","summary":"\r\n            Set the value of a field by copy pasting the value into the field and sending a Tab keystroke.\r\n            ","param":[{"_":"The xPath to find an element for setting the value to.","name":"xPath"},{"_":"The desired value of the element.","name":"value"}],"params":{"syntax":{"C#":"public static void SetTextField(\n\tstring xPath,\n\tstring value\n)","VB":"Public Shared Sub SetTextField ( \n\txPath As String,\n\tvalue As String\n)","C++":"public:\nstatic void SetTextField(\n\tString^ xPath, \n\tString^ value\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to find an element for setting the value to."},"value":{"type":"SystemString","description":"The desired value of the element."}},"type":" The xPath to find an element for setting the value to.value","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"P_Blueshirt_Core_Base_BaseComponent_TimeoutSecs","summary":"\r\n            The default WebDriver timeout value represented in seconds.\r\n            ","params":{"syntax":{"C#":"public static int TimeoutSecs { get; }","VB":"Public Shared ReadOnly Property TimeoutSecs As Integer\n\tGet","C++":"public:\nstatic property int TimeoutSecs {\n\tint get ();\n}"},"type":" Int32","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"P_Blueshirt_Core_Base_BaseComponent_Driver","summary":"\r\n            Selenium WebDriver used to interact with the web browser.\r\n            ","params":{"syntax":{"C#":"public static IWebDriver Driver { get; }","VB":"Public Shared ReadOnly Property Driver As IWebDriver\n\tGet","C++":"public:\nstatic property IWebDriver^ Driver {\n\tIWebDriver^ get ();\n}"},"type":" IWebDriver","references":{"T_Blueshirt_Core_Base_BaseComponent.htm":"BaseComponent Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"T_Blueshirt_Core_Base_FieldType","summary":"\r\n            Represents the various type of fields with supported setter utility methods.\r\n            ","params":{"inheritance":{},"namespace":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","members":{"TextInput":{"value":"0","description":"\n            An input text field.  This should also be used for grid cells that are text fields.\n            "},"TextArea":{"value":"1","description":"\n            A textarea text field.\n            "},"Dropdown":{"value":"2","description":"\n            A dropdown field.\n            "},"Searchlist":{"value":"3","description":"\n            A searchlist field.\n            "},"Checkbox":{"value":"4","description":"\n            A checkbox or radiobox field.\n            "},"TextIframe":{"value":"5","description":"\n            An IFrame text field.\n            "}},"references":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_FieldType_TextInput","summary":"\r\n            An input text field.  This should also be used for grid cells that are text fields.\r\n            "},{"name":"F_Blueshirt_Core_Base_FieldType_TextArea","summary":"\r\n            A textarea text field.\r\n            "},{"name":"F_Blueshirt_Core_Base_FieldType_Dropdown","summary":"\r\n            A dropdown field.\r\n            "},{"name":"F_Blueshirt_Core_Base_FieldType_Searchlist","summary":"\r\n            A searchlist field.\r\n            "},{"name":"F_Blueshirt_Core_Base_FieldType_Checkbox","summary":"\r\n            A checkbox or radiobox field.\r\n            "},{"name":"F_Blueshirt_Core_Base_FieldType_TextIframe","summary":"\r\n            An IFrame text field.\r\n            "},{"name":"T_Blueshirt_Core_Base_CrmField","summary":"\r\n            Wrapper class to encapsulate a field caption with a field type, unique element id, and search dialog ids when required.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","#":"Blueshirt.Core.BaseCrmField"},"namespace":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The CrmField type exposes the following members.","constructors":{"CrmField(String, FieldType)":{"value":"\n            Set the field id and associated setter utility method.\n            ","description":"\n            Set the field id and associated setter utility method.\n            "},"CrmField(String, FieldType, String, String)":{"value":"\n            Set the batch column id and associated setter utility method.  To only be used\n            with grid cells where the value should be set using a searchlist.\n            ","description":"\n            Set the batch column id and associated setter utility method.  To only be used\n            with grid cells where the value should be set using a searchlist.\n            "}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"CellType":{"value":"\n            The type of field.  Used to associate the field with a setter utility method.\n            ","description":"\n            The type of field.  Used to associate the field with a setter utility method.\n            "},"Id":{"value":"\n            The unique Id contained in the id attribute.\n            i.e. '_CONSTITUENTID_value'\n            ","description":"\n            The unique Id contained in the id attribute.\n            i.e. '_CONSTITUENTID_value'\n            "},"SearchDialogFieldId":{"value":"\n            The unique id of the search dialog field that would appear upon clicking the search icon of\n            the associated grid cell.\n            i.e. 'COMBINEDSEARCH'\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\n            ","description":"\n            The unique id of the search dialog field that would appear upon clicking the search icon of\n            the associated grid cell.\n            i.e. 'COMBINEDSEARCH'\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\n            "},"SearchDialogId":{"value":"\n            The unique id of the search dialog that would appear upon clicking the search icon of\n            the associated grid cell.\n            i.e. 'DesignationSearch'\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\n            ","description":"\n            The unique id of the search dialog that would appear upon clicking the search icon of\n            the associated grid cell.\n            i.e. 'DesignationSearch'\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\n            "}},"references":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_CrmField_Id","summary":"\r\n            The unique Id contained in the id attribute.\r\n            i.e. '_CONSTITUENTID_value'\r\n            ","params":{"syntax":{"C#":"public readonly string Id","VB":"Public ReadOnly Id As String","C++":"public:\ninitonly String^ Id"},"type":" String","references":{"T_Blueshirt_Core_Base_CrmField.htm":"CrmField Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_CrmField_CellType","summary":"\r\n            The type of field.  Used to associate the field with a setter utility method.\r\n            ","params":{"syntax":{"C#":"public readonly FieldType CellType","VB":"Public ReadOnly CellType As FieldType","C++":"public:\ninitonly FieldType CellType"},"type":" FieldType","references":{"T_Blueshirt_Core_Base_CrmField.htm":"CrmField Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_CrmField_SearchDialogId","summary":"\r\n            The unique id of the search dialog that would appear upon clicking the search icon of\r\n            the associated grid cell.\r\n            i.e. 'DesignationSearch'\r\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\r\n            ","params":{"syntax":{"C#":"public readonly string SearchDialogId","VB":"Public ReadOnly SearchDialogId As String","C++":"public:\ninitonly String^ SearchDialogId"},"type":" String","references":{"T_Blueshirt_Core_Base_CrmField.htm":"CrmField Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_CrmField_SearchDialogFieldId","summary":"\r\n            The unique id of the search dialog field that would appear upon clicking the search icon of\r\n            the associated grid cell.\r\n            i.e. 'COMBINEDSEARCH'\r\n            Used for fields associated with 'BatchGridCellType.Searchlist'.\r\n            ","params":{"syntax":{"C#":"public readonly string SearchDialogFieldId","VB":"Public ReadOnly SearchDialogFieldId As String","C++":"public:\ninitonly String^ SearchDialogFieldId"},"type":" String","references":{"T_Blueshirt_Core_Base_CrmField.htm":"CrmField Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_CrmField_#ctor","summary":"\r\n            Set the field id and associated setter utility method.\r\n            ","param":[{"_":"The unique Id contained in the id attribute.  i.e. '_CONSTITUENTID_value'","name":"id"},{"_":"The type of grid cell.  Used to associate the cell with a setter utility method.","name":"cellType"}]},{"name":"M_Blueshirt_Core_Base_CrmField_#ctor","summary":"\r\n            Set the batch column id and associated setter utility method.  To only be used\r\n            with grid cells where the value should be set using a searchlist.\r\n            ","param":[{"_":"The unique Id contained in the class attribute.  i.e. '_CONSTITUENTID_value'","name":"id"},{"_":"The type of grid cell.  Used to associate the cell with a setter utility method.","name":"cellType"},{"_":"The unique id of the search dialog that would appear upon clicking the search icon of\r\n            the associated grid cell.  i.e. 'DesignationSearch'","name":"searchDialogId"},{"_":"The unique id of the search dialog field that would appear upon clicking the search icon of\r\n            the associated grid cell.  i.e. 'COMBINEDSEARCH'","name":"searchDialogFieldId"}]},{"name":"T_Blueshirt_Core_Base_BaseSteps","summary":"\r\n            Base class for Specflow Step classes.  Provides access to common functionality in step classes.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","#":"Blueshirt.Core.BaseBaseSteps"},"namespace":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BaseSteps type exposes the following members.","constructors":{"BaseSteps":{"value":"Initializes a new instance of the BaseSteps class","description":"Initializes a new instance of the BaseSteps class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"FailTest":{"value":"\n            Fail a test by throwing a SpecFlowException with the provided message\n            ","description":"\n            Fail a test by throwing a SpecFlowException with the provided message\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"testStamp":{"value":"","description":""},"uniqueStamp":{"value":"\n            Time stamp that should be static for all test step definitions in a single test\n            ","description":"\n            Time stamp that should be static for all test step definitions in a single test\n            "}},"references":{"N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"F_Blueshirt_Core_Base_BaseSteps_uniqueStamp","summary":"\r\n            Time stamp that should be static for all test step definitions in a single test\r\n            ","params":{"syntax":{"C#":"protected static string uniqueStamp","VB":"Protected Shared uniqueStamp As String","C++":"protected:\nstatic String^ uniqueStamp"},"type":" String","references":{"T_Blueshirt_Core_Base_BaseSteps.htm":"BaseSteps Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"M_Blueshirt_Core_Base_BaseSteps_FailTest","summary":"\r\n            Fail a test by throwing a SpecFlowException with the provided message\r\n            ","param":{"_":"The message to output with the SpecFlowException","name":"errorMessage"},"params":{"syntax":{"C#":"public static void FailTest(\n\tstring errorMessage\n)","VB":"Public Shared Sub FailTest ( \n\terrorMessage As String\n)","C++":"public:\nstatic void FailTest(\n\tString^ errorMessage\n)"},"arguments":{"errorMessage":{"type":"SystemString","description":"The message to output with the SpecFlowException"}},"type":" The message to output with the SpecFlowException","references":{"T_Blueshirt_Core_Base_BaseSteps.htm":"BaseSteps Class","N_Blueshirt_Core_Base.htm":"Blueshirt.Core.Base Namespace"}}},{"name":"T_Blueshirt_Core_Crm_CommitmentsDialog","summary":"\r\n            Class to handle the interactions for adding/editing a commitments dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmCommitmentsDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The CommitmentsDialog type exposes the following members.","constructors":{"CommitmentsDialog":{"value":"Initializes a new instance of the CommitmentsDialog class","description":"Initializes a new instance of the CommitmentsDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetAdditionalApplicationsGridRows":{"value":"\n            Set the grid rows for the Additional applications grid starting with the first row.\n            ","description":"\n            Set the grid rows for the Additional applications grid starting with the first row.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedAddtionalApplicationsGridFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_Dialog","summary":"\r\n            Base class to handle the interactions for dialogs. \r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","#":"Blueshirt.Core.CrmDialog","T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"Blueshirt.Core.CrmAdHocQueryDialog","T_Blueshirt_Core_Crm_BatchDialog.htm":"Blueshirt.Core.CrmBatchDialog","T_Blueshirt_Core_Crm_CommitmentsDialog.htm":"Blueshirt.Core.CrmCommitmentsDialog","T_Blueshirt_Core_Crm_DesignationsDialog.htm":"Blueshirt.Core.CrmDesignationsDialog","T_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog.htm":"Blueshirt.Core.Crm.DialogsAddMembershipProgramDialog","T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"Blueshirt.Core.Crm.DialogsMarketingAcknowledgementTemplateDialog","T_Blueshirt_Core_Crm_EventDialog.htm":"Blueshirt.Core.CrmEventDialog","T_Blueshirt_Core_Crm_IndividualDialog.htm":"Blueshirt.Core.CrmIndividualDialog","T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"Blueshirt.Core.CrmMajorGivingPlanDialog","T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm":"Blueshirt.Core.CrmMarketingAcknowledgementRuleDialog","T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"Blueshirt.Core.CrmMultiLevelEventDialog","T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"Blueshirt.Core.CrmNewAdhocQueryDialog","T_Blueshirt_Core_Crm_PackageDialog.htm":"Blueshirt.Core.CrmPackageDialog","T_Blueshirt_Core_Crm_PaymentDialog.htm":"Blueshirt.Core.CrmPaymentDialog","T_Blueshirt_Core_Crm_PledgeDialog.htm":"Blueshirt.Core.CrmPledgeDialog","T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm":"Blueshirt.Core.CrmQuerySourceViewDialog","T_Blueshirt_Core_Crm_RegistrantDialog.htm":"Blueshirt.Core.CrmRegistrantDialog","T_Blueshirt_Core_Crm_SearchDialog.htm":"Blueshirt.Core.CrmSearchDialog","T_Blueshirt_Core_Crm_SegmentDialog.htm":"Blueshirt.Core.CrmSegmentDialog","T_Blueshirt_Core_Crm_TaskDialog.htm":"Blueshirt.Core.CrmTaskDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The Dialog type exposes the following members.","constructors":{"Dialog":{"value":"Initializes a new instance of the Dialog class","description":"Initializes a new instance of the Dialog class"}},"methods":{"Cancel":{"value":"\n            Click the 'Cancel' button\n            ","description":"\n            Click the 'Cancel' button\n            "},"ClickButton(String)":{"value":"\n            Click a dialog button.\n            ","description":"\n            Click a dialog button.\n            "},"ClickButton(String, Double)":{"value":"\n            Click a dialog button.\n            ","description":"\n            Click a dialog button.\n            "},"ClickButton(String, String)":{"value":"\n            Click a button that has a new dialog appear.  Continuely click the button\n            until the new dialog appears.\n            ","description":"\n            Click a button that has a new dialog appear.  Continuely click the button\n            until the new dialog appears.\n            "},"CloseDialog":{"value":"","description":""},"DropdownValueExists":{"value":"\n            Check if a value exists as a selectable item in a dropdown list.\n            ","description":"\n            Check if a value exists as a selectable item in a dropdown list.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetDialogId":{"value":"\n            Wait for a dialog to appear that has a unique is in the provided list of\n            ids and return the matching id.\n            ","description":"\n            Wait for a dialog to appear that has a unique is in the provided list of\n            ids and return the matching id.\n            "},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXButton":{"value":"\n            Format a unique xPath identifier to find a button on a dialog.\n            ","description":"\n            Format a unique xPath identifier to find a button on a dialog.\n            "},"getXCloseX":{"value":"\n            Returns an xPath for the close Window [X] on the Dialog.\n            \n            ","description":"\n            Returns an xPath for the close Window [X] on the Dialog.\n            \n            "},"getXDialogButton(String)":{"value":"\n            Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text.\n            Uniqueness depends on the text passed.\n            \n            ","description":"\n            Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text.\n            Uniqueness depends on the text passed.\n            \n            "},"getXDialogButton(String, String)":{"value":"\n            Format an xPath for finding a dialog's button.\n            ","description":"\n            Format an xPath for finding a dialog's button.\n            "},"getXDialogByClass":{"value":"\n            Format an xPath to get a dialog based on an value contained in the class attribute of the root dialog DIV.\n            ","description":"\n            Format an xPath to get a dialog based on an value contained in the class attribute of the root dialog DIV.\n            "},"getXDialogById":{"value":"\n            Format an xPath to get a dialog based on its unique id.\n            ","description":"\n            Format an xPath to get a dialog based on its unique id.\n            "},"getXDiv":{"value":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\n            to find the DIV field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\n            to find the DIV field.\n            "},"getXDropdownArrow":{"value":"\n            Formats an xPath for the arrow dropdown of a dropdown INPUT field.\n            ","description":"\n            Formats an xPath for the arrow dropdown of a dropdown INPUT field.\n            "},"getXDropdownItem":{"value":"\n            Formats an xPath for a dropdown item.\n            ","description":"\n            Formats an xPath for a dropdown item.\n            "},"getXEntireDialogButton":{"value":"\n            Format an xPath for finding a dialog's button including the common bottom bar that contains buttons\n            such as Save, Close, and Cancel.\n            ","description":"\n            Format an xPath for finding a dialog's button including the common bottom bar that contains buttons\n            such as Save, Close, and Cancel.\n            "},"getXGridCell":{"value":"\n            Formats the unique xPath for getting a single grid TD element that belongs to a specified\n            row and columun in a grid on a dialog.\n            ","description":"\n            Formats the unique xPath for getting a single grid TD element that belongs to a specified\n            row and columun in a grid on a dialog.\n            "},"getXGridHeaders":{"value":"\n            Formats the unique xPath for getting the TR row header element that belongs to\n            a grid on a dialog.\n            ","description":"\n            Formats the unique xPath for getting the TR row header element that belongs to\n            a grid on a dialog.\n            "},"getXGridRow":{"value":"\n            Formats the unique xPath for getting a single grid row.\n            ","description":"\n            Formats the unique xPath for getting a single grid row.\n            "},"getXGridRowSelector":{"value":"\n            Format the unique xPath for selecting a single grid row.\n            ","description":"\n            Format the unique xPath for selecting a single grid row.\n            "},"getXIFrame":{"value":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\n            to find the IFRAME field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\n            to find the IFRAME field.\n            "},"getXInput":{"value":"\n            Given the unique HTML element ids of a dialog and input, return a unique identifier xPath\n            to find the INPUT field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and input, return a unique identifier xPath\n            to find the INPUT field.\n            "},"getXInputNewFormTrigger":{"value":"\n            Format an xPath to find the new-form trigger button associated with an input field.\n            ","description":"\n            Format an xPath to find the new-form trigger button associated with an input field.\n            "},"getXInputSearchTrigger":{"value":"\n            Format an xPath to find the search trigger button associated with an input field.\n            ","description":"\n            Format an xPath to find the search trigger button associated with an input field.\n            "},"getXLinkByAction":{"value":"\n            Format an xPath to find a link on the dialog.\n            ","description":"\n            Format an xPath to find a link on the dialog.\n            "},"getXLinkByCaption":{"value":"\n            Format an xPath to find a link on the dialog.\n            ","description":"\n            Format an xPath to find a link on the dialog.\n            "},"getXSpan":{"value":"\n            Given the unique HTML element ids of a dialog and span, return a unique identifier xPath\n            to find the SPAN field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and span, return a unique identifier xPath\n            to find the SPAN field.\n            "},"getXTab(String)":{"value":"\n            Format a unique xPath for a tab on a dialog.\n            ","description":"\n            Format a unique xPath for a tab on a dialog.\n            "},"getXTab(String, String)":{"value":"\n            Format a unique xPath for a tab on a dialog.\n            ","description":"\n            Format a unique xPath for a tab on a dialog.\n            "},"getXTextArea":{"value":"\n            Given the unique HTML element ids of a dialog and textarea, return a unique identifier xPath\n            to find the TEXTAREA field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and textarea, return a unique identifier xPath\n            to find the TEXTAREA field.\n            "},"getXVisibleDialog":{"value":"\n            Format an xPath to get a visible dialog.\n            ","description":"\n            Format an xPath to get a visible dialog.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OK":{"value":"\n            Click the 'OK' button\n            ","description":"\n            Click the 'OK' button\n            "},"OpenTab(String)":{"value":"\n            Open the tab of a dialog.\n            ","description":"\n            Open the tab of a dialog.\n            "},"OpenTab(String, String)":{"value":"\n            Open the tab of a dialog.\n            ","description":"\n            Open the tab of a dialog.\n            "},"Save":{"value":"\n            Click the 'Save' button\n            ","description":"\n            Click the 'Save' button\n            "},"SetDropDown":{"value":"\n            Set a Dropdown field.\n            \n            WebDriverTimeoutException is thrown if no value is found.\n            ","description":"\n            Set a Dropdown field.\n            \n            WebDriverTimeoutException is thrown if no value is found.\n            "},"SetField":{"value":"\n            Set any supported field's value for any supported field type.\n            ","description":"\n            Set any supported field's value for any supported field type.\n            "},"SetFields(String, TableRow, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set all supported and displayed field values for any supported field type.\n            ","description":"\n            Set all supported and displayed field values for any supported field type.\n            "},"SetFields(String, TableRow, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set all supported and displayed field values for any supported field type.\n            ","description":"\n            Set all supported and displayed field values for any supported field type.\n            "},"SetGridDropDown":{"value":"\n            Set a Grid cell's value for a dropdown field.\n            ","description":"\n            Set a Grid cell's value for a dropdown field.\n            "},"SetGridRow(String, String, TableRow, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set a single row's values for a grid.\n            ","description":"\n            Set a single row's values for a grid.\n            "},"SetGridRow(String, String, TableRow, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set a single row's values for a grid.\n            ","description":"\n            Set a single row's values for a grid.\n            "},"SetGridRows(String, String, Table, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set the row values for a grid.\n            ","description":"\n            Set the row values for a grid.\n            "},"SetGridRows(String, String, Table, Int32, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LSTC51B8326_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_25?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, IDictionaryAddLanguageSpecificTextSet(\"LSTC51B8326_27?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LSTC51B8326_28?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set the row values for a grid.\n            ","description":"\n            Set the row values for a grid.\n            "},"SetGridSearchList":{"value":"\n            Set a grid cell's value using the searchlist.\n            ","description":"\n            Set a grid cell's value using the searchlist.\n            "},"SetGridTextField":{"value":"\n            Set a Grid cell's value for a text field.\n            ","description":"\n            Set a Grid cell's value for a text field.\n            "},"SetHtmlField":{"value":"\n            Set an IFrame HTML field's value.\n            ","description":"\n            Set an IFrame HTML field's value.\n            "},"SetSearchList":{"value":"\n            Set a field's value using the associated search dialog to the first found item in the search results.\n            ","description":"\n            Set a field's value using the associated search dialog to the first found item in the search results.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"Yes":{"value":"\n            Click the 'Yes' button\n            ","description":"\n            Click the 'Yes' button\n            "}},"fields":{"getXCancelButton":{"value":"\n            Constant xPath value for finding a Cancel button WebElement.\n            ","description":"\n            Constant xPath value for finding a Cancel button WebElement.\n            "},"getXDropdownList":{"value":"\n            Constant xPath for the entire visible dropdown list.\n            ","description":"\n            Constant xPath for the entire visible dropdown list.\n            "},"getXDropdownListItems":{"value":"\n            Constant xPath for all items in the visible dropdown list.\n            ","description":"\n            Constant xPath for all items in the visible dropdown list.\n            "},"getXGridEditCell":{"value":"\n            The unique xPath for the input of the currently selected cell in a Grid.\n            \n            When a grid cell is selected, an HTML edit input is created where the actual value should\n            be set.\n            ","description":"\n            The unique xPath for the input of the currently selected cell in a Grid.\n            \n            When a grid cell is selected, an HTML edit input is created where the actual value should\n            be set.\n            "},"getXGridEditCellDropdownArrow":{"value":"\n            Constant xPath for the dropdown arrow of a grid's edit cell.\n            ","description":"\n            Constant xPath for the dropdown arrow of a grid's edit cell.\n            "},"getXGridEditCellSearchlist":{"value":"\n            Constant xPath for the searchlist icon of a grid's edit cell.\n            ","description":"\n            Constant xPath for the searchlist icon of a grid's edit cell.\n            "},"getXGridFocusedEditCell":{"value":"\n            The unique xPath for the input of the currently selected cell in a Grid adding the 'focused' criteria\n            \n            NOTE: this is risky to use because the focus attribute is unreliably set and can cause MANY race conditions.\n            The 'focused' criteria is also not always set on the edit cell depending on the approach you went to select a grid cell.\n            \n            When a grid cell is selected, an HTML edit input is created where the actual value should\n            be set.\n            ","description":"\n            The unique xPath for the input of the currently selected cell in a Grid adding the 'focused' criteria\n            \n            NOTE: this is risky to use because the focus attribute is unreliably set and can cause MANY race conditions.\n            The 'focused' criteria is also not always set on the edit cell depending on the approach you went to select a grid cell.\n            \n            When a grid cell is selected, an HTML edit input is created where the actual value should\n            be set.\n            "},"getXIFrameHtmlBodyP":{"value":"\n            Constant xPath for the 'mceContentBody' of an HTML element.  This is generally in an IFrame field.\n            ","description":"\n            Constant xPath for the 'mceContentBody' of an HTML element.  This is generally in an IFrame field.\n            "},"getXOKButton":{"value":"\n            Constant xPath value for finding an OK button WebElement.\n            ","description":"\n            Constant xPath value for finding an OK button WebElement.\n            "},"getXSaveAndCloseButton":{"value":"\n            Constant xPath value for finding a 'Save and close' button WebElement.\n            ","description":"\n            Constant xPath value for finding a 'Save and close' button WebElement.\n            "},"getXSaveButton":{"value":"\n            Constant xPath value for finding a Save button WebElement.\n            ","description":"\n            Constant xPath value for finding a Save button WebElement.\n            "},"getXTabStrip":{"value":"\n            Constant xPath for the tab strip of a dialog.\n            ","description":"\n            Constant xPath for the tab strip of a dialog.\n            "},"getXYesButton":{"value":"\n            Constant xPath value for finding a 'Yes' button WebElement.\n            ","description":"\n            Constant xPath value for finding a 'Yes' button WebElement.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXTabStrip","summary":"\r\n            Constant xPath for the tab strip of a dialog.\r\n            ","params":{"syntax":{"C#":"public const string getXTabStrip","VB":"Public Const getXTabStrip As String","C++":"public:\nliteral String^ getXTabStrip"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXGridEditCellSearchlist","summary":"\r\n            Constant xPath for the searchlist icon of a grid's edit cell.\r\n            ","params":{"syntax":{"C#":"public const string getXGridEditCellSearchlist","VB":"Public Const getXGridEditCellSearchlist As String","C++":"public:\nliteral String^ getXGridEditCellSearchlist"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXGridEditCellDropdownArrow","summary":"\r\n            Constant xPath for the dropdown arrow of a grid's edit cell.\r\n            ","params":{"syntax":{"C#":"public const string getXGridEditCellDropdownArrow","VB":"Public Const getXGridEditCellDropdownArrow As String","C++":"public:\nliteral String^ getXGridEditCellDropdownArrow"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXGridEditCell","summary":"\r\n            The unique xPath for the input of the currently selected cell in a Grid.\r\n            \r\n            When a grid cell is selected, an HTML edit input is created where the actual value should\r\n            be set.\r\n            ","params":{"syntax":{"C#":"public const string getXGridEditCell","VB":"Public Const getXGridEditCell As String","C++":"public:\nliteral String^ getXGridEditCell"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXGridFocusedEditCell","summary":"\r\n            The unique xPath for the input of the currently selected cell in a Grid adding the 'focused' criteria\r\n            \r\n            NOTE: this is risky to use because the focus attribute is unreliably set and can cause MANY race conditions.\r\n            The 'focused' criteria is also not always set on the edit cell depending on the approach you went to select a grid cell.\r\n            \r\n            When a grid cell is selected, an HTML edit input is created where the actual value should\r\n            be set.\r\n            ","params":{"syntax":{"C#":"public const string getXGridFocusedEditCell","VB":"Public Const getXGridFocusedEditCell As String","C++":"public:\nliteral String^ getXGridFocusedEditCell"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXIFrameHtmlBodyP","summary":"\r\n            Constant xPath for the 'mceContentBody' of an HTML element.  This is generally in an IFrame field.\r\n            ","params":{"syntax":{"C#":"public const string getXIFrameHtmlBodyP","VB":"Public Const getXIFrameHtmlBodyP As String","C++":"public:\nliteral String^ getXIFrameHtmlBodyP"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXSaveAndCloseButton","summary":"\r\n            Constant xPath value for finding a 'Save and close' button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXSaveAndCloseButton","VB":"Public Const getXSaveAndCloseButton As String","C++":"public:\nliteral String^ getXSaveAndCloseButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXYesButton","summary":"\r\n            Constant xPath value for finding a 'Yes' button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXYesButton","VB":"Public Const getXYesButton As String","C++":"public:\nliteral String^ getXYesButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXOKButton","summary":"\r\n            Constant xPath value for finding an OK button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXOKButton","VB":"Public Const getXOKButton As String","C++":"public:\nliteral String^ getXOKButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXCancelButton","summary":"\r\n            Constant xPath value for finding a Cancel button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXCancelButton","VB":"Public Const getXCancelButton As String","C++":"public:\nliteral String^ getXCancelButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXSaveButton","summary":"\r\n            Constant xPath value for finding a Save button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXSaveButton","VB":"Public Const getXSaveButton As String","C++":"public:\nliteral String^ getXSaveButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXDropdownList","summary":"\r\n            Constant xPath for the entire visible dropdown list.\r\n            ","params":{"syntax":{"C#":"public const string getXDropdownList","VB":"Public Const getXDropdownList As String","C++":"public:\nliteral String^ getXDropdownList"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialog_getXDropdownListItems","summary":"\r\n            Constant xPath for all items in the visible dropdown list.\r\n            ","params":{"syntax":{"C#":"public const string getXDropdownListItems","VB":"Public Const getXDropdownListItems As String","C++":"public:\nliteral String^ getXDropdownListItems"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXTab","summary":"\r\n            Format a unique xPath for a tab on a dialog.\r\n            ","param":{"_":"The caption of the tab.","name":"tabCaption"},"params":{"syntax":{"C#":"protected static string getXTab(\n\tstring tabCaption\n)","VB":"Protected Shared Function getXTab ( \n\ttabCaption As String\n) As String","C++":"protected:\nstatic String^ getXTab(\n\tString^ tabCaption\n)"},"arguments":{"tabCaption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_getXTab.htm":"getXTab Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXTab","summary":"\r\n            Format a unique xPath for a tab on a dialog.\r\n            ","param":[{"_":"The caption of the tab.","name":"tabCaption"},{"_":"The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"}],"params":{"syntax":{"C#":"protected static string getXTab(\n\tstring tabCaption\n)","VB":"Protected Shared Function getXTab ( \n\ttabCaption As String\n) As String","C++":"protected:\nstatic String^ getXTab(\n\tString^ tabCaption\n)"},"arguments":{"tabCaption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_getXTab.htm":"getXTab Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_OpenTab","summary":"\r\n            Open the tab of a dialog.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static void OpenTab(\n\tstring caption\n)","VB":"Public Shared Sub OpenTab ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"type":" The caption of the tab.","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_OpenTab.htm":"OpenTab Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_OpenTab","summary":"\r\n            Open the tab of a dialog.\r\n            ","param":[{"_":"The caption of the tab.","name":"caption"},{"_":"The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"}],"params":{"syntax":{"C#":"public static void OpenTab(\n\tstring caption\n)","VB":"Public Shared Sub OpenTab ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"type":" The caption of the tab.","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_OpenTab.htm":"OpenTab Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXCloseX","summary":"\r\n            Returns an xPath for the close Window [X] on the Dialog.\r\n            \r\n            ","params":{"syntax":{"C#":"public static string getXCloseX()","VB":"Public Shared Function getXCloseX As String","C++":"public:\nstatic String^ getXCloseX()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXCloseX\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXCloseX\"]","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDialogButton","summary":"\r\n            Returns an xPath for any button that is a decendant of a visible bbui-dialog and having \"buttonText\" text.\r\n            Uniqueness depends on the text passed.\r\n            \r\n            ","param":{"_":"The text of the required button.","name":"buttonText"},"params":{"syntax":{"C#":"public static string getXDialogButton(\n\tstring buttonText\n)","VB":"Public Shared Function getXDialogButton ( \n\tbuttonText As String\n) As String","C++":"public:\nstatic String^ getXDialogButton(\n\tString^ buttonText\n)"},"arguments":{"buttonText":{"type":"SystemString","description":"The text of the required button."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDialogButton(System.String)\"]"},"type":" The text of the required button.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_getXDialogButton.htm":"getXDialogButton Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXEntireDialogButton","summary":"\r\n            Format an xPath for finding a dialog's button including the common bottom bar that contains buttons\r\n            such as Save, Close, and Cancel.\r\n            ","param":[{"_":"The caption of the button.","name":"buttonText"},{"_":"The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"}],"params":{"syntax":{"C#":"public static string getXEntireDialogButton(\n\tstring buttonText,\n\tstring dialogId\n)","VB":"Public Shared Function getXEntireDialogButton ( \n\tbuttonText As String,\n\tdialogId As String\n) As String","C++":"public:\nstatic String^ getXEntireDialogButton(\n\tString^ buttonText, \n\tString^ dialogId\n)"},"arguments":{"buttonText":{"type":"SystemString","description":"The caption of the button."},"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;RevenueBatchConstituentInbatchEditForm&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXEntireDialogButton(System.String,System.String)\"]"},"type":" The caption of the button.dialogId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDialogButton","summary":"\r\n            Format an xPath for finding a dialog's button.\r\n            ","param":[{"_":"The caption of the button.","name":"buttonText"},{"_":"The dialog's unique id identifier - i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"}],"params":{"syntax":{"C#":"public static string getXDialogButton(\n\tstring buttonText\n)","VB":"Public Shared Function getXDialogButton ( \n\tbuttonText As String\n) As String","C++":"public:\nstatic String^ getXDialogButton(\n\tString^ buttonText\n)"},"arguments":{"buttonText":{"type":"SystemString","description":"The text of the required button."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDialogButton(System.String)\"]"},"type":" The text of the required button.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_getXDialogButton.htm":"getXDialogButton Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXGridCell","summary":"\r\n            Formats the unique xPath for getting a single grid TD element that belongs to a specified\r\n            row and columun in a grid on a dialog.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'","name":"dialogId"},{"_":"The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'","name":"gridId"},{"_":"Row number to use.  Counting starts at 1","name":"row"},{"_":"Column index to use.  Column indexing does NOT always start at 1 or 0 as columns can be hidden.","name":"columnIndex"}],"params":{"syntax":{"C#":"public static string getXGridCell(\n\tstring dialogId,\n\tstring gridId,\n\tint row,\n\tint columnIndex\n)","VB":"Public Shared Function getXGridCell ( \n\tdialogId As String,\n\tgridId As String,\n\trow As Integer,\n\tcolumnIndex As Integer\n) As String","C++":"public:\nstatic String^ getXGridCell(\n\tString^ dialogId, \n\tString^ gridId, \n\tint row, \n\tint columnIndex\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;PlanOutlineAddForm&apos;"},"gridId":{"type":"SystemString","description":"The HTML [] element&apos;s unique id identifier - i.e. &apos;PLANOUTLINESTEPS&apos;"},"row":{"type":"SystemInt32","description":"Row number to use.  Counting starts at 1"},"columnIndex":{"type":"SystemInt32","description":"Column index to use.  Column indexing does NOT always start at 1 or 0 as columns can be hidden."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXGridCell(System.String,System.String,System.Int32,System.Int32)\"]"},"type":" The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXGridRow","summary":"\r\n            Formats the unique xPath for getting a single grid row.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'","name":"dialogId"},{"_":"The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'","name":"gridId"},{"_":"Row number to use.  Counting starts at 1","name":"row"}],"params":{"syntax":{"C#":"public static string getXGridRow(\n\tstring dialogId,\n\tstring gridId,\n\tint row\n)","VB":"Public Shared Function getXGridRow ( \n\tdialogId As String,\n\tgridId As String,\n\trow As Integer\n) As String","C++":"public:\nstatic String^ getXGridRow(\n\tString^ dialogId, \n\tString^ gridId, \n\tint row\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;PlanOutlineAddForm&apos;"},"gridId":{"type":"SystemString","description":"The HTML [] element&apos;s unique id identifier - i.e. &apos;PLANOUTLINESTEPS&apos;"},"row":{"type":"SystemInt32","description":"Row number to use.  Counting starts at 1"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXGridRow(System.String,System.String,System.Int32)\"]"},"type":" The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXGridRowSelector","summary":"\r\n            Format the unique xPath for selecting a single grid row.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'","name":"dialogId"},{"_":"The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'","name":"gridId"},{"_":"Row number to use.  Counting starts at 1","name":"row"}],"params":{"syntax":{"C#":"public static string getXGridRowSelector(\n\tstring dialogId,\n\tstring gridId,\n\tint row\n)","VB":"Public Shared Function getXGridRowSelector ( \n\tdialogId As String,\n\tgridId As String,\n\trow As Integer\n) As String","C++":"public:\nstatic String^ getXGridRowSelector(\n\tString^ dialogId, \n\tString^ gridId, \n\tint row\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;PlanOutlineAddForm&apos;"},"gridId":{"type":"SystemString","description":"The HTML [] element&apos;s unique id identifier - i.e. &apos;PLANOUTLINESTEPS&apos;"},"row":{"type":"SystemInt32","description":"Row number to use.  Counting starts at 1"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXGridRowSelector(System.String,System.String,System.Int32)\"]"},"type":" The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXGridHeaders","summary":"\r\n            Formats the unique xPath for getting the TR row header element that belongs to\r\n            a grid on a dialog.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'","name":"dialogId"},{"_":"The HTML [] element's unique id identifier - i.e. 'PLANOUTLINESTEPS'","name":"gridId"}],"params":{"syntax":{"C#":"public static string getXGridHeaders(\n\tstring dialogId,\n\tstring gridId\n)","VB":"Public Shared Function getXGridHeaders ( \n\tdialogId As String,\n\tgridId As String\n) As String","C++":"public:\nstatic String^ getXGridHeaders(\n\tString^ dialogId, \n\tString^ gridId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;PlanOutlineAddForm&apos;"},"gridId":{"type":"SystemString","description":"The HTML [] element&apos;s unique id identifier - i.e. &apos;PLANOUTLINESTEPS&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXGridHeaders(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. 'PlanOutlineAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXIFrame","summary":"\r\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\r\n            to find the IFRAME field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"The DIV element's unique id identifier - i.e. 'HTMLNOTE'","name":"divId"}],"params":{"syntax":{"C#":"public static string getXIFrame(\n\tstring dialogId,\n\tstring divId\n)","VB":"Public Shared Function getXIFrame ( \n\tdialogId As String,\n\tdivId As String\n) As String","C++":"public:\nstatic String^ getXIFrame(\n\tString^ dialogId, \n\tString^ divId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"divId":{"type":"SystemString","description":"The DIV element&apos;s unique id identifier - i.e. &apos;HTMLNOTE&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXIFrame(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'divId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXLinkByAction","summary":"\r\n            Format an xPath to find a link on the dialog.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"The unique id associated with the link - i.e. 'SPLITSACTION'","name":"linkId"}],"params":{"syntax":{"C#":"public static string getXLinkByAction(\n\tstring dialogId,\n\tstring linkId\n)","VB":"Public Shared Function getXLinkByAction ( \n\tdialogId As String,\n\tlinkId As String\n) As String","C++":"public:\nstatic String^ getXLinkByAction(\n\tString^ dialogId, \n\tString^ linkId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"linkId":{"type":"SystemString","description":"The unique id associated with the link - i.e. &apos;SPLITSACTION&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXLinkByAction(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'linkId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXLinkByCaption","summary":"\r\n            Format an xPath to find a link on the dialog.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"'The caption/text of the link.","name":"caption"}],"params":{"syntax":{"C#":"public static string getXLinkByCaption(\n\tstring dialogId,\n\tstring caption\n)","VB":"Public Shared Function getXLinkByCaption ( \n\tdialogId As String,\n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXLinkByCaption(\n\tString^ dialogId, \n\tString^ caption\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"caption":{"type":"SystemString","description":"&apos;The caption/text of the link."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXLinkByCaption(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'caption","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDiv","summary":"\r\n            Given the unique HTML element ids of a dialog and div, return a unique identifier xPath\r\n            to find the DIV field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'PledgeAddForm'","name":"dialogId"},{"_":"The 'a' link element's unique id identifier - i.e. 'SHOWSYSTEM'","name":"divId"}],"params":{"syntax":{"C#":"public static string getXDiv(\n\tstring dialogId,\n\tstring divId\n)","VB":"Public Shared Function getXDiv ( \n\tdialogId As String,\n\tdivId As String\n) As String","C++":"public:\nstatic String^ getXDiv(\n\tString^ dialogId, \n\tString^ divId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;PledgeAddForm&apos;"},"divId":{"type":"SystemString","description":"The &apos;a&apos; link element&apos;s unique id identifier - i.e. &apos;SHOWSYSTEM&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDiv(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. 'PledgeAddForm'divId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXTextArea","summary":"\r\n            Given the unique HTML element ids of a dialog and textarea, return a unique identifier xPath\r\n            to find the TEXTAREA field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"The TEXTAREA element's unique id identifier - i.e. '_DESCRIPTION_value'","name":"textAreaId"}],"params":{"syntax":{"C#":"public static string getXTextArea(\n\tstring dialogId,\n\tstring textAreaId\n)","VB":"Public Shared Function getXTextArea ( \n\tdialogId As String,\n\ttextAreaId As String\n) As String","C++":"public:\nstatic String^ getXTextArea(\n\tString^ dialogId, \n\tString^ textAreaId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"textAreaId":{"type":"SystemString","description":"The TEXTAREA element&apos;s unique id identifier - i.e. &apos;_DESCRIPTION_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXTextArea(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'textAreaId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXButton","summary":"\r\n            Format a unique xPath identifier to find a button on a dialog.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. 'EventManagementTemplateAddDataForm'","name":"dialogId"},{"_":"The caption of the button.","name":"buttonCaption"}],"params":{"syntax":{"C#":"public static string getXButton(\n\tstring dialogId,\n\tstring buttonCaption\n)","VB":"Public Shared Function getXButton ( \n\tdialogId As String,\n\tbuttonCaption As String\n) As String","C++":"public:\nstatic String^ getXButton(\n\tString^ dialogId, \n\tString^ buttonCaption\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;EventManagementTemplateAddDataForm&apos;"},"buttonCaption":{"type":"SystemString","description":"The caption of the button."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXButton(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. 'EventManagementTemplateAddDataForm'buttonCaption","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXSpan","summary":"\r\n            Given the unique HTML element ids of a dialog and span, return a unique identifier xPath\r\n            to find the SPAN field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'","name":"dialogId"},{"_":"The SPAN element's unique id identifier - i.e. '_LOCATION_value'","name":"spanId"}],"params":{"syntax":{"C#":"public static string getXSpan(\n\tstring dialogId,\n\tstring spanId\n)","VB":"Public Shared Function getXSpan ( \n\tdialogId As String,\n\tspanId As String\n) As String","C++":"public:\nstatic String^ getXSpan(\n\tString^ dialogId, \n\tString^ spanId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_EventSummaryViewForm3&apos;"},"spanId":{"type":"SystemString","description":"The SPAN element&apos;s unique id identifier - i.e. &apos;_LOCATION_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXSpan(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'spanId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXInput","summary":"\r\n            Given the unique HTML element ids of a dialog and input, return a unique identifier xPath\r\n            to find the INPUT field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"The INPUT element's unique id identifier - i.e. '_LASTNAME_value'","name":"inputId"}],"params":{"syntax":{"C#":"public static string getXInput(\n\tstring dialogId,\n\tstring inputId\n)","VB":"Public Shared Function getXInput ( \n\tdialogId As String,\n\tinputId As String\n) As String","C++":"public:\nstatic String^ getXInput(\n\tString^ dialogId, \n\tString^ inputId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"inputId":{"type":"SystemString","description":"The INPUT element&apos;s unique id identifier - i.e. &apos;_LASTNAME_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXInput(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'inputId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXInputSearchTrigger","summary":"\r\n            Format an xPath to find the search trigger button associated with an input field.\r\n            ","param":{"_":"The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\r\n            the xPath.","name":"dialogInputXPath"},"params":{"syntax":{"C#":"public static string getXInputSearchTrigger(\n\tstring dialogInputXPath\n)","VB":"Public Shared Function getXInputSearchTrigger ( \n\tdialogInputXPath As String\n) As String","C++":"public:\nstatic String^ getXInputSearchTrigger(\n\tString^ dialogInputXPath\n)"},"arguments":{"dialogInputXPath":{"type":"SystemString","description":"The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\n            the xPath."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXInputSearchTrigger(System.String)\"]"},"type":" The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\n            the xPath.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXInputNewFormTrigger","summary":"\r\n            Format an xPath to find the new-form trigger button associated with an input field.\r\n            ","param":{"_":"The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\r\n            the xPath.","name":"dialogInputXPath"},"params":{"syntax":{"C#":"public static string getXInputNewFormTrigger(\n\tstring dialogInputXPath\n)","VB":"Public Shared Function getXInputNewFormTrigger ( \n\tdialogInputXPath As String\n) As String","C++":"public:\nstatic String^ getXInputNewFormTrigger(\n\tString^ dialogInputXPath\n)"},"arguments":{"dialogInputXPath":{"type":"SystemString","description":"The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\n            the xPath."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXInputNewFormTrigger(System.String)\"]"},"type":" The unique xPath of the dialog input.  Likely will have used Dialog.getXInput() to format\n            the xPath.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXVisibleDialog","summary":"\r\n            Format an xPath to get a visible dialog.\r\n            ","params":{"syntax":{"C#":"public static string getXVisibleDialog()","VB":"Public Shared Function getXVisibleDialog As String","C++":"public:\nstatic String^ getXVisibleDialog()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXVisibleDialog\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXVisibleDialog\"]","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDialogById","summary":"\r\n            Format an xPath to get a dialog based on its unique id.\r\n            ","param":{"_":"The dialog's unique id identifier - i.e. 'FundraisingSearch'","name":"dialogId"},"params":{"syntax":{"C#":"public static string getXDialogById(\n\tstring dialogId\n)","VB":"Public Shared Function getXDialogById ( \n\tdialogId As String\n) As String","C++":"public:\nstatic String^ getXDialogById(\n\tString^ dialogId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;FundraisingSearch&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDialogById(System.String)\"]"},"type":" The dialog's unique id identifier - i.e. 'FundraisingSearch'Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDialogByClass","summary":"\r\n            Format an xPath to get a dialog based on an value contained in the class attribute of the root dialog DIV.\r\n            ","param":{"_":"The value to see if contained in the class attribute.","name":"classValue"},"params":{"syntax":{"C#":"public static string getXDialogByClass(\n\tstring classValue\n)","VB":"Public Shared Function getXDialogByClass ( \n\tclassValue As String\n) As String","C++":"public:\nstatic String^ getXDialogByClass(\n\tString^ classValue\n)"},"arguments":{"classValue":{"type":"SystemString","description":"The value to see if contained in the class attribute."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDialogByClass(System.String)\"]"},"type":" The value to see if contained in the class attribute.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_Yes","summary":"\r\n            Click the 'Yes' button\r\n            ","params":{"syntax":{"C#":"public static void Yes()","VB":"Public Shared Sub Yes","C++":"public:\nstatic void Yes()"},"references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_OK","summary":"\r\n            Click the 'OK' button\r\n            ","params":{"syntax":{"C#":"public static void OK()","VB":"Public Shared Sub OK","C++":"public:\nstatic void OK()"},"references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_Cancel","summary":"\r\n            Click the 'Cancel' button\r\n            ","params":{"syntax":{"C#":"public static void Cancel()","VB":"Public Shared Sub Cancel","C++":"public:\nstatic void Cancel()"},"references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_Save","summary":"\r\n            Click the 'Save' button\r\n            ","params":{"syntax":{"C#":"public static void Save()","VB":"Public Shared Sub Save","C++":"public:\nstatic void Save()"},"references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDropdownItem","summary":"\r\n            Formats an xPath for a dropdown item.\r\n            ","param":{"_":"The caption value of the dropdown list item.","name":"caption"},"params":{"syntax":{"C#":"public static string getXDropdownItem(\n\tstring caption\n)","VB":"Public Shared Function getXDropdownItem ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXDropdownItem(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption value of the dropdown list item."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDropdownItem(System.String)\"]"},"type":" The caption value of the dropdown list item.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_getXDropdownArrow","summary":"\r\n            Formats an xPath for the arrow dropdown of a dropdown INPUT field.\r\n            ","param":{"_":"The xPath of the dropdown.  Advised to use Dialog.getXInput()","name":"dropdownxPath"},"params":{"syntax":{"C#":"public static string getXDropdownArrow(\n\tstring dropdownxPath\n)","VB":"Public Shared Function getXDropdownArrow ( \n\tdropdownxPath As String\n) As String","C++":"public:\nstatic String^ getXDropdownArrow(\n\tString^ dropdownxPath\n)"},"arguments":{"dropdownxPath":{"type":"SystemString","description":"The xPath of the dropdown.  Advised to use Dialog.getXInput()"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Dialog.getXDropdownArrow(System.String)\"]"},"type":" The xPath of the dropdown.  Advised to use Dialog.getXInput()Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_DropdownValueExists","summary":"\r\n            Check if a value exists as a selectable item in a dropdown list.\r\n            ","param":[{"_":"The xPath of the dropdown.  Advised to use Dialog.getXInput()","name":"xPath"},{"_":"The value to check for as an option in the dropdown.","name":"value"}],"returns":"True if the value is an option, false otherwise.","params":{"syntax":{"C#":"public static bool DropdownValueExists(\n\tstring xPath,\n\tstring value\n)","VB":"Public Shared Function DropdownValueExists ( \n\txPath As String,\n\tvalue As String\n) As Boolean","C++":"public:\nstatic bool DropdownValueExists(\n\tString^ xPath, \n\tString^ value\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the dropdown.  Advised to use Dialog.getXInput()"},"value":{"type":"SystemString","description":"The value to check for as an option in the dropdown."}},"return_val":{"type":" Boolean","description":"True if the value is an option, false otherwise."},"type":" The xPath of the dropdown.  Advised to use Dialog.getXInput()value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetHtmlField","summary":"\r\n            Set an IFrame HTML field's value.\r\n            ","param":[{"_":"The xPath of the IFrame.  Advised to use Dialog.getXIFrame()","name":"xPath"},{"_":"The value to set in the HTML body of the IFrame.","name":"value"}],"params":{"syntax":{"C#":"public static void SetHtmlField(\n\tstring xPath,\n\tstring value = \"\"\n)","VB":"Public Shared Sub SetHtmlField ( \n\txPath As String,\n\tOptional value As String = \"\"\n)","C++":"public:\nstatic void SetHtmlField(\n\tString^ xPath, \n\tString^ value = L\"\"\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the IFrame.  Advised to use Dialog.getXIFrame()"},"value":{"type":"SystemString","description":"The value to set in the HTML body of the IFrame."}},"type":" The xPath of the IFrame.  Advised to use Dialog.getXIFrame()value (Optional)","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetDropDown","summary":"\r\n            Set a Dropdown field.\r\n            \r\n            WebDriverTimeoutException is thrown if no value is found.\r\n            ","param":[{"_":"The xPath to find the dropdown INPUT element with","name":"xPath"},{"_":"The value to set the dropdown to.","name":"value"}],"params":{"syntax":{"C#":"public static void SetDropDown(\n\tstring xPath,\n\tstring value = \"\"\n)","VB":"Public Shared Sub SetDropDown ( \n\txPath As String,\n\tOptional value As String = \"\"\n)","C++":"public:\nstatic void SetDropDown(\n\tString^ xPath, \n\tString^ value = L\"\"\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath to find the dropdown INPUT element with"},"value":{"type":"SystemString","description":"The value to set the dropdown to."}},"type":" The xPath to find the dropdown INPUT element withvalue (Optional)","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridSearchList","summary":"\r\n            Set a grid cell's value using the searchlist.\r\n            ","param":[{"_":"The xPath of the grid cell TD element.","name":"xPath"},{"_":"The xPath of the search dialog's field to set.","name":"searchDialogxPath"},{"_":"The value to set and use as search criteria in the specified search dialog field.","name":"value"}],"params":{"syntax":{"C#":"public static void SetGridSearchList(\n\tstring xPath,\n\tstring searchDialogxPath,\n\tstring value\n)","VB":"Public Shared Sub SetGridSearchList ( \n\txPath As String,\n\tsearchDialogxPath As String,\n\tvalue As String\n)","C++":"public:\nstatic void SetGridSearchList(\n\tString^ xPath, \n\tString^ searchDialogxPath, \n\tString^ value\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the grid cell TD element."},"searchDialogxPath":{"type":"SystemString","description":"The xPath of the search dialog&apos;s field to set."},"value":{"type":"SystemString","description":"The value to set and use as search criteria in the specified search dialog field."}},"type":" The xPath of the grid cell TD element.searchDialogxPath","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridDropDown","summary":"\r\n            Set a Grid cell's value for a dropdown field.\r\n            ","param":[{"_":"The xPath of the grid cell TD element.","name":"xPath"},{"_":"The value to set the cell to.","name":"value"}],"params":{"syntax":{"C#":"public static void SetGridDropDown(\n\tstring xPath,\n\tstring value = \"\"\n)","VB":"Public Shared Sub SetGridDropDown ( \n\txPath As String,\n\tOptional value As String = \"\"\n)","C++":"public:\nstatic void SetGridDropDown(\n\tString^ xPath, \n\tString^ value = L\"\"\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the grid cell TD element."},"value":{"type":"SystemString","description":"The value to set the cell to."}},"type":" The xPath of the grid cell TD element.value (Optional)","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridTextField","summary":"\r\n            Set a Grid cell's value for a text field.\r\n            ","param":[{"_":"The xPath of the grid cell TD element.","name":"xPath"},{"_":"The value to set the cell to.","name":"value"}],"params":{"syntax":{"C#":"public static void SetGridTextField(\n\tstring xPath,\n\tstring value = \"\"\n)","VB":"Public Shared Sub SetGridTextField ( \n\txPath As String,\n\tOptional value As String = \"\"\n)","C++":"public:\nstatic void SetGridTextField(\n\tString^ xPath, \n\tString^ value = L\"\"\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the grid cell TD element."},"value":{"type":"SystemString","description":"The value to set the cell to."}},"type":" The xPath of the grid cell TD element.value (Optional)","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetSearchList","summary":"\r\n            Set a field's value using the associated search dialog to the first found item in the search results.\r\n            ","param":[{"_":"The xPath of the field to set.","name":"xPath"},{"_":"The xPath of the search dialog's field to set.","name":"searchFieldxPath"},{"_":"The value to set and use as search criteria in the specified search dialog field.","name":"value"}],"params":{"syntax":{"C#":"public static void SetSearchList(\n\tstring xPath,\n\tstring searchFieldxPath,\n\tstring value = \"\"\n)","VB":"Public Shared Sub SetSearchList ( \n\txPath As String,\n\tsearchFieldxPath As String,\n\tOptional value As String = \"\"\n)","C++":"public:\nstatic void SetSearchList(\n\tString^ xPath, \n\tString^ searchFieldxPath, \n\tString^ value = L\"\"\n)"},"arguments":{"xPath":{"type":"SystemString","description":"The xPath of the field to set."},"searchFieldxPath":{"type":"SystemString","description":"The xPath of the search dialog&apos;s field to set."},"value":{"type":"SystemString","description":"The value to set and use as search criteria in the specified search dialog field."}},"type":" The xPath of the field to set.searchFieldxPath","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_ClickButton","summary":"\r\n            Click a button that has a new dialog appear.  Continuely click the button\r\n            until the new dialog appears.\r\n            ","param":[{"_":"The caption of the dialog button","name":"caption"},{"_":"The new dialog's unique id identifer. i.e. - 'RevenueBatchConstituentInbatchEditForm' \r\n            If null is provided, then the method waits for a message box dialog that contains no unique id.","name":"dialogId"}],"params":{"syntax":{"C#":"public static void ClickButton(\n\tstring caption\n)","VB":"Public Shared Sub ClickButton ( \n\tcaption As String\n)","C++":"public:\nstatic void ClickButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the dialog button."}},"type":" The caption of the dialog button.","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_ClickButton.htm":"ClickButton Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_ClickButton","summary":"\r\n            Click a dialog button.\r\n            ","param":[{"_":"The caption of the dialog button.","name":"caption"},{"_":"The amount of time to try and find a valid button to click before\r\n            a WebDriverTimeoutException is thrown.","name":"timeout"}],"params":{"syntax":{"C#":"public static void ClickButton(\n\tstring caption\n)","VB":"Public Shared Sub ClickButton ( \n\tcaption As String\n)","C++":"public:\nstatic void ClickButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the dialog button."}},"type":" The caption of the dialog button.","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_ClickButton.htm":"ClickButton Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_ClickButton","summary":"\r\n            Click a dialog button.\r\n            ","param":{"_":"The caption of the dialog button.","name":"caption"},"params":{"syntax":{"C#":"public static void ClickButton(\n\tstring caption\n)","VB":"Public Shared Sub ClickButton ( \n\tcaption As String\n)","C++":"public:\nstatic void ClickButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the dialog button."}},"type":" The caption of the dialog button.","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_ClickButton.htm":"ClickButton Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_GetDialogId","summary":"\r\n            Wait for a dialog to appear that has a unique is in the provided list of\r\n            ids and return the matching id.\r\n            ","param":{"_":"A list of ids to wait for.","name":"supportedIds"},"returns":"The first found matching id for a dialog that is visible with that id.\r\n            If no id is found, a WebDriverTimeoutException is eventually thrown.","params":{"syntax":{"C#":"public static string GetDialogId(\n\tIEnumerable<string> supportedIds\n)","VB":"Public Shared Function GetDialogId ( \n\tsupportedIds As IEnumerable(Of String)\n) As String","C++":"public:\nstatic String^ GetDialogId(\n\tIEnumerable<String^>^ supportedIds\n)"},"arguments":{"supportedIds":{"type":"System.Collections.GenericIEnumerableString","description":"A list of ids to wait for."}},"return_val":{"type":" String","description":"The first found matching id for a dialog that is visible with that id.\n            If no id is found, a WebDriverTimeoutException is eventually thrown."},"type":" A list of ids to wait for.Return Value","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetField","summary":"\r\n            Set any supported field's value for any supported field type.\r\n            ","param":[{"_":"The unique of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"},{"_":"The caption of the field.","name":"caption"},{"_":"The desired value of the field.","name":"value"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"}],"params":{"syntax":{"C#":"public static void SetField(\n\tstring dialogId,\n\tstring caption,\n\tstring value,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetField ( \n\tdialogId As String,\n\tcaption As String,\n\tvalue As String,\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetField(\n\tString^ dialogId, \n\tString^ caption, \n\tString^ value, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique of the dialog.  i.e. &apos;RevenueBatchConstituentInbatchEditForm&apos;"},"caption":{"type":"SystemString","description":"The caption of the field."},"value":{"type":"SystemString","description":"The desired value of the field."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'caption","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetFields","summary":"\r\n            Set all supported and displayed field values for any supported field type.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"},{"_":"Mapping of the field captions to their desired values.","name":"fields"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"}],"params":{"syntax":{"C#":"public static void SetFields(\n\tstring dialogId,\n\tTableRow fields,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetFields ( \n\tdialogId As String,\n\tfields As TableRow,\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetFields(\n\tString^ dialogId, \n\tTableRow^ fields, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;RevenueBatchConstituentInbatchEditForm&apos;"},"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'fields","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetFields.htm":"SetFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetFields","summary":"\r\n            Set all supported and displayed field values for any supported field type.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'","name":"dialogId"},{"_":"Mapping of the field captions to their desired values.","name":"fields"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"},{"_":"Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.","name":"customSupportedFields"}],"params":{"syntax":{"C#":"public static void SetFields(\n\tstring dialogId,\n\tTableRow fields,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetFields ( \n\tdialogId As String,\n\tfields As TableRow,\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetFields(\n\tString^ dialogId, \n\tTableRow^ fields, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;RevenueBatchConstituentInbatchEditForm&apos;"},"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'RevenueBatchConstituentInbatchEditForm'fields","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetFields.htm":"SetFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridRow","summary":"\r\n            Set a single row's values for a grid.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'EventTaskAddForm'","name":"dialogId"},{"_":"The unique id of the grid - i.e. '_REMINDERS_'","name":"gridId"},{"_":"Mapping of the column captions to a single row's desired values.","name":"row"},{"_":"The index of the row to set.  \r\n            The first row's index is represented as 1.","name":"rowIndex"},{"_":"Mapping of the column captions to their DOM TR index.","name":"columnCaptionToIndex"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"}],"params":{"syntax":{"C#":"public static void SetGridRow(\n\tstring dialogId,\n\tstring gridId,\n\tTableRow row,\n\tint rowIndex,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetGridRow ( \n\tdialogId As String,\n\tgridId As String,\n\trow As TableRow,\n\trowIndex As Integer,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetGridRow(\n\tString^ dialogId, \n\tString^ gridId, \n\tTableRow^ row, \n\tint rowIndex, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;EventTaskAddForm&apos;"},"gridId":{"type":"SystemString","description":"The unique id of the grid - i.e. &apos;_REMINDERS_&apos;"},"row":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s desired values."},"rowIndex":{"type":"SystemInt32","description":"The index of the row to set.  \n            The first row&apos;s index is represented as 1."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the column captions to their DOM TR index."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'EventTaskAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetGridRow.htm":"SetGridRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridRow","summary":"\r\n            Set a single row's values for a grid.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'EventTaskAddForm'","name":"dialogId"},{"_":"The unique id of the grid - i.e. '_REMINDERS_'","name":"gridId"},{"_":"Mapping of the column captions to a single row's desired values.","name":"row"},{"_":"The index of the row to set.  \r\n            The first row's index is represented as 1.","name":"rowIndex"},{"_":"Mapping of the column captions to their DOM TR index.","name":"columnCaptionToIndex"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"},{"_":"Mapping of field captions to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.","name":"customSupportedFields"}],"params":{"syntax":{"C#":"public static void SetGridRow(\n\tstring dialogId,\n\tstring gridId,\n\tTableRow row,\n\tint rowIndex,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetGridRow ( \n\tdialogId As String,\n\tgridId As String,\n\trow As TableRow,\n\trowIndex As Integer,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetGridRow(\n\tString^ dialogId, \n\tString^ gridId, \n\tTableRow^ row, \n\tint rowIndex, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;EventTaskAddForm&apos;"},"gridId":{"type":"SystemString","description":"The unique id of the grid - i.e. &apos;_REMINDERS_&apos;"},"row":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s desired values."},"rowIndex":{"type":"SystemInt32","description":"The index of the row to set.  \n            The first row&apos;s index is represented as 1."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the column captions to their DOM TR index."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'EventTaskAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetGridRow.htm":"SetGridRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridRows","summary":"\r\n            Set the row values for a grid.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'EventTaskAddForm'","name":"dialogId"},{"_":"The unique id of the grid - i.e. '_REMINDERS_'","name":"gridId"},{"_":"Table where each TableRow a row to set.\r\n            Each TableRow is a mapping of the column captions to a single row's desired values.","name":"rows"},{"_":"The row index to start adding rows from.  \r\n            The first row's index is represented as 1.","name":"startingRowIndex"},{"_":"Mapping of the column captions to their DOM TR index.","name":"columnCaptionToIndex"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"}],"params":{"syntax":{"C#":"public static void SetGridRows(\n\tstring dialogId,\n\tstring gridId,\n\tTable rows,\n\tint startingRowIndex,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetGridRows ( \n\tdialogId As String,\n\tgridId As String,\n\trows As Table,\n\tstartingRowIndex As Integer,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetGridRows(\n\tString^ dialogId, \n\tString^ gridId, \n\tTable^ rows, \n\tint startingRowIndex, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;EventTaskAddForm&apos;"},"gridId":{"type":"SystemString","description":"The unique id of the grid - i.e. &apos;_REMINDERS_&apos;"},"rows":{"type":"Table","description":"Table where each TableRow a row to set.\n            Each TableRow is a mapping of the column captions to a single row&apos;s desired values."},"startingRowIndex":{"type":"SystemInt32","description":"The row index to start adding rows from.  \n            The first row&apos;s index is represented as 1."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the column captions to their DOM TR index."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'EventTaskAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetGridRows.htm":"SetGridRows Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialog_SetGridRows","summary":"\r\n            Set the row values for a grid.\r\n            ","param":[{"_":"The unique id of the dialog.  i.e. 'EventTaskAddForm'","name":"dialogId"},{"_":"The unique id of the grid - i.e. '_REMINDERS_'","name":"gridId"},{"_":"Table where each TableRow a row to set.\r\n            Each TableRow is a mapping of the column captions to a single row's desired values.","name":"rows"},{"_":"The row index to start adding rows from.  \r\n            The first row's index is represented as 1.","name":"startingRowIndex"},{"_":"Mapping of the column captions to their DOM TR index.","name":"columnCaptionToIndex"},{"_":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\r\n            needed to set the field's value.","name":"supportedFields"},{"_":"Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.","name":"customSupportedFields"}],"params":{"syntax":{"C#":"public static void SetGridRows(\n\tstring dialogId,\n\tstring gridId,\n\tTable rows,\n\tint startingRowIndex,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, CrmField> supportedFields\n)","VB":"Public Shared Sub SetGridRows ( \n\tdialogId As String,\n\tgridId As String,\n\trows As Table,\n\tstartingRowIndex As Integer,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tsupportedFields As IDictionary(Of String, CrmField)\n)","C++":"public:\nstatic void SetGridRows(\n\tString^ dialogId, \n\tString^ gridId, \n\tTable^ rows, \n\tint startingRowIndex, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, CrmField^>^ supportedFields\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The unique id of the dialog.  i.e. &apos;EventTaskAddForm&apos;"},"gridId":{"type":"SystemString","description":"The unique id of the grid - i.e. &apos;_REMINDERS_&apos;"},"rows":{"type":"Table","description":"Table where each TableRow a row to set.\n            Each TableRow is a mapping of the column captions to a single row&apos;s desired values."},"startingRowIndex":{"type":"SystemInt32","description":"The row index to start adding rows from.  \n            The first row&apos;s index is represented as 1."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the column captions to their DOM TR index."},"supportedFields":{"type":"System.Collections.GenericIDictionaryStringCrmField","description":"Mapping of the supported field captions to a CrmField object encapsulating all relevant variables\n            needed to set the field&apos;s value."}},"type":" The unique id of the dialog.  i.e. 'EventTaskAddForm'gridId","references":{"T_Blueshirt_Core_Crm_Dialog.htm":"Dialog Class","Overload_Blueshirt_Core_Crm_Dialog_SetGridRows.htm":"SetGridRows Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_CommitmentsDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_CommitmentsDialog.htm":"CommitmentsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_CommitmentsDialog_SupportedAddtionalApplicationsGridFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedAddtionalApplicationsGridFields","VB":"Protected Shared ReadOnly SupportedAddtionalApplicationsGridFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedAddtionalApplicationsGridFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_CommitmentsDialog.htm":"CommitmentsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_CommitmentsDialog_SetAdditionalApplicationsGridRows","summary":"\r\n            Set the grid rows for the Additional applications grid starting with the first row.\r\n            ","param":{"_":"Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values","name":"applications"},"params":{"syntax":{"C#":"public static void SetAdditionalApplicationsGridRows(\n\tTable applications\n)","VB":"Public Shared Sub SetAdditionalApplicationsGridRows ( \n\tapplications As Table\n)","C++":"public:\nstatic void SetAdditionalApplicationsGridRows(\n\tTable^ applications\n)"},"arguments":{"applications":{"type":"Table","description":"Table where each TableRow corresponds to a grid row&apos;s values.\n            A TableRow is a mapping of the column captions to a single row&apos;s desired values"}},"type":" TableTable where each TableRow corresponds to a grid row's values.\n            A TableRow is a mapping of the column captions to a single row's desired values","references":{"T_Blueshirt_Core_Crm_CommitmentsDialog.htm":"CommitmentsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_DesignationsDialog","summary":"\r\n            Class to handle the interactions for adding/editing a designations dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmDesignationsDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The DesignationsDialog type exposes the following members.","constructors":{"DesignationsDialog":{"value":"Initializes a new instance of the DesignationsDialog class","description":"Initializes a new instance of the DesignationsDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SplitDesignations":{"value":"\n            Set the designations grid rows starting with the first row and distribute the amount evenly\n            if specified.\n            ","description":"\n            Set the designations grid rows starting with the first row and distribute the amount evenly\n            if specified.\n            "},"SplitDesignationsEvenly":{"value":"\n            Set the designations grid rows starting with the first row and distribute the amount evenly.\n            ","description":"\n            Set the designations grid rows starting with the first row and distribute the amount evenly.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"","description":""}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_DesignationsDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_DesignationsDialog.htm":"DesignationsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignationsEvenly","summary":"\r\n            Set the designations grid rows starting with the first row and distribute the amount evenly.\r\n            ","param":{"_":"Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values","name":"designations"},"params":{"syntax":{"C#":"public static void SplitDesignationsEvenly(\n\tTable designations\n)","VB":"Public Shared Sub SplitDesignationsEvenly ( \n\tdesignations As Table\n)","C++":"public:\nstatic void SplitDesignationsEvenly(\n\tTable^ designations\n)"},"arguments":{"designations":{"type":"Table","description":"Table where each TableRow corresponds to a grid row&apos;s values.\n            A TableRow is a mapping of the column captions to a single row&apos;s desired values"}},"type":" TableTable where each TableRow corresponds to a grid row's values.\n            A TableRow is a mapping of the column captions to a single row's desired values","references":{"T_Blueshirt_Core_Crm_DesignationsDialog.htm":"DesignationsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_DesignationsDialog_SplitDesignations","summary":"\r\n            Set the designations grid rows starting with the first row and distribute the amount evenly\r\n            if specified.\r\n            ","param":[{"_":"Table where each TableRow corresponds to a grid row's values.\r\n            A TableRow is a mapping of the column captions to a single row's desired values","name":"designations"},{"_":"Flag indicating whether to split the designations evenly","name":"evenly"}],"params":{"syntax":{"C#":"public static void SplitDesignations(\n\tTable designations,\n\tbool evenly\n)","VB":"Public Shared Sub SplitDesignations ( \n\tdesignations As Table,\n\tevenly As Boolean\n)","C++":"public:\nstatic void SplitDesignations(\n\tTable^ designations, \n\tbool evenly\n)"},"arguments":{"designations":{"type":"Table","description":"Table where each TableRow corresponds to a grid row&apos;s values.\n            A TableRow is a mapping of the column captions to a single row&apos;s desired values"},"evenly":{"type":"SystemBoolean","description":"Flag indicating whether to split the designations evenly"}},"type":" TableTable where each TableRow corresponds to a grid row's values.\n            A TableRow is a mapping of the column captions to a single row's desired valuesevenly","references":{"T_Blueshirt_Core_Crm_DesignationsDialog.htm":"DesignationsDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_EventDialog","summary":"\r\n            Class to handle the interactions for adding/editing an event dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmEventDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The EventDialog type exposes the following members.","constructors":{"EventDialog":{"value":"Initializes a new instance of the EventDialog class","description":"Initializes a new instance of the EventDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetFields":{"value":"\n            Set the fields to their desired values.\n            ","description":"\n            Set the fields to their desired values.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_EventDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_EventDialog.htm":"EventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_EventDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_EventDialog.htm":"EventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventDialog_SetFields","summary":"\r\n            Set the fields to their desired values.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_EventDialog.htm":"EventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PledgeDialog","summary":"\r\n            Class to handle the interactions for adding/editing pledge dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmPledgeDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PledgeDialog type exposes the following members.","constructors":{"PledgeDialog":{"value":"Initializes a new instance of the PledgeDialog class","description":"Initializes a new instance of the PledgeDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"EditInstallmentDesignations":{"value":"\n            Click the 'Edit installment designations' button and load the associated dialog.\n            ","description":"\n            Click the 'Edit installment designations' button and load the associated dialog.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetAccountSystem":{"value":"\n            Set the account system of the pledge.\n            ","description":"\n            Set the account system of the pledge.\n            "},"SetFields(TableRow)":{"value":"\n            Set the fields to their desired values\n            ","description":"\n            Set the fields to their desired values\n            "},"SetFields(TableRow, IDictionaryAddLanguageSpecificTextSet(\"LST96512ADF_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LST96512ADF_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set the fields to their desired values\n            ","description":"\n            Set the fields to their desired values\n            "},"SplitDesignationsEvenly":{"value":"\n            Split pledge evenly among the provided designations.\n            ","description":"\n            Split pledge evenly among the provided designations.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PledgeDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PledgeDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeDialog_SplitDesignationsEvenly","summary":"\r\n            Split pledge evenly among the provided designations.\r\n            ","param":{"_":"Table where each row represents a designation to add.  \r\n            A row is a mapping of the 'Split designations' grid's column captions to the row's values.","name":"designations"},"params":{"syntax":{"C#":"public static void SplitDesignationsEvenly(\n\tTable designations\n)","VB":"Public Shared Sub SplitDesignationsEvenly ( \n\tdesignations As Table\n)","C++":"public:\nstatic void SplitDesignationsEvenly(\n\tTable^ designations\n)"},"arguments":{"designations":{"type":"Table","description":"Table where each row represents a designation to add.  \n            A row is a mapping of the &apos;Split designations&apos; grid&apos;s column captions to the row&apos;s values."}},"type":" TableTable where each row represents a designation to add.  \n            A row is a mapping of the 'Split designations' grid's column captions to the row's values.","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeDialog_SetAccountSystem","summary":"\r\n            Set the account system of the pledge.\r\n            ","param":{"_":"The account system to use.","name":"system"},"params":{"syntax":{"C#":"public static void SetAccountSystem(\n\tstring system\n)","VB":"Public Shared Sub SetAccountSystem ( \n\tsystem As String\n)","C++":"public:\nstatic void SetAccountSystem(\n\tString^ system\n)"},"arguments":{"system":{"type":"SystemString","description":"The account system to use."}},"type":" The account system to use.","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeDialog_EditInstallmentDesignations","summary":"\r\n            Click the 'Edit installment designations' button and load the associated dialog.\r\n            ","params":{"syntax":{"C#":"public static void EditInstallmentDesignations()","VB":"Public Shared Sub EditInstallmentDesignations","C++":"public:\nstatic void EditInstallmentDesignations()"},"references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeDialog_SetFields","summary":"\r\n            Set the fields to their desired values\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fieldValues"},"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub SetFields ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","Overload_Blueshirt_Core_Crm_PledgeDialog_SetFields.htm":"SetFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeDialog_SetFields","summary":"\r\n            Set the fields to their desired values\r\n            ","param":[{"_":"Mapping of the field captions to their desired values","name":"fieldValues"},{"_":"Mapping of field captions to to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the supportedFields mapping can be overridden by including them in this mapping.","name":"customSupportedFields"}],"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub SetFields ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_PledgeDialog.htm":"PledgeDialog Class","Overload_Blueshirt_Core_Crm_PledgeDialog_SetFields.htm":"SetFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_Dialogs_AddMembershipProgramDialog","summary":"\r\n            Class to handle the unique fields and actions for filling out an 'Add Membership Program' dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.Crm.DialogsAddMembershipProgramDialog"},"namespace":{"N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The AddMembershipProgramDialog type exposes the following members.","constructors":{"AddMembershipProgramDialog":{"value":"Initializes a new instance of the AddMembershipProgramDialog class","description":"Initializes a new instance of the AddMembershipProgramDialog class"}},"methods":{"CheckMembershipProgramExists":{"value":"","description":""},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"CreateMembershipProgram":{"value":"","description":""},"CreateMembershipProgramAnnual":{"value":"","description":""},"CreateMembershipProgramBenefitsOptionsFormat":{"value":"","description":""},"CreateMembershipProgramDues":{"value":"","description":""},"CreateMembershipProgramDuesOptionsInstallments":{"value":"","description":""},"CreateMembershipProgramLevelName":{"value":"","description":""},"CreateMembershipProgramLevelPrice":{"value":"","description":""},"CreateMembershipProgramNext":{"value":"","description":""},"CreateMembershipProgramRenewalOptionsTerm":{"value":"","description":""},"CreateMembershipProgramReviewSave":{"value":"","description":""},"DeleteMembershipProgram":{"value":"","description":""},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXDeleteProgramLink":{"value":"","description":""},"getXProgramLink":{"value":"","description":""},"MembershipPrograms":{"value":"","description":""},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXAddMembershipButton":{"value":"","description":""},"getXAddMembershipNextButton":{"value":"","description":""},"getXBenefitsCardFormatDropDown":{"value":"","description":""},"getXDuesInstallments":{"value":"","description":""},"getXHeaderPanel":{"value":"","description":""},"getXMembershipProgramButton":{"value":"","description":""},"getXMembershipTerm":{"value":"","description":""},"getXProgramKindAnnual":{"value":"","description":""},"getXProgramLevelCurrentEdit":{"value":"","description":""},"getXProgramLevelNameHeader":{"value":"","description":""},"getXProgramLevelPriceHeader":{"value":"","description":""},"getXProgramNameField":{"value":"","description":""},"getXProgramObtainDues":{"value":"","description":""},"getXReviewSave":{"value":"","description":""},"getXYesReallyDelete":{"value":"","description":""},"ProgramLevelCurrentEditElement":{"value":"","description":""},"ProgramLevelNameHeaderElement":{"value":"","description":""},"ProgramLevelPriceHeaderElement":{"value":"","description":""},"ProgramLinkElement":{"value":"","description":""}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"T_Blueshirt_Core_Crm_BatchDialog","summary":"\r\n            Base class to handle the interactions for adding/editing a batch dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmBatchDialog","T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog.htm":"Blueshirt.Core.CrmEnhancedRevenueBatchDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BatchDialog type exposes the following members.","constructors":{"BatchDialog":{"value":"Initializes a new instance of the BatchDialog class","description":"Initializes a new instance of the BatchDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"EditConstituent":{"value":"\n            Edit the constituent for the currently selected batch row.\n            ","description":"\n            Edit the constituent for the currently selected batch row.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetColumnIndexByCaption":{"value":"\n            Get the index of the column in the batch grid.\n            ","description":"\n            Get the index of the column in the batch grid.\n            "},"GetColumnIndexById":{"value":"\n            Get the index of the column in the batch grid.\n            ","description":"\n            Get the index of the column in the batch grid.\n            "},"GetGridCellValue":{"value":"\n            Get the value of a batch grid cell.\n            ","description":"\n            Get the value of a batch grid cell.\n            "},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SaveAndClose":{"value":"\n            Click the 'Save and close' button.\n            ","description":"\n            Click the 'Save and close' button.\n            "},"SetGridCell":{"value":"\n            Set the value of a batch grid cell for a specified row.\n            ","description":"\n            Set the value of a batch grid cell for a specified row.\n            "},"SetGridRow":{"value":"\n            Set the row of a batch grid.\n            ","description":"\n            Set the row of a batch grid.\n            "},"SetGridRows":{"value":"\n            Set the rows of a batch grid starting with the first row.\n            ","description":"\n            Set the rows of a batch grid starting with the first row.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"Validate":{"value":"\n            Click the 'Validate' button and click Ok on the confirmation button.\n            ","description":"\n            Click the 'Validate' button and click Ok on the confirmation button.\n            "}},"fields":{"BatchDialogGridId":{"value":"","description":""},"BatchDialogId":{"value":"","description":""},"ColumnToBatchColumn":{"value":"\n            Maps batch grid column captions to their required values in order to set their values in rows.\n            ","description":"\n            Maps batch grid column captions to their required values in order to set their values in rows.\n            "},"getXBatchGridHeaders":{"value":"\n            Unique XPath to get the header columns TR element of a batch's grid.\n            ","description":"\n            Unique XPath to get the header columns TR element of a batch's grid.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BatchDialog_getXBatchGridHeaders","summary":"\r\n            Unique XPath to get the header columns TR element of a batch's grid.\r\n            ","params":{"syntax":{"C#":"public const string getXBatchGridHeaders","VB":"Public Const getXBatchGridHeaders As String","C++":"public:\nliteral String^ getXBatchGridHeaders"},"type":" String","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BatchDialog_ColumnToBatchColumn","summary":"\r\n            Maps batch grid column captions to their required values in order to set their values in rows.\r\n            ","params":{"syntax":{"C#":"protected static readonly Dictionary<string, CrmField> ColumnToBatchColumn","VB":"Protected Shared ReadOnly ColumnToBatchColumn As Dictionary(Of String, CrmField)","C++":"protected:\nstatic initonly Dictionary<String^, CrmField^>^ ColumnToBatchColumn"},"type":" DictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexByCaption","summary":"\r\n            Get the index of the column in the batch grid.\r\n            ","param":{"_":"The caption of the column.","name":"caption"},"returns":"The index of the TD column element within the TR headers.","params":{"syntax":{"C#":"public static int GetColumnIndexByCaption(\n\tstring caption\n)","VB":"Public Shared Function GetColumnIndexByCaption ( \n\tcaption As String\n) As Integer","C++":"public:\nstatic int GetColumnIndexByCaption(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the column."}},"return_val":{"type":" Int32","description":"The index of the TD column element within the TR headers."},"type":" The caption of the column.Return Value","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_GetColumnIndexById","summary":"\r\n            Get the index of the column in the batch grid.\r\n            ","param":{"_":"The unique id of the column.","name":"columnId"},"returns":"The index of the TD column element within the TR headers.","params":{"syntax":{"C#":"public static int GetColumnIndexById(\n\tstring columnId\n)","VB":"Public Shared Function GetColumnIndexById ( \n\tcolumnId As String\n) As Integer","C++":"public:\nstatic int GetColumnIndexById(\n\tString^ columnId\n)"},"arguments":{"columnId":{"type":"SystemString","description":"The unique id of the column."}},"return_val":{"type":" Int32","description":"The index of the TD column element within the TR headers."},"type":" The unique id of the column.Return Value","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_GetGridCellValue","summary":"\r\n            Get the value of a batch grid cell.\r\n            ","param":[{"_":"The column caption of the cell.","name":"caption"},{"_":"The row index of the cell.  The first row is index 1.","name":"row"}],"returns":"The value of the cell.","params":{"syntax":{"C#":"public static string GetGridCellValue(\n\tstring caption,\n\tint row\n)","VB":"Public Shared Function GetGridCellValue ( \n\tcaption As String,\n\trow As Integer\n) As String","C++":"public:\nstatic String^ GetGridCellValue(\n\tString^ caption, \n\tint row\n)"},"arguments":{"caption":{"type":"SystemString","description":"The column caption of the cell."},"row":{"type":"SystemInt32","description":"The row index of the cell.  The first row is index 1."}},"return_val":{"type":" String","description":"The value of the cell."},"type":" The column caption of the cell.row","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_SetGridCell","summary":"\r\n            Set the value of a batch grid cell for a specified row.\r\n            ","param":[{"_":"The caption of the column.","name":"caption"},{"_":"The desired value of the row.","name":"value"},{"_":"The index of the row.  The first row's index is 1.","name":"row"}],"params":{"syntax":{"C#":"public static void SetGridCell(\n\tstring caption,\n\tstring value,\n\tint row\n)","VB":"Public Shared Sub SetGridCell ( \n\tcaption As String,\n\tvalue As String,\n\trow As Integer\n)","C++":"public:\nstatic void SetGridCell(\n\tString^ caption, \n\tString^ value, \n\tint row\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the column."},"value":{"type":"SystemString","description":"The desired value of the row."},"row":{"type":"SystemInt32","description":"The index of the row.  The first row&apos;s index is 1."}},"type":" The caption of the column.value","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_SetGridRows","summary":"\r\n            Set the rows of a batch grid starting with the first row.\r\n            ","param":{"_":"Table where each TableRow represents a grid row to set.\r\n            A TableRow is a mapping of the batch column captions to a single row's desired values.","name":"batchRows"},"params":{"syntax":{"C#":"public static void SetGridRows(\n\tTable batchRows\n)","VB":"Public Shared Sub SetGridRows ( \n\tbatchRows As Table\n)","C++":"public:\nstatic void SetGridRows(\n\tTable^ batchRows\n)"},"arguments":{"batchRows":{"type":"Table","description":"Table where each TableRow represents a grid row to set.\n            A TableRow is a mapping of the batch column captions to a single row&apos;s desired values."}},"type":" TableTable where each TableRow represents a grid row to set.\n            A TableRow is a mapping of the batch column captions to a single row's desired values.","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_SetGridRow","summary":"\r\n            Set the row of a batch grid.\r\n            ","param":[{"_":"Mapping of the batch column captions to a single row's desired values.","name":"batchRow"},{"_":"The index of the row.  The first row starts at index 1.","name":"row"}],"params":{"syntax":{"C#":"public static void SetGridRow(\n\tTableRow batchRow,\n\tint row\n)","VB":"Public Shared Sub SetGridRow ( \n\tbatchRow As TableRow,\n\trow As Integer\n)","C++":"public:\nstatic void SetGridRow(\n\tTableRow^ batchRow, \n\tint row\n)"},"arguments":{"batchRow":{"type":"TableRow","description":"Mapping of the batch column captions to a single row&apos;s desired values."},"row":{"type":"SystemInt32","description":"The index of the row.  The first row starts at index 1."}},"type":" TableRowMapping of the batch column captions to a single row's desired values.row","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_Validate","summary":"\r\n            Click the 'Validate' button and click Ok on the confirmation button.\r\n            ","params":{"syntax":{"C#":"public static void Validate()","VB":"Public Shared Sub Validate","C++":"public:\nstatic void Validate()"},"references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_SaveAndClose","summary":"\r\n            Click the 'Save and close' button.\r\n            ","params":{"syntax":{"C#":"public static void SaveAndClose()","VB":"Public Shared Sub SaveAndClose","C++":"public:\nstatic void SaveAndClose()"},"references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchDialog_EditConstituent","summary":"\r\n            Edit the constituent for the currently selected batch row.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fieldValues"},"params":{"syntax":{"C#":"public static void EditConstituent(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub EditConstituent ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void EditConstituent(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_BatchDialog.htm":"BatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog","summary":"\r\n            Class to handle the interactions for adding/editing an enhanced revenue batch dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","T_Blueshirt_Core_Crm_BatchDialog.htm":"Blueshirt.Core.CrmBatchDialog","#":"Blueshirt.Core.CrmEnhancedRevenueBatchDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The EnhancedRevenueBatchDialog type exposes the following members.","constructors":{"EnhancedRevenueBatchDialog":{"value":"Initializes a new instance of the EnhancedRevenueBatchDialog class","description":"Initializes a new instance of the EnhancedRevenueBatchDialog class"}},"methods":{"Apply":{"value":"\n            Click 'Apply' under the Revenue tab and set the designations in the 'Apply to commitments' dialog.\n            ","description":"\n            Click 'Apply' under the Revenue tab and set the designations in the 'Apply to commitments' dialog.\n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SplitDesignations":{"value":"\n            Click the 'Split designations' button and set the desgination grid's rows.  This will\n            split the designation on the currently selected grid row.  The amount between the designations\n            will be split evenly.\n            ","description":"\n            Click the 'Split designations' button and set the desgination grid's rows.  This will\n            split the designation on the currently selected grid row.  The amount between the designations\n            will be split evenly.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"UpdateProjectedTotals":{"value":"\n            Click the 'Update projected totals' and click Ok on the confirmation button.\n            ","description":"\n            Click the 'Update projected totals' and click Ok on the confirmation button.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_UpdateProjectedTotals","summary":"\r\n            Click the 'Update projected totals' and click Ok on the confirmation button.\r\n            ","params":{"syntax":{"C#":"public static void UpdateProjectedTotals()","VB":"Public Shared Sub UpdateProjectedTotals","C++":"public:\nstatic void UpdateProjectedTotals()"},"references":{"T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog.htm":"EnhancedRevenueBatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_SplitDesignations","summary":"\r\n            Click the 'Split designations' button and set the desgination grid's rows.  This will\r\n            split the designation on the currently selected grid row.  The amount between the designations\r\n            will be split evenly.\r\n            ","param":[{"_":"Table where each row represents a designation to add.\r\n            Each row is a mapping of the column captions to the single row's desired values.","name":"designations"},{"_":"Flag indicating whether or not to split the designations evenly.","name":"evenly"}],"params":{"syntax":{"C#":"public static void SplitDesignations(\n\tTable designations,\n\tbool evenly\n)","VB":"Public Shared Sub SplitDesignations ( \n\tdesignations As Table,\n\tevenly As Boolean\n)","C++":"public:\nstatic void SplitDesignations(\n\tTable^ designations, \n\tbool evenly\n)"},"arguments":{"designations":{"type":"Table","description":"Table where each row represents a designation to add.\n            Each row is a mapping of the column captions to the single row&apos;s desired values."},"evenly":{"type":"SystemBoolean","description":"Flag indicating whether or not to split the designations evenly."}},"type":" TableTable where each row represents a designation to add.\n            Each row is a mapping of the column captions to the single row's desired values.evenly","references":{"T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog.htm":"EnhancedRevenueBatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog_Apply","summary":"\r\n            Click 'Apply' under the Revenue tab and set the designations in the 'Apply to commitments' dialog.\r\n            ","param":{"_":"Table where each row represents an application to add.\r\n            A row is a mapping of the column captions to a single row's desired values.","name":"applications"},"params":{"syntax":{"C#":"public static void Apply(\n\tTable applications\n)","VB":"Public Shared Sub Apply ( \n\tapplications As Table\n)","C++":"public:\nstatic void Apply(\n\tTable^ applications\n)"},"arguments":{"applications":{"type":"Table","description":"Table where each row represents an application to add.\n            A row is a mapping of the column captions to a single row&apos;s desired values."}},"type":" TableTable where each row represents an application to add.\n            A row is a mapping of the column captions to a single row's desired values.","references":{"T_Blueshirt_Core_Crm_EnhancedRevenueBatchDialog.htm":"EnhancedRevenueBatchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_IndividualDialog","summary":"\r\n            Class to handle the interactions for adding/editing an individual dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmIndividualDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The IndividualDialog type exposes the following members.","constructors":{"IndividualDialog":{"value":"Initializes a new instance of the IndividualDialog class","description":"Initializes a new instance of the IndividualDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"Save":{"value":"\n            Save the dialog.\n            ","description":"\n            Save the dialog.\n            "},"SetHouseholdFields":{"value":"\n            Set the fields on the 'Household' tab.\n            ","description":"\n            Set the fields on the 'Household' tab.\n            "},"SetIndividualFields(TableRow)":{"value":"\n            Set the fields on the 'Individual' tab.\n            ","description":"\n            Set the fields on the 'Individual' tab.\n            "},"SetIndividualFields(TableRow, IDictionaryAddLanguageSpecificTextSet(\"LST81CF9BDE_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, CrmFieldAddLanguageSpecificTextSet(\"LST81CF9BDE_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Set the fields on the 'Individual' tab.\n            ","description":"\n            Set the fields on the 'Individual' tab.\n            "},"SetLastName":{"value":"\n            Set the 'Last name' field.\n            ","description":"\n            Set the 'Last name' field.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_IndividualDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_IndividualDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_IndividualDialog_SetHouseholdFields","summary":"\r\n            Set the fields on the 'Household' tab.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","name":"fieldValues"},"params":{"syntax":{"C#":"public static void SetHouseholdFields(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub SetHouseholdFields ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void SetHouseholdFields(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped."}},"type":" TableRowMapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields","summary":"\r\n            Set the fields on the 'Individual' tab.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","name":"fieldValues"},"params":{"syntax":{"C#":"public static void SetIndividualFields(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub SetIndividualFields ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void SetIndividualFields(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped."}},"type":" TableRowMapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","Overload_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields.htm":"SetIndividualFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields","summary":"\r\n            Set the fields on the 'Individual' tab.\r\n            ","param":[{"_":"Mapping of the field captions to their desired values.  \r\n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","name":"fieldValues"},{"_":"Mapping of field captions to a CrmField oject encapsulating\r\n            all relevant variables.  Field in the default SupportedFields mapping can be overridden by including them in this mapping.","name":"CustomSupportedFields"}],"params":{"syntax":{"C#":"public static void SetIndividualFields(\n\tTableRow fieldValues\n)","VB":"Public Shared Sub SetIndividualFields ( \n\tfieldValues As TableRow\n)","C++":"public:\nstatic void SetIndividualFields(\n\tTableRow^ fieldValues\n)"},"arguments":{"fieldValues":{"type":"TableRow","description":"Mapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped."}},"type":" TableRowMapping of the field captions to their desired values.  \n            Empty strings will be considered values and set the field to a blank value.  Null values will be skipped.","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","Overload_Blueshirt_Core_Crm_IndividualDialog_SetIndividualFields.htm":"SetIndividualFields Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_IndividualDialog_SetLastName","summary":"\r\n            Set the 'Last name' field.\r\n            ","param":{"_":"The desired value of the field.","name":"lastName"},"params":{"syntax":{"C#":"public static void SetLastName(\n\tstring lastName\n)","VB":"Public Shared Sub SetLastName ( \n\tlastName As String\n)","C++":"public:\nstatic void SetLastName(\n\tString^ lastName\n)"},"arguments":{"lastName":{"type":"SystemString","description":"The desired value of the field."}},"type":" The desired value of the field.","references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_IndividualDialog_Save","summary":"\r\n            Save the dialog.\r\n            ","params":{"syntax":{"C#":"public static void Save()","VB":"Public Shared Sub Save","C++":"public:\nstatic void Save()"},"references":{"T_Blueshirt_Core_Crm_IndividualDialog.htm":"IndividualDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog","summary":"\r\n            Class to handle the interactions for adding/editing a marketing acknowledgement template rule dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmMarketingAcknowledgementRuleDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAcknowledgementRuleDialog type exposes the following members.","constructors":{"MarketingAcknowledgementRuleDialog":{"value":"Initializes a new instance of the MarketingAcknowledgementRuleDialog class","description":"Initializes a new instance of the MarketingAcknowledgementRuleDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"Save":{"value":"\n            Save the dialog and click 'Yes' on the subsequent confirmation dialogs.\n            ","description":"\n            Save the dialog and click 'Yes' on the subsequent confirmation dialogs.\n            "},"SetDetailsTabFields":{"value":"\n            Set the fields on the 'Details' tab of the dialog.\n            ","description":"\n            Set the fields on the 'Details' tab of the dialog.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm":"MarketingAcknowledgementRuleDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm":"MarketingAcknowledgementRuleDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_SetDetailsTabFields","summary":"\r\n            Set the fields on the 'Details' tab of the dialog.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetDetailsTabFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetDetailsTabFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetDetailsTabFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm":"MarketingAcknowledgementRuleDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog_Save","summary":"\r\n            Save the dialog and click 'Yes' on the subsequent confirmation dialogs.\r\n            ","param":{"_":"The number of expected confirmation dialogs to accept.","name":"numOfApprovedChanges"},"params":{"syntax":{"C#":"public static void Save(\n\tint numOfApprovedChanges\n)","VB":"Public Shared Sub Save ( \n\tnumOfApprovedChanges As Integer\n)","C++":"public:\nstatic void Save(\n\tint numOfApprovedChanges\n)"},"arguments":{"numOfApprovedChanges":{"type":"SystemInt32","description":"The number of expected confirmation dialogs to accept."}},"type":" The number of expected confirmation dialogs to accept.","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementRuleDialog.htm":"MarketingAcknowledgementRuleDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog","summary":"\r\n            Class to handle the interactions for adding/editing a marketing acknowledgement template dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.Crm.DialogsMarketingAcknowledgementTemplateDialog"},"namespace":{"N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAcknowledgementTemplateDialog type exposes the following members.","constructors":{"MarketingAcknowledgementTemplateDialog":{"value":"Initializes a new instance of the MarketingAcknowledgementTemplateDialog class","description":"Initializes a new instance of the MarketingAcknowledgementTemplateDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IncludeAllRecords":{"value":"\n            Select the 'Include all records' box on the 'Universe' tab.\n            ","description":"\n            Select the 'Include all records' box on the 'Universe' tab.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetActivationTabFields":{"value":"\n            Set the fields on the 'Activation' tab.\n            ","description":"\n            Set the fields on the 'Activation' tab.\n            "},"SetGeneralTabFields":{"value":"\n            Set the fields on the 'General' tab.\n            ","description":"\n            Set the fields on the 'General' tab.\n            "},"SetSourceCode":{"value":"\n            Set the 'Source code' field on the 'Source Code' tab.\n            ","description":"\n            Set the 'Source code' field on the 'Source Code' tab.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetGeneralTabFields","summary":"\r\n            Set the fields on the 'General' tab.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetGeneralTabFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetGeneralTabFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetGeneralTabFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetSourceCode","summary":"\r\n            Set the 'Source code' field on the 'Source Code' tab.\r\n            ","param":{"_":"The desired value of the field.","name":"sourceCode"},"params":{"syntax":{"C#":"public static void SetSourceCode(\n\tstring sourceCode\n)","VB":"Public Shared Sub SetSourceCode ( \n\tsourceCode As String\n)","C++":"public:\nstatic void SetSourceCode(\n\tString^ sourceCode\n)"},"arguments":{"sourceCode":{"type":"SystemString","description":"The desired value of the field."}},"type":" The desired value of the field.","references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_IncludeAllRecords","summary":"\r\n            Select the 'Include all records' box on the 'Universe' tab.\r\n            ","params":{"syntax":{"C#":"public static void IncludeAllRecords()","VB":"Public Shared Sub IncludeAllRecords","C++":"public:\nstatic void IncludeAllRecords()"},"references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog_SetActivationTabFields","summary":"\r\n            Set the fields on the 'Activation' tab.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetActivationTabFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetActivationTabFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetActivationTabFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_Dialogs_MarketingAcknowledgementTemplateDialog.htm":"MarketingAcknowledgementTemplateDialog Class","N_Blueshirt_Core_Crm_Dialogs.htm":"Blueshirt.Core.Crm.Dialogs Namespace"}}},{"name":"T_Blueshirt_Core_Crm_NewAdhocQueryDialog","summary":"\r\n            Add Ad-hoc Query Dialog functions and interactions in BBCRM.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmNewAdhocQueryDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The NewAdhocQueryDialog type exposes the following members.","constructors":{"NewAdhocQueryDialog":{"value":"Initializes a new instance of the NewAdhocQueryDialog class","description":"Initializes a new instance of the NewAdhocQueryDialog class"}},"methods":{"ApplyCriteria":{"value":"","description":""},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXCriteriaInput":{"value":"\n            Format a unique XPath for a Input on an AdHocQueryCriteriaForm on the NewAdhocQueryDialog.\n            ","description":"\n            Format a unique XPath for a Input on an AdHocQueryCriteriaForm on the NewAdhocQueryDialog.\n            "},"getXFieldResult":{"value":"\n            Get an XPath for a result field on a NewAdhocQueryDialog.\n             ","description":"\n            Get an XPath for a result field on a NewAdhocQueryDialog.\n             "},"getXSaveOptionsInput":{"value":"\n            Get an XPath for an input field on a NewAdhocQueryDialog.\n            ","description":"\n            Get an XPath for an input field on a NewAdhocQueryDialog.\n            "},"getXSaveOptionsTextArea":{"value":"\n            Get an XPath for a TextArea on a NewAdhocQueryDialog.\n            ","description":"\n            Get an XPath for a TextArea on a NewAdhocQueryDialog.\n            "},"getXTab":{"value":"\n            Format a unique XPath for a tab on the Ad-Hoc Query Dialog.\n            ","description":"\n            Format a unique XPath for a tab on the Ad-Hoc Query Dialog.\n            "},"IncludeDisplayField":{"value":"","description":""},"IncludeRecordCriteria":{"value":"","description":""},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetFindField":{"value":"","description":""},"SetSaveOptions":{"value":"\n            Set the values on the 'Set save options' tab\n            ","description":"\n            Set the values on the 'Set save options' tab\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXAddFilterArrow":{"value":"\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\n            ","description":"\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\n            "},"getXAddOutputFieldArrow":{"value":"\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\n            ","description":"\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\n            "},"getXFindField":{"value":"\n            Constant XPath for the 'Find' Field of an NewAdhocQueryDialog.\n            ","description":"\n            Constant XPath for the 'Find' Field of an NewAdhocQueryDialog.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsInput","summary":"\r\n            Get an XPath for an input field on a NewAdhocQueryDialog.\r\n            ","param":{"_":"The Id of the input field.","name":"inputId"},"params":{"syntax":{"C#":"public static string getXSaveOptionsInput(\n\tstring inputId\n)","VB":"Public Shared Function getXSaveOptionsInput ( \n\tinputId As String\n) As String","C++":"public:\nstatic String^ getXSaveOptionsInput(\n\tString^ inputId\n)"},"arguments":{"inputId":{"type":"SystemString","description":"The Id of the input field."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXSaveOptionsInput(System.String)\"]"},"type":" The Id of the input field.Return Value","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXSaveOptionsTextArea","summary":"\r\n            Get an XPath for a TextArea on a NewAdhocQueryDialog.\r\n            ","param":{"_":"The id of the TextArea.","name":"AreaId"},"params":{"syntax":{"C#":"public static string getXSaveOptionsTextArea(\n\tstring AreaId\n)","VB":"Public Shared Function getXSaveOptionsTextArea ( \n\tAreaId As String\n) As String","C++":"public:\nstatic String^ getXSaveOptionsTextArea(\n\tString^ AreaId\n)"},"arguments":{"AreaId":{"type":"SystemString","description":"The id of the TextArea."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXSaveOptionsTextArea(System.String)\"]"},"type":" The id of the TextArea.Return Value","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFindField","summary":"\r\n            Constant XPath for the 'Find' Field of an NewAdhocQueryDialog.\r\n            ","params":{"syntax":{"C#":"public static string getXFindField","VB":"Public Shared getXFindField As String","C++":"public:\nstatic String^ getXFindField"},"type":" String","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXFieldResult","summary":"\r\n            Get an XPath for a result field on a NewAdhocQueryDialog.\r\n             ","param":{"_":"The text of the Result Field.","name":"text"},"params":{"syntax":{"C#":"public static string getXFieldResult(\n\tstring text\n)","VB":"Public Shared Function getXFieldResult ( \n\ttext As String\n) As String","C++":"public:\nstatic String^ getXFieldResult(\n\tString^ text\n)"},"arguments":{"text":{"type":"SystemString","description":"The text of the Result Field."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXFieldResult(System.String)\"]"},"type":" The text of the Result Field.Return Value","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXCriteriaInput","summary":"\r\n            Format a unique XPath for a Input on an AdHocQueryCriteriaForm on the NewAdhocQueryDialog.\r\n            ","param":{"_":"The ID of the input.","name":"inputId"},"params":{"syntax":{"C#":"protected static string getXCriteriaInput(\n\tstring inputId\n)","VB":"Protected Shared Function getXCriteriaInput ( \n\tinputId As String\n) As String","C++":"protected:\nstatic String^ getXCriteriaInput(\n\tString^ inputId\n)"},"arguments":{"inputId":{"type":"SystemString","description":"The ID of the input."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXCriteriaInput(System.String)\"]"},"type":" The ID of the input.Return Value","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddFilterArrow","summary":"\r\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\r\n            ","params":{"syntax":{"C#":"protected static string getXAddFilterArrow","VB":"Protected Shared getXAddFilterArrow As String","C++":"protected:\nstatic String^ getXAddFilterArrow"},"type":" String","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXAddOutputFieldArrow","summary":"\r\n            Constant XPath for the Add Filter Arrow on a NewAdhocQueryDialog.\r\n            ","params":{"syntax":{"C#":"protected static string getXAddOutputFieldArrow","VB":"Protected Shared getXAddOutputFieldArrow As String","C++":"protected:\nstatic String^ getXAddOutputFieldArrow"},"type":" String","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_getXTab","summary":"\r\n            Format a unique XPath for a tab on the Ad-Hoc Query Dialog.\r\n            ","param":{"_":"The caption of the tab.","name":"tabCaption"},"params":{"syntax":{"C#":"protected static string getXTab(\n\tstring tabCaption\n)","VB":"Protected Shared Function getXTab ( \n\ttabCaption As String\n) As String","C++":"protected:\nstatic String^ getXTab(\n\tString^ tabCaption\n)"},"arguments":{"tabCaption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.NewAdhocQueryDialog.getXTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_NewAdhocQueryDialog_SetSaveOptions","summary":"\r\n            Set the values on the 'Set save options' tab\r\n            ","param":{"_":"Dictionary mapping of the field captions to their desired values","name":"options"},"params":{"syntax":{"C#":"public static void SetSaveOptions(\n\tTable options\n)","VB":"Public Shared Sub SetSaveOptions ( \n\toptions As Table\n)","C++":"public:\nstatic void SetSaveOptions(\n\tTable^ options\n)"},"arguments":{"options":{"type":"Table","description":"Dictionary mapping of the field captions to their desired values"}},"type":" TableDictionary mapping of the field captions to their desired values","references":{"T_Blueshirt_Core_Crm_NewAdhocQueryDialog.htm":"NewAdhocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PackageDialog","summary":"\r\n            Class to handle the interactions for adding/editing a package dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmPackageDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PackageDialog type exposes the following members.","constructors":{"PackageDialog":{"value":"Initializes a new instance of the PackageDialog class","description":"Initializes a new instance of the PackageDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetFields":{"value":"\n            Set the field values.\n            ","description":"\n            Set the field values.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PackageDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_PackageDialog.htm":"PackageDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PackageDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_PackageDialog.htm":"PackageDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PackageDialog_SetFields","summary":"\r\n            Set the field values.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_PackageDialog.htm":"PackageDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PaymentDialog","summary":"\r\n            Class to handle the interactions for adding/editing a payment dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmPaymentDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PaymentDialog type exposes the following members.","constructors":{"PaymentDialog":{"value":"Initializes a new instance of the PaymentDialog class","description":"Initializes a new instance of the PaymentDialog class"}},"methods":{"AddApplication":{"value":"\n            Add an application to the payment.\n            ","description":"\n            Add an application to the payment.\n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetFields":{"value":"\n            Set the fields to their desired values.\n            ","description":"\n            Set the fields to their desired values.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PaymentDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_PaymentDialog.htm":"PaymentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PaymentDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_PaymentDialog.htm":"PaymentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PaymentDialog_ApplicationToAddButtonId","summary":"\r\n            Mapping of the 'Application' dropdown options to their 'Add' button id.\r\n            "},{"name":"M_Blueshirt_Core_Crm_PaymentDialog_SetFields","summary":"\r\n            Set the fields to their desired values.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_PaymentDialog.htm":"PaymentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PaymentDialog_AddApplication","summary":"\r\n            Add an application to the payment.\r\n            ","param":{"_":"Mapping of the field captions to their desired values in the various application types.","name":"application"},"params":{"syntax":{"C#":"public static void AddApplication(\n\tTableRow application\n)","VB":"Public Shared Sub AddApplication ( \n\tapplication As TableRow\n)","C++":"public:\nstatic void AddApplication(\n\tTableRow^ application\n)"},"arguments":{"application":{"type":"TableRow","description":"Mapping of the field captions to their desired values in the various application types."}},"type":" TableRowMapping of the field captions to their desired values in the various application types.","references":{"T_Blueshirt_Core_Crm_PaymentDialog.htm":"PaymentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MajorGivingPlanDialog","summary":"\r\n            Class to handle the interactions for adding/editing a major giving plan dialog\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmMajorGivingPlanDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MajorGivingPlanDialog type exposes the following members.","constructors":{"MajorGivingPlanDialog":{"value":"Initializes a new instance of the MajorGivingPlanDialog class","description":"Initializes a new instance of the MajorGivingPlanDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"InsertStep":{"value":"\n            Select a row and insert a new step above it.\n            ","description":"\n            Select a row and insert a new step above it.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"Save":{"value":"\n            Save the dialog.\n            ","description":"\n            Save the dialog.\n            "},"SelectStepRow":{"value":"\n            Select a row in the Steps grid.\n            ","description":"\n            Select a row in the Steps grid.\n            "},"SetDetails":{"value":"\n            The fields on the Details tab of the dialog.\n            ","description":"\n            The fields on the Details tab of the dialog.\n            "},"SetOutline":{"value":"\n            Set the plan outline.\n            ","description":"\n            Set the plan outline.\n            "},"SetParticipants":{"value":"\n            Set the participants grid values.\n            Starts with the first row.\n            ","description":"\n            Set the participants grid values.\n            Starts with the first row.\n            "},"SetPlanStartDate":{"value":"\n            Set the 'Start date' of the plan.\n            ","description":"\n            Set the 'Start date' of the plan.\n            "},"SetPrimaryManagerStartDate":{"value":"\n            Set the 'Start date' of the primary manager.\n            ","description":"\n            Set the 'Start date' of the primary manager.\n            "},"SetSecondaryManagerStartDate":{"value":"\n            Set the 'Start date' of the secondary manager.\n            ","description":"\n            Set the 'Start date' of the secondary manager.\n            "},"SetStepRow":{"value":"\n            Set a step row's values.\n            ","description":"\n            Set a step row's values.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"AddDialogId":{"value":"","description":""},"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_MajorGivingPlanDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_MajorGivingPlanDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPlanStartDate","summary":"\r\n            Set the 'Start date' of the plan.\r\n            ","param":{"_":"The date to set the 'Start date' to.","name":"startDate"},"params":{"syntax":{"C#":"public static void SetPlanStartDate(\n\tstring startDate\n)","VB":"Public Shared Sub SetPlanStartDate ( \n\tstartDate As String\n)","C++":"public:\nstatic void SetPlanStartDate(\n\tString^ startDate\n)"},"arguments":{"startDate":{"type":"SystemString","description":"The date to set the &apos;Start date&apos; to."}},"type":" The date to set the 'Start date' to.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetPrimaryManagerStartDate","summary":"\r\n            Set the 'Start date' of the primary manager.\r\n            ","param":{"_":"The date to set the 'Start date' to.","name":"startDate"},"params":{"syntax":{"C#":"public static void SetPrimaryManagerStartDate(\n\tstring startDate\n)","VB":"Public Shared Sub SetPrimaryManagerStartDate ( \n\tstartDate As String\n)","C++":"public:\nstatic void SetPrimaryManagerStartDate(\n\tString^ startDate\n)"},"arguments":{"startDate":{"type":"SystemString","description":"The date to set the &apos;Start date&apos; to."}},"type":" The date to set the 'Start date' to.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetSecondaryManagerStartDate","summary":"\r\n            Set the 'Start date' of the secondary manager.\r\n            ","param":{"_":"The date to set the 'Start date' to.","name":"startDate"},"params":{"syntax":{"C#":"public static void SetSecondaryManagerStartDate(\n\tstring startDate\n)","VB":"Public Shared Sub SetSecondaryManagerStartDate ( \n\tstartDate As String\n)","C++":"public:\nstatic void SetSecondaryManagerStartDate(\n\tString^ startDate\n)"},"arguments":{"startDate":{"type":"SystemString","description":"The date to set the &apos;Start date&apos; to."}},"type":" The date to set the 'Start date' to.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetDetails","summary":"\r\n            The fields on the Details tab of the dialog.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"details"},"params":{"syntax":{"C#":"public static void SetDetails(\n\tTableRow details\n)","VB":"Public Shared Sub SetDetails ( \n\tdetails As TableRow\n)","C++":"public:\nstatic void SetDetails(\n\tTableRow^ details\n)"},"arguments":{"details":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetParticipants","summary":"\r\n            Set the participants grid values.\r\n            Starts with the first row.\r\n            ","param":{"_":"Table where each row represents a participant to add.\r\n            A row is a mapping of the column captions to a single row's values.","name":"participants"},"params":{"syntax":{"C#":"public static void SetParticipants(\n\tTable participants\n)","VB":"Public Shared Sub SetParticipants ( \n\tparticipants As Table\n)","C++":"public:\nstatic void SetParticipants(\n\tTable^ participants\n)"},"arguments":{"participants":{"type":"Table","description":"Table where each row represents a participant to add.\n            A row is a mapping of the column captions to a single row&apos;s values."}},"type":" TableTable where each row represents a participant to add.\n            A row is a mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetOutline","summary":"\r\n            Set the plan outline.\r\n            ","param":{"_":"The type of outline to use.","name":"outline"},"params":{"syntax":{"C#":"public static void SetOutline(\n\tstring outline\n)","VB":"Public Shared Sub SetOutline ( \n\toutline As String\n)","C++":"public:\nstatic void SetOutline(\n\tString^ outline\n)"},"arguments":{"outline":{"type":"SystemString","description":"The type of outline to use."}},"type":" The type of outline to use.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SelectStepRow","summary":"\r\n            Select a row in the Steps grid.\r\n            ","param":{"_":"The index of the row to select.  The first row's index is 1.","name":"index"},"params":{"syntax":{"C#":"public static void SelectStepRow(\n\tint index\n)","VB":"Public Shared Sub SelectStepRow ( \n\tindex As Integer\n)","C++":"public:\nstatic void SelectStepRow(\n\tint index\n)"},"arguments":{"index":{"type":"SystemInt32","description":"The index of the row to select.  The first row&apos;s index is 1."}},"type":" The index of the row to select.  The first row's index is 1.","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetStepRow","summary":"\r\n            Set a step row's values.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"step"},{"_":"The index of the row.  The first row's index is 1.","name":"index"}],"params":{"syntax":{"C#":"public static void SetStepRow(\n\tTableRow step,\n\tint index\n)","VB":"Public Shared Sub SetStepRow ( \n\tstep As TableRow,\n\tindex As Integer\n)","C++":"public:\nstatic void SetStepRow(\n\tTableRow^ step, \n\tint index\n)"},"arguments":{"step":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."},"index":{"type":"SystemInt32","description":"The index of the row.  The first row&apos;s index is 1."}},"type":" TableRowMapping of the column captions to a single row's values.index","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_InsertStep","summary":"\r\n            Select a row and insert a new step above it.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"step"},{"_":"The index of the row to select before inserting.  The first row's index is 1.","name":"index"}],"params":{"syntax":{"C#":"public static void InsertStep(\n\tTableRow step,\n\tint index\n)","VB":"Public Shared Sub InsertStep ( \n\tstep As TableRow,\n\tindex As Integer\n)","C++":"public:\nstatic void InsertStep(\n\tTableRow^ step, \n\tint index\n)"},"arguments":{"step":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."},"index":{"type":"SystemInt32","description":"The index of the row to select before inserting.  The first row&apos;s index is 1."}},"type":" TableRowMapping of the column captions to a single row's values.index","references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_Save","summary":"\r\n            Save the dialog.\r\n            ","params":{"syntax":{"C#":"public static void Save()","VB":"Public Shared Sub Save","C++":"public:\nstatic void Save()"},"references":{"T_Blueshirt_Core_Crm_MajorGivingPlanDialog.htm":"MajorGivingPlanDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingPlanDialog_SetAddProspectPlanStartDate","summary":"\r\n            Set the 'Start date' of the 'Add prospect plan' dialog.  For whatever reason this requires custom logic\r\n            from the default SetField.  Tab over or clicking on the input does NOT change its class to contain the\r\n            focused attribute value.  This means it just continues trying to click the field and never sending it a value.\r\n            \r\n            If you unfocus from the web browser to another application at any point in this attempt, the field magically starts \r\n            to work and the focus attribute does get added from a click.  I believe this is an underlying product bug that is only\r\n            discoverable through automation via a selenium change of field focus.  Stepping through the default setfield implementation. \r\n            causes it to work.  Manually executing the steps shows all the expected element attribute changes when inspecting the field.\r\n            ","param":[{"_":"The XPath to find an element for setting the value to.","name":"xPath"},{"_":"The desired value of the element.","name":"value"}]},{"name":"T_Blueshirt_Core_Crm_QuerySourceViewDialog","summary":"\r\n            Base object for QuerySourceViewDialog functionality and interactions in BBCRM.  Inherits the Dialog base class.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmQuerySourceViewDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The QuerySourceViewDialog type exposes the following members.","constructors":{"QuerySourceViewDialog":{"value":"Initializes a new instance of the QuerySourceViewDialog class","description":"Initializes a new instance of the QuerySourceViewDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXRecordTypeNameColumn":{"value":"\n            Returns an XPath for the Name column of a QuerySourceViewDialog.\n            \n            ","description":"\n            Returns an XPath for the Name column of a QuerySourceViewDialog.\n            \n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SelectRecordTypeName":{"value":"\n            Select the record Type on a QuerySourceViewDialog\n            ","description":"\n            Select the record Type on a QuerySourceViewDialog\n            "},"SetRecordType":{"value":"\n            Set the record Type on a QuerySourceViewDialog.\n            ","description":"\n            Set the record Type on a QuerySourceViewDialog.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXRecordTypeField":{"value":"\n            Constant XPath for the Record Field of a QuerySourceViewDialog.\n            ","description":"\n            Constant XPath for the Record Field of a QuerySourceViewDialog.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeField","summary":"\r\n            Constant XPath for the Record Field of a QuerySourceViewDialog.\r\n            ","params":{"syntax":{"C#":"public const string getXRecordTypeField","VB":"Public Const getXRecordTypeField As String","C++":"public:\nliteral String^ getXRecordTypeField"},"type":" String","references":{"T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm":"QuerySourceViewDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_QuerySourceViewDialog_getXRecordTypeNameColumn","summary":"\r\n            Returns an XPath for the Name column of a QuerySourceViewDialog.\r\n            \r\n            ","param":{"_":"The Name of the Column.","name":"name"},"params":{"syntax":{"C#":"public static string getXRecordTypeNameColumn(\n\tstring name\n)","VB":"Public Shared Function getXRecordTypeNameColumn ( \n\tname As String\n) As String","C++":"public:\nstatic String^ getXRecordTypeNameColumn(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The Name of the Column."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.QuerySourceViewDialog.getXRecordTypeNameColumn(System.String)\"]"},"type":" The Name of the Column.Return Value","references":{"T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm":"QuerySourceViewDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_QuerySourceViewDialog_SetRecordType","summary":"\r\n            Set the record Type on a QuerySourceViewDialog.\r\n            ","param":{"_":"The type to select.","name":"type"},"params":{"syntax":{"C#":"public static void SetRecordType(\n\tstring type\n)","VB":"Public Shared Sub SetRecordType ( \n\ttype As String\n)","C++":"public:\nstatic void SetRecordType(\n\tString^ type\n)"},"arguments":{"type":{"type":"SystemString","description":"The type to select."}},"type":" The type to select.","references":{"T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm":"QuerySourceViewDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_QuerySourceViewDialog_SelectRecordTypeName","summary":"\r\n            Select the record Type on a QuerySourceViewDialog\r\n            ","param":{"_":"The type to be selected.","name":"type"},"params":{"syntax":{"C#":"public static void SelectRecordTypeName(\n\tstring type\n)","VB":"Public Shared Sub SelectRecordTypeName ( \n\ttype As String\n)","C++":"public:\nstatic void SelectRecordTypeName(\n\tString^ type\n)"},"arguments":{"type":{"type":"SystemString","description":"The type to be selected."}},"type":" The type to be selected.","references":{"T_Blueshirt_Core_Crm_QuerySourceViewDialog.htm":"QuerySourceViewDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_RegistrantDialog","summary":"\r\n            Class to handle the interactions for adding/editing an event registrant dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmRegistrantDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The RegistrantDialog type exposes the following members.","constructors":{"RegistrantDialog":{"value":"Initializes a new instance of the RegistrantDialog class","description":"Initializes a new instance of the RegistrantDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetRegistrant":{"value":"\n            Set the registrant.\n            ","description":"\n            Set the registrant.\n            "},"SetRegistrants":{"value":"\n            Set the registrants and registration options in the registration grid.\n            ","description":"\n            Set the registrants and registration options in the registration grid.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_RegistrantDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_RegistrantDialog.htm":"RegistrantDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_RegistrantDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_RegistrantDialog.htm":"RegistrantDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrant","summary":"\r\n            Set the registrant.\r\n            ","param":{"name":"registrant"},"params":{"syntax":{"C#":"public static void SetRegistrant(\n\tstring registrant\n)","VB":"Public Shared Sub SetRegistrant ( \n\tregistrant As String\n)","C++":"public:\nstatic void SetRegistrant(\n\tString^ registrant\n)"},"arguments":{"registrant":{"type":"SystemString[Missing <param name=\"registrant\"/> documentation for \"M:Blueshirt.Core.Crm.RegistrantDialog.SetRegistrant(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;registrant&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Crm.RegistrantDialog.SetRegistrant(System.String)&quot;]</p>"}},"type":" [Missing <param name=\"registrant\"/> documentation for \"M:Blueshirt.Core.Crm.RegistrantDialog.SetRegistrant(System.String)\"]","references":{"T_Blueshirt_Core_Crm_RegistrantDialog.htm":"RegistrantDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RegistrantDialog_SetRegistrants","summary":"\r\n            Set the registrants and registration options in the registration grid.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"registrants"},"params":{"syntax":{"C#":"public static void SetRegistrants(\n\tTable registrants\n)","VB":"Public Shared Sub SetRegistrants ( \n\tregistrants As Table\n)","C++":"public:\nstatic void SetRegistrants(\n\tTable^ registrants\n)"},"arguments":{"registrants":{"type":"Table","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" TableMapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_RegistrantDialog.htm":"RegistrantDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_SegmentDialog","summary":"\r\n            Class to handle the interactions for adding/editing a segment dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmSegmentDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The SegmentDialog type exposes the following members.","constructors":{"SegmentDialog":{"value":"Initializes a new instance of the SegmentDialog class","description":"Initializes a new instance of the SegmentDialog class"}},"methods":{"AddSelection":{"value":"\n            Add a marketing selection to the segment.\n            ","description":"\n            Add a marketing selection to the segment.\n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetDetailsFields":{"value":"\n            Set the fields on the 'Details' tab.\n            ","description":"\n            Set the fields on the 'Details' tab.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SegmentDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_SegmentDialog.htm":"SegmentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SegmentDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_SegmentDialog.htm":"SegmentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentDialog_SetDetailsFields","summary":"\r\n            Set the fields on the 'Details' tab.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetDetailsFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetDetailsFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetDetailsFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_SegmentDialog.htm":"SegmentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentDialog_AddSelection","summary":"\r\n            Add a marketing selection to the segment.\r\n            ","param":{"_":"The selection to add.","name":"selection"},"params":{"syntax":{"C#":"public static void AddSelection(\n\tstring selection\n)","VB":"Public Shared Sub AddSelection ( \n\tselection As String\n)","C++":"public:\nstatic void AddSelection(\n\tString^ selection\n)"},"arguments":{"selection":{"type":"SystemString","description":"The selection to add."}},"type":" The selection to add.","references":{"T_Blueshirt_Core_Crm_SegmentDialog.htm":"SegmentDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_SearchDialog","summary":"\r\n            Base class to handle the interactions for search dialogs.  Inherits the Dialog base class.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmSearchDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The SearchDialog type exposes the following members.","constructors":{"SearchDialog":{"value":"Initializes a new instance of the SearchDialog class","description":"Initializes a new instance of the SearchDialog class"}},"methods":{"CheckConstituentSearchResultsContain":{"value":"\n            Checks that the search results contain the specified string on a SearchDialog.\n            Throws an exception on failure.\n            \n            ","description":"\n            Checks that the search results contain the specified string on a SearchDialog.\n            Throws an exception on failure.\n            \n            "},"CheckConstituentSearchResultsToolbarContains":{"value":"\n            Checks that the search results tool bar message contains the specified string on a SearchDialog.\n            Throws an exception on failure.\n            \n            ","description":"\n            Checks that the search results tool bar message contains the specified string on a SearchDialog.\n            Throws an exception on failure.\n            \n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"Search":{"value":"\n            Press search on the SearchDialog.\n            ","description":"\n            Press search on the SearchDialog.\n            "},"Select":{"value":"\n            Click the 'Select' button\n            ","description":"\n            Click the 'Select' button\n            "},"SelectFirstResult":{"value":"\n            Select the first result returned.\n            If no results are returned, Cancel is clicked and an Exception is thrown.\n            ","description":"\n            Select the first result returned.\n            If no results are returned, Cancel is clicked and an Exception is thrown.\n            "},"SetFirstNameToSearch":{"value":"\n            Sets the value of the First Name search field.\n            ","description":"\n            Sets the value of the First Name search field.\n            "},"SetLastNameToSearch":{"value":"\n            Sets the value of the Last Name search field.\n            ","description":"\n            Sets the value of the Last Name search field.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXFirstNameField":{"value":"\n            Returns an Xpath for the FirstName Field on a SerachDialog.\n            ","description":"\n            Returns an Xpath for the FirstName Field on a SerachDialog.\n            "},"getXGridNameField":{"value":"\n            Returns an Xpath for the Grid Name Field on a SerachDialog.\n            ","description":"\n            Returns an Xpath for the Grid Name Field on a SerachDialog.\n            "},"getXLastNameField":{"value":"\n            Returns an Xpath for the LastName Field on a SerachDialog.\n            ","description":"\n            Returns an Xpath for the LastName Field on a SerachDialog.\n            "},"getXNoRecordsFound":{"value":"\n            Constant XPath value for checking if no search results were found on a search dialog.\n            ","description":"\n            Constant XPath value for checking if no search results were found on a search dialog.\n            "},"getXResultsBar":{"value":"\n            Returns an Xpath for the Results Tool bar on a SerachDialog.\n            ","description":"\n            Returns an Xpath for the Results Tool bar on a SerachDialog.\n            "},"getXSearchButton":{"value":"\n            Constant XPath value for finding a Search button WebElement.\n            ","description":"\n            Constant XPath value for finding a Search button WebElement.\n            "},"getXSearchResultsGrid":{"value":"\n            Returns an Xpath for the Search Results Grid on a SerachDialog.\n            ","description":"\n            Returns an Xpath for the Search Results Grid on a SerachDialog.\n            "},"getXSelectButton":{"value":"\n            Constant XPath value for finding a Select button WebElement.\n            ","description":"\n            Constant XPath value for finding a Select button WebElement.\n            "},"getXSelectedResultsRow":{"value":"\n            ConstantXPath value for finding a search dialog's selected row in the results pane.\n            ","description":"\n            ConstantXPath value for finding a search dialog's selected row in the results pane.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXFirstNameField","summary":"\r\n            Returns an Xpath for the FirstName Field on a SerachDialog.\r\n            ","params":{"syntax":{"C#":"public const string getXFirstNameField","VB":"Public Const getXFirstNameField As String","C++":"public:\nliteral String^ getXFirstNameField"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXResultsBar","summary":"\r\n            Returns an Xpath for the Results Tool bar on a SerachDialog.\r\n            ","params":{"syntax":{"C#":"public const string getXResultsBar","VB":"Public Const getXResultsBar As String","C++":"public:\nliteral String^ getXResultsBar"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXLastNameField","summary":"\r\n            Returns an Xpath for the LastName Field on a SerachDialog.\r\n            ","params":{"syntax":{"C#":"public const string getXLastNameField","VB":"Public Const getXLastNameField As String","C++":"public:\nliteral String^ getXLastNameField"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXGridNameField","summary":"\r\n            Returns an Xpath for the Grid Name Field on a SerachDialog.\r\n            ","params":{"syntax":{"C#":"public const string getXGridNameField","VB":"Public Const getXGridNameField As String","C++":"public:\nliteral String^ getXGridNameField"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXSelectedResultsRow","summary":"\r\n            ConstantXPath value for finding a search dialog's selected row in the results pane.\r\n            ","params":{"syntax":{"C#":"public const string getXSelectedResultsRow","VB":"Public Const getXSelectedResultsRow As String","C++":"public:\nliteral String^ getXSelectedResultsRow"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXNoRecordsFound","summary":"\r\n            Constant XPath value for checking if no search results were found on a search dialog.\r\n            ","params":{"syntax":{"C#":"public const string getXNoRecordsFound","VB":"Public Const getXNoRecordsFound As String","C++":"public:\nliteral String^ getXNoRecordsFound"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXSearchButton","summary":"\r\n            Constant XPath value for finding a Search button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXSearchButton","VB":"Public Const getXSearchButton As String","C++":"public:\nliteral String^ getXSearchButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXSelectButton","summary":"\r\n            Constant XPath value for finding a Select button WebElement.\r\n            ","params":{"syntax":{"C#":"public const string getXSelectButton","VB":"Public Const getXSelectButton As String","C++":"public:\nliteral String^ getXSelectButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_SearchDialog_getXSearchResultsGrid","summary":"\r\n            Returns an Xpath for the Search Results Grid on a SerachDialog.\r\n            ","params":{"syntax":{"C#":"protected static string getXSearchResultsGrid","VB":"Protected Shared getXSearchResultsGrid As String","C++":"protected:\nstatic String^ getXSearchResultsGrid"},"type":" String","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_Search","summary":"\r\n            Press search on the SearchDialog.\r\n            ","params":{"syntax":{"C#":"public static void Search()","VB":"Public Shared Sub Search","C++":"public:\nstatic void Search()"},"references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_Select","summary":"\r\n            Click the 'Select' button\r\n            ","params":{"syntax":{"C#":"public static void Select()","VB":"Public Shared Sub Select","C++":"public:\nstatic void Select()"},"references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsToolbarContains","summary":"\r\n            Checks that the search results tool bar message contains the specified string on a SearchDialog.\r\n            Throws an exception on failure.\r\n            \r\n            ","param":{"_":"The string to check for.","name":"expected"},"params":{"syntax":{"C#":"public static void CheckConstituentSearchResultsToolbarContains(\n\tstring expected\n)","VB":"Public Shared Sub CheckConstituentSearchResultsToolbarContains ( \n\texpected As String\n)","C++":"public:\nstatic void CheckConstituentSearchResultsToolbarContains(\n\tString^ expected\n)"},"arguments":{"expected":{"type":"SystemString","description":"The string to check for."}},"type":" The string to check for.","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_SetFirstNameToSearch","summary":"\r\n            Sets the value of the First Name search field.\r\n            ","param":{"_":"The text to set.","name":"name"},"params":{"syntax":{"C#":"public static void SetFirstNameToSearch(\n\tstring name\n)","VB":"Public Shared Sub SetFirstNameToSearch ( \n\tname As String\n)","C++":"public:\nstatic void SetFirstNameToSearch(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The text to set."}},"type":" The text to set.","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_SetLastNameToSearch","summary":"\r\n            Sets the value of the Last Name search field.\r\n            ","param":{"_":"The text to set.","name":"name"},"params":{"syntax":{"C#":"public static void SetLastNameToSearch(\n\tstring name\n)","VB":"Public Shared Sub SetLastNameToSearch ( \n\tname As String\n)","C++":"public:\nstatic void SetLastNameToSearch(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The text to set."}},"type":" The text to set.","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_SelectFirstResult","summary":"\r\n            Select the first result returned.\r\n            If no results are returned, Cancel is clicked and an Exception is thrown.\r\n            ","params":{"syntax":{"C#":"public static void SelectFirstResult()","VB":"Public Shared Sub SelectFirstResult","C++":"public:\nstatic void SelectFirstResult()"},"references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SearchDialog_CheckConstituentSearchResultsContain","summary":"\r\n            Checks that the search results contain the specified string on a SearchDialog.\r\n            Throws an exception on failure.\r\n            \r\n            ","param":{"_":"The string to check for.","name":"expected"},"params":{"syntax":{"C#":"public static void CheckConstituentSearchResultsContain(\n\tstring expected\n)","VB":"Public Shared Sub CheckConstituentSearchResultsContain ( \n\texpected As String\n)","C++":"public:\nstatic void CheckConstituentSearchResultsContain(\n\tString^ expected\n)"},"arguments":{"expected":{"type":"SystemString","description":"The string to check for."}},"type":" The string to check for.","references":{"T_Blueshirt_Core_Crm_SearchDialog.htm":"SearchDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_AdHocQueryDialog","summary":"\r\n            Class to handle the interactions for adding/editing an ad-hoc query dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmAdHocQueryDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The AdHocQueryDialog type exposes the following members.","constructors":{"AdHocQueryDialog":{"value":"Initializes a new instance of the AdHocQueryDialog class","description":"Initializes a new instance of the AdHocQueryDialog class"}},"methods":{"AddFilterField":{"value":"\n            Select a field and add it as a filter field uing the provided criteria.\n            ","description":"\n            Select a field and add it as a filter field uing the provided criteria.\n            "},"AddOutputField":{"value":"\n            Select a field and add it as an output field to display.\n            ","description":"\n            Select a field and add it as an output field to display.\n            "},"ApplyCriteria":{"value":"\n            Set the fields on the apply criteria dialog that appears when adding a filter field.\n            ","description":"\n            Set the fields on the apply criteria dialog that appears when adding a filter field.\n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"ExpandNode":{"value":"\n            Expand a tree node if it is collapsed.\n            ","description":"\n            Expand a tree node if it is collapsed.\n            "},"FilterBy":{"value":"\n            Select a filter category in the 'Browse for fields in' panel\n            ","description":"\n            Select a filter category in the 'Browse for fields in' panel\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SaveAndClose":{"value":"\n            Click the 'Save and close' button\n            ","description":"\n            Click the 'Save and close' button\n            "},"SetSaveOptions":{"value":"\n            Set the values on the 'Set save options' tab\n            ","description":"\n            Set the values on the 'Set save options' tab\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_AdHocQueryDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_AdHocQueryDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_ExpandNode","summary":"\r\n            Expand a tree node if it is collapsed.\r\n            ","params":{"syntax":{"C#":"public static void ExpandNode(\n\tstring xPath\n)","VB":"Public Shared Sub ExpandNode ( \n\txPath As String\n)","C++":"public:\nstatic void ExpandNode(\n\tString^ xPath\n)"},"arguments":{"xPath":{"type":"SystemString[Missing <param name=\"xPath\"/> documentation for \"M:Blueshirt.Core.Crm.AdHocQueryDialog.ExpandNode(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;xPath&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Crm.AdHocQueryDialog.ExpandNode(System.String)&quot;]</p>"}},"type":" [Missing <param name=\"xPath\"/> documentation for \"M:Blueshirt.Core.Crm.AdHocQueryDialog.ExpandNode(System.String)\"]","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_FilterBy","summary":"\r\n            Select a filter category in the 'Browse for fields in' panel\r\n            ","param":{"_":"The complete filter path.  Nested filters should be provided as a complete\r\n            path (i.e. 'Revenue\\Constituent\\Spouse'","name":"filter"},"params":{"syntax":{"C#":"public static void FilterBy(\n\tstring filter\n)","VB":"Public Shared Sub FilterBy ( \n\tfilter As String\n)","C++":"public:\nstatic void FilterBy(\n\tString^ filter\n)"},"arguments":{"filter":{"type":"SystemString","description":"The complete filter path.  Nested filters should be provided as a complete\n            path (i.e. &apos;Revenue\\Constituent\\Spouse&apos;"}},"type":" The complete filter path.  Nested filters should be provided as a complete\n            path (i.e. 'Revenue\\Constituent\\Spouse'","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_ApplyCriteria","summary":"\r\n            Set the fields on the apply criteria dialog that appears when adding a filter field.\r\n            ","param":{"_":"Mapping of the unique field ids to their desired values.","name":"criteria"},"params":{"syntax":{"C#":"public static void ApplyCriteria(\n\tTableRow criteria\n)","VB":"Public Shared Sub ApplyCriteria ( \n\tcriteria As TableRow\n)","C++":"public:\nstatic void ApplyCriteria(\n\tTableRow^ criteria\n)"},"arguments":{"criteria":{"type":"TableRow","description":"Mapping of the unique field ids to their desired values."}},"type":" TableRowMapping of the unique field ids to their desired values.","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_AddFilterField","summary":"\r\n            Select a field and add it as a filter field uing the provided criteria.\r\n            ","param":[{"_":"The field to add.","name":"fieldCaption"},{"_":"Mapping of the unique field ids to their desired values for the criteria dialog.","name":"criteria"}],"params":{"syntax":{"C#":"public static void AddFilterField(\n\tstring fieldCaption,\n\tTableRow criteria\n)","VB":"Public Shared Sub AddFilterField ( \n\tfieldCaption As String,\n\tcriteria As TableRow\n)","C++":"public:\nstatic void AddFilterField(\n\tString^ fieldCaption, \n\tTableRow^ criteria\n)"},"arguments":{"fieldCaption":{"type":"SystemString","description":"The field to add."},"criteria":{"type":"TableRow","description":"Mapping of the unique field ids to their desired values for the criteria dialog."}},"type":" The field to add.criteria","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_AddOutputField","summary":"\r\n            Select a field and add it as an output field to display.\r\n            ","param":{"_":"The field to add.","name":"fieldCaption"},"params":{"syntax":{"C#":"public static void AddOutputField(\n\tstring fieldCaption\n)","VB":"Public Shared Sub AddOutputField ( \n\tfieldCaption As String\n)","C++":"public:\nstatic void AddOutputField(\n\tString^ fieldCaption\n)"},"arguments":{"fieldCaption":{"type":"SystemString","description":"The field to add."}},"type":" The field to add.","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_SetSaveOptions","summary":"\r\n            Set the values on the 'Set save options' tab\r\n            ","param":{"_":"Dictionary mapping of the field captions to their desired values","name":"options"},"params":{"syntax":{"C#":"public static void SetSaveOptions(\n\tTableRow options\n)","VB":"Public Shared Sub SetSaveOptions ( \n\toptions As TableRow\n)","C++":"public:\nstatic void SetSaveOptions(\n\tTableRow^ options\n)"},"arguments":{"options":{"type":"TableRow","description":"Dictionary mapping of the field captions to their desired values"}},"type":" TableRowDictionary mapping of the field captions to their desired values","references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryDialog_SaveAndClose","summary":"\r\n            Click the 'Save and close' button\r\n            ","params":{"syntax":{"C#":"public static void SaveAndClose()","VB":"Public Shared Sub SaveAndClose","C++":"public:\nstatic void SaveAndClose()"},"references":{"T_Blueshirt_Core_Crm_AdHocQueryDialog.htm":"AdHocQueryDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MultiLevelEventDialog","summary":"\r\n            Class to handle the interactions for adding/editing an add a multi-level event dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmMultiLevelEventDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MultiLevelEventDialog type exposes the following members.","constructors":{"MultiLevelEventDialog":{"value":"Initializes a new instance of the MultiLevelEventDialog class","description":"Initializes a new instance of the MultiLevelEventDialog class"}},"methods":{"AddChildEvent":{"value":"\n            Add an event to the multi-level event as a child to a specified event\n            already added to the multi-level event.\n            ","description":"\n            Add an event to the multi-level event as a child to a specified event\n            already added to the multi-level event.\n            "},"AddExistingEvent":{"value":"\n            Add an event to the multi-level event.  If an event if currently selected in\n            the hierachy, then the new event will be added a child to the selected event.\n            ","description":"\n            Add an event to the multi-level event.  If an event if currently selected in\n            the hierachy, then the new event will be added a child to the selected event.\n            "},"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"CopyFrom":{"value":"\n            Select a parent event to add a new child event to.  The child event will be copied from an existing event.\n            ","description":"\n            Select a parent event to add a new child event to.  The child event will be copied from an existing event.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXAddedEvent":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetTemplate":{"value":"\n            Set the 'Event management template' dropdown.\n            ","description":"\n            Set the 'Event management template' dropdown.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_MultiLevelEventDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiLevelEventDialog_getXAddedEvent","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static string getXAddedEvent(\n\tstring existingEvent\n)","VB":"Protected Shared Function getXAddedEvent ( \n\texistingEvent As String\n) As String","C++":"protected:\nstatic String^ getXAddedEvent(\n\tString^ existingEvent\n)"},"arguments":{"existingEvent":{"type":"SystemString[Missing <param name=\"existingEvent\"/> documentation for \"M:Blueshirt.Core.Crm.MultiLevelEventDialog.getXAddedEvent(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;existingEvent&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Crm.MultiLevelEventDialog.getXAddedEvent(System.String)&quot;]</p>"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.MultiLevelEventDialog.getXAddedEvent(System.String)\"]"},"type":" [Missing <param name=\"existingEvent\"/> documentation for \"M:Blueshirt.Core.Crm.MultiLevelEventDialog.getXAddedEvent(System.String)\"]Return Value","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiLevelEventDialog_SetTemplate","summary":"\r\n            Set the 'Event management template' dropdown.\r\n            ","param":{"_":"The name of the template to set.","name":"templateName"},"params":{"syntax":{"C#":"public static void SetTemplate(\n\tstring templateName\n)","VB":"Public Shared Sub SetTemplate ( \n\ttemplateName As String\n)","C++":"public:\nstatic void SetTemplate(\n\tString^ templateName\n)"},"arguments":{"templateName":{"type":"SystemString","description":"The name of the template to set."}},"type":" The name of the template to set.","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddExistingEvent","summary":"\r\n            Add an event to the multi-level event.  If an event if currently selected in\r\n            the hierachy, then the new event will be added a child to the selected event.\r\n            ","param":{"_":"The name of the event to add.","name":"eventName"},"params":{"syntax":{"C#":"public static void AddExistingEvent(\n\tstring eventName\n)","VB":"Public Shared Sub AddExistingEvent ( \n\teventName As String\n)","C++":"public:\nstatic void AddExistingEvent(\n\tString^ eventName\n)"},"arguments":{"eventName":{"type":"SystemString","description":"The name of the event to add."}},"type":" The name of the event to add.","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiLevelEventDialog_AddChildEvent","summary":"\r\n            Add an event to the multi-level event as a child to a specified event\r\n            already added to the multi-level event.\r\n            ","param":[{"_":"The name of the event to add.","name":"eventName"},{"_":"The name of the parent event.","name":"parentEventName"}],"params":{"syntax":{"C#":"public static void AddChildEvent(\n\tstring eventName,\n\tstring parentEventName\n)","VB":"Public Shared Sub AddChildEvent ( \n\teventName As String,\n\tparentEventName As String\n)","C++":"public:\nstatic void AddChildEvent(\n\tString^ eventName, \n\tString^ parentEventName\n)"},"arguments":{"eventName":{"type":"SystemString","description":"The name of the event to add."},"parentEventName":{"type":"SystemString","description":"The name of the parent event."}},"type":" The name of the event to add.parentEventName","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiLevelEventDialog_CopyFrom","summary":"\r\n            Select a parent event to add a new child event to.  The child event will be copied from an existing event.\r\n            ","param":[{"_":"The name of the event to copy.","name":"copyFromEventName"},{"_":"The name of the parent event to add the new event as a child to.","name":"parentEventName"},{"_":"The name to set for the new event.","name":"newEventName"}],"params":{"syntax":{"C#":"public static void CopyFrom(\n\tstring copyFromEventName,\n\tstring parentEventName,\n\tstring newEventName\n)","VB":"Public Shared Sub CopyFrom ( \n\tcopyFromEventName As String,\n\tparentEventName As String,\n\tnewEventName As String\n)","C++":"public:\nstatic void CopyFrom(\n\tString^ copyFromEventName, \n\tString^ parentEventName, \n\tString^ newEventName\n)"},"arguments":{"copyFromEventName":{"type":"SystemString","description":"The name of the event to copy."},"parentEventName":{"type":"SystemString","description":"The name of the parent event to add the new event as a child to."},"newEventName":{"type":"SystemString","description":"The name to set for the new event."}},"type":" The name of the event to copy.parentEventName","references":{"T_Blueshirt_Core_Crm_MultiLevelEventDialog.htm":"MultiLevelEventDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_TaskDialog","summary":"\r\n            Class to handle the interactions for adding/editing a task dialog.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Dialog.htm":"Blueshirt.Core.CrmDialog","#":"Blueshirt.Core.CrmTaskDialog"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The TaskDialog type exposes the following members.","constructors":{"TaskDialog":{"value":"Initializes a new instance of the TaskDialog class","description":"Initializes a new instance of the TaskDialog class"}},"methods":{"CloseDialog":{"value":" (Inherited from Dialog.)","description":" (Inherited from Dialog.)"},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SetFields":{"value":"\n            Set the fields to their desired values.\n            ","description":"\n            Set the fields to their desired values.\n            "},"SetReminders":{"value":"\n            Set the reminders or the task.  Always starts at the first row, replacing whatever\n            existing rows might exist.\n            ","description":"\n            Set the reminders or the task.  Always starts at the first row, replacing whatever\n            existing rows might exist.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DialogIds":{"value":"\n            Static list of supported unique dialog id.\n            ","description":"\n            Static list of supported unique dialog id.\n            "},"SupportedFields":{"value":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "},"SupportedRemindersGridFields":{"value":"\n            Static mapping of supported Grid column captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            ","description":"\n            Static mapping of supported Grid column captions to CrmField objects encapsulating all relevant variables\n            needed to set the field's value.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_TaskDialog_DialogIds","summary":"\r\n            Static list of supported unique dialog id.\r\n            ","params":{"syntax":{"C#":"protected static readonly string[] DialogIds","VB":"Protected Shared ReadOnly DialogIds As String()","C++":"protected:\nstatic initonly array<String^>^ DialogIds"},"type":" String","references":{"T_Blueshirt_Core_Crm_TaskDialog.htm":"TaskDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_TaskDialog_SupportedFields","summary":"\r\n            Static mapping of supported field captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedFields","VB":"Protected Shared ReadOnly SupportedFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_TaskDialog.htm":"TaskDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_TaskDialog_SupportedRemindersGridFields","summary":"\r\n            Static mapping of supported Grid column captions to CrmField objects encapsulating all relevant variables\r\n            needed to set the field's value.\r\n            ","params":{"syntax":{"C#":"protected static readonly IDictionary<string, CrmField> SupportedRemindersGridFields","VB":"Protected Shared ReadOnly SupportedRemindersGridFields As IDictionary(Of String, CrmField)","C++":"protected:\nstatic initonly IDictionary<String^, CrmField^>^ SupportedRemindersGridFields"},"type":" IDictionaryString, CrmField","references":{"T_Blueshirt_Core_Crm_TaskDialog.htm":"TaskDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_TaskDialog_SetFields","summary":"\r\n            Set the fields to their desired values.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"fields"},"params":{"syntax":{"C#":"public static void SetFields(\n\tTableRow fields\n)","VB":"Public Shared Sub SetFields ( \n\tfields As TableRow\n)","C++":"public:\nstatic void SetFields(\n\tTableRow^ fields\n)"},"arguments":{"fields":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_TaskDialog.htm":"TaskDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_TaskDialog_SetReminders","summary":"\r\n            Set the reminders or the task.  Always starts at the first row, replacing whatever\r\n            existing rows might exist.\r\n            ","param":{"_":"Table where each row represents a reminder to add.  \r\n            A row is a mapping of the 'Reminders' grid's column captions to the row's values.  ","name":"reminders"},"params":{"syntax":{"C#":"public static void SetReminders(\n\tTable reminders\n)","VB":"Public Shared Sub SetReminders ( \n\treminders As Table\n)","C++":"public:\nstatic void SetReminders(\n\tTable^ reminders\n)"},"arguments":{"reminders":{"type":"Table","description":"Table where each row represents a reminder to add.  \n            A row is a mapping of the &apos;Reminders&apos; grid&apos;s column captions to the row&apos;s values.  "}},"type":" TableTable where each row represents a reminder to add.  \n            A row is a mapping of the 'Reminders' grid's column captions to the row's values.  ","references":{"T_Blueshirt_Core_Crm_TaskDialog.htm":"TaskDialog Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_AnalysisFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Analysis' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmAnalysisFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The AnalysisFunctionalArea type exposes the following members.","constructors":{"AnalysisFunctionalArea":{"value":"Initializes a new instance of the AnalysisFunctionalArea class","description":"Initializes a new instance of the AnalysisFunctionalArea class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"InformationLibrary":{"value":"\n            Navigate to the 'Information Library' Panel\n            ","description":"\n            Navigate to the 'Information Library' Panel\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenQueryPanel":{"value":"\n            TODO - THIS IS A CUSTOMIZATION IMPLEMENTATION FOR BHF AND SHOULD BE MOVED TO THEIR TEST SOLUTION\n            ","description":"\n            TODO - THIS IS A CUSTOMIZATION IMPLEMENTATION FOR BHF AND SHOULD BE MOVED TO THEIR TEST SOLUTION\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_FunctionalArea","summary":"\r\n            Utility methods for operations on a functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","#":"Blueshirt.Core.CrmFunctionalArea","T_Blueshirt_Core_Crm_AnalysisFunctionalArea.htm":"Blueshirt.Core.CrmAnalysisFunctionalArea","T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm":"Blueshirt.Core.CrmConstituentsFunctionalArea","T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"Blueshirt.Core.CrmEventsFunctionalArea","T_Blueshirt_Core_Crm_FundraisingFunctionalArea.htm":"Blueshirt.Core.CrmFundraisingFunctionalArea","T_Blueshirt_Core_Crm_HomeFunctionalArea.htm":"Blueshirt.Core.CrmHomeFunctionalArea","T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm":"Blueshirt.Core.CrmMarketingAndCommFunctionalArea","T_Blueshirt_Core_Crm_ProspectsFunctionalArea.htm":"Blueshirt.Core.CrmProspectsFunctionalArea","T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"Blueshirt.Core.CrmRevenueFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The FunctionalArea type exposes the following members.","constructors":{"FunctionalArea":{"value":"Initializes a new instance of the FunctionalArea class","description":"Initializes a new instance of the FunctionalArea class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXAddMenu":{"value":"\n            Formats an XPath to handle an Add menu.  \n            ","description":"\n            Formats an XPath to handle an Add menu.  \n            "},"getXFaLink":{"value":"\n            Returns an Xpath for a Functional Area link.\n            ","description":"\n            Returns an Xpath for a Functional Area link.\n            "},"getXFunctionalAreaTask(String)":{"value":"\n            Formats an XPath for finding a task on a functional area page\n            using the task link's caption.\n            ","description":"\n            Formats an XPath for finding a task on a functional area page\n            using the task link's caption.\n            "},"getXFunctionalAreaTask(String, String)":{"value":"\n            Formats the unique XPath for finding a task on a functional area page\n            using the grouping caption and task caption.\n            ","description":"\n            Formats the unique XPath for finding a task on a functional area page\n            using the grouping caption and task caption.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenLink(String)":{"value":"\n            Click on the functional area link.\n            ","description":"\n            Click on the functional area link.\n            "},"OpenLink(String, String)":{"value":"\n            Click on the functional area link.\n            ","description":"\n            Click on the functional area link.\n            "},"OpenLinkToPanel":{"value":"\n            Click on the functional area link that navigates to a panel.\n            ","description":"\n            Click on the functional area link that navigates to a panel.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_getXFaLink","summary":"\r\n            Returns an Xpath for a Functional Area link.\r\n            ","param":{"_":"The Link text to use.","name":"linkText"},"returns":"","params":{"syntax":{"C#":"public static string getXFaLink(\n\tstring linkText\n)","VB":"Public Shared Function getXFaLink ( \n\tlinkText As String\n) As String","C++":"public:\nstatic String^ getXFaLink(\n\tString^ linkText\n)"},"arguments":{"linkText":{"type":"SystemString","description":"The Link text to use."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.FunctionalArea.getXFaLink(System.String)\"]"},"type":" The Link text to use.Return Value","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_getXAddMenu","summary":"\r\n            Formats an XPath to handle an Add menu.  \r\n            ","param":[{"_":"The unique ID in the HTML Table element's id. i.e. 'ADDNEWGROUP'","name":"addId"},{"_":"The caption of the add menu.  Defaults to 'Add new'","name":"caption"}],"params":{"syntax":{"C#":"public static string getXAddMenu(\n\tstring addId,\n\tstring caption = \"Add new\"\n)","VB":"Public Shared Function getXAddMenu ( \n\taddId As String,\n\tOptional caption As String = \"Add new\"\n) As String","C++":"public:\nstatic String^ getXAddMenu(\n\tString^ addId, \n\tString^ caption = L\"Add new\"\n)"},"arguments":{"addId":{"type":"SystemString","description":"The unique ID in the HTML Table element&apos;s id. i.e. &apos;ADDNEWGROUP&apos;"},"caption":{"type":"SystemString","description":"The caption of the add menu.  Defaults to &apos;Add new&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.FunctionalArea.getXAddMenu(System.String,System.String)\"]"},"type":" The unique ID in the HTML Table element's id. i.e. 'ADDNEWGROUP'caption (Optional)","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask","summary":"\r\n            Formats the unique XPath for finding a task on a functional area page\r\n            using the grouping caption and task caption.\r\n            ","param":[{"_":"The caption of the Grouping header that the task belongs to.","name":"groupCaption"},{"_":"The name of the task to interact with.","name":"taskName"}],"params":{"syntax":{"C#":"public static string getXFunctionalAreaTask(\n\tstring taskName\n)","VB":"Public Shared Function getXFunctionalAreaTask ( \n\ttaskName As String\n) As String","C++":"public:\nstatic String^ getXFunctionalAreaTask(\n\tString^ taskName\n)"},"arguments":{"taskName":{"type":"SystemString","description":"The name/caption of the task."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.FunctionalArea.getXFunctionalAreaTask(System.String)\"]"},"type":" The name/caption of the task.Return Value","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","Overload_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask.htm":"getXFunctionalAreaTask Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask","summary":"\r\n            Formats an XPath for finding a task on a functional area page\r\n            using the task link's caption.\r\n            ","param":{"_":"The name/caption of the task.","name":"taskName"},"params":{"syntax":{"C#":"public static string getXFunctionalAreaTask(\n\tstring taskName\n)","VB":"Public Shared Function getXFunctionalAreaTask ( \n\ttaskName As String\n) As String","C++":"public:\nstatic String^ getXFunctionalAreaTask(\n\tString^ taskName\n)"},"arguments":{"taskName":{"type":"SystemString","description":"The name/caption of the task."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.FunctionalArea.getXFunctionalAreaTask(System.String)\"]"},"type":" The name/caption of the task.Return Value","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","Overload_Blueshirt_Core_Crm_FunctionalArea_getXFunctionalAreaTask.htm":"getXFunctionalAreaTask Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_OpenLink","summary":"\r\n            Click on the functional area link.\r\n            ","param":{"_":"The caption of the task link.","name":"caption"},"params":{"syntax":{"C#":"public static void OpenLink(\n\tstring caption\n)","VB":"Public Shared Sub OpenLink ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenLink(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the task link."}},"type":" The caption of the task link.","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","Overload_Blueshirt_Core_Crm_FunctionalArea_OpenLink.htm":"OpenLink Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FunctionalArea_OpenLink","summary":"\r\n            Click on the functional area link.\r\n            ","param":[{"_":"The group header caption of the task.","name":"groupCaption"},{"_":"The caption of the task link.","name":"linkCaption"}],"params":{"syntax":{"C#":"public static void OpenLink(\n\tstring caption\n)","VB":"Public Shared Sub OpenLink ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenLink(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the task link."}},"type":" The caption of the task link.","references":{"T_Blueshirt_Core_Crm_FunctionalArea.htm":"FunctionalArea Class","Overload_Blueshirt_Core_Crm_FunctionalArea_OpenLink.htm":"OpenLink Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AnalysisFunctionalArea_OpenQueryPanel","summary":"\r\n            TODO - THIS IS A CUSTOMIZATION IMPLEMENTATION FOR BHF AND SHOULD BE MOVED TO THEIR TEST SOLUTION\r\n            ","params":{"syntax":{"C#":"public static void OpenQueryPanel()","VB":"Public Shared Sub OpenQueryPanel","C++":"public:\nstatic void OpenQueryPanel()"},"references":{"T_Blueshirt_Core_Crm_AnalysisFunctionalArea.htm":"AnalysisFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AnalysisFunctionalArea_InformationLibrary","summary":"\r\n            Navigate to the 'Information Library' Panel\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Information library\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Information library\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void InformationLibrary(\n\tstring groupCaption = \"Information library\",\n\tstring taskCaption = \"Information library\"\n)","VB":"Public Shared Sub InformationLibrary ( \n\tOptional groupCaption As String = \"Information library\",\n\tOptional taskCaption As String = \"Information library\"\n)","C++":"public:\nstatic void InformationLibrary(\n\tString^ groupCaption = L\"Information library\", \n\tString^ taskCaption = L\"Information library\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Information library&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Information library&quot;."}},"type":" The group header caption of the task.  Defaults to \"Information library\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_AnalysisFunctionalArea.htm":"AnalysisFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_ConstituentsFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Constituents' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmConstituentsFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The ConstituentsFunctionalArea type exposes the following members.","constructors":{"ConstituentsFunctionalArea":{"value":"Initializes a new instance of the ConstituentsFunctionalArea class","description":"Initializes a new instance of the ConstituentsFunctionalArea class"}},"methods":{"AddAnIndividual(String, String)":{"value":"\n            Open the dialog to add an individual.\n            ","description":"\n            Open the dialog to add an individual.\n            "},"AddAnIndividual(TableRow, String, String)":{"value":"\n            Open the dialog to add an individual, set the fields to the provided values, and save.\n            ","description":"\n            Open the dialog to add an individual, set the fields to the provided values, and save.\n            "},"ConstituentExists":{"value":"\n            Determine if at least a single matching constituent can be found based on the provided\n            search field value and select it.  Selects the first returned result, or cancels the search \n            dialog if no results are found.\n            ","description":"\n            Determine if at least a single matching constituent can be found based on the provided\n            search field value and select it.  Selects the first returned result, or cancels the search \n            dialog if no results are found.\n            "},"ConstituentSearch":{"value":"\n            Search for a constituent and navigate to the first returned result.  An Exception is thrown if\n            no results are found.\n            ","description":"\n            Search for a constituent and navigate to the first returned result.  An Exception is thrown if\n            no results are found.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenConstituentSearchDialog":{"value":"","description":""},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentExists","summary":"\r\n            Determine if at least a single matching constituent can be found based on the provided\r\n            search field value and select it.  Selects the first returned result, or cancels the search \r\n            dialog if no results are found.\r\n            ","param":[{"_":"The desired value of the search criteria field.","name":"fieldValue"},{"_":"The group header caption of the task.  Defaults to \"Constituents\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Constituent search\".","name":"taskCaption"},{"_":"The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"ConstituentSearchbyNameorLookupID\".","name":"dialogId"},{"_":"The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"KEYNAME\".","name":"fieldId"}],"returns":"True if at least one matching element is found, false otherwise.","params":{"syntax":{"C#":"public static bool ConstituentExists(\n\tstring fieldValue,\n\tstring groupCaption = \"Constituents\",\n\tstring taskCaption = \"Constituent search\",\n\tstring dialogId = \"ConstituentSearchbyNameorLookupID\",\n\tstring fieldId = \"KEYNAME\"\n)","VB":"Public Shared Function ConstituentExists ( \n\tfieldValue As String,\n\tOptional groupCaption As String = \"Constituents\",\n\tOptional taskCaption As String = \"Constituent search\",\n\tOptional dialogId As String = \"ConstituentSearchbyNameorLookupID\",\n\tOptional fieldId As String = \"KEYNAME\"\n) As Boolean","C++":"public:\nstatic bool ConstituentExists(\n\tString^ fieldValue, \n\tString^ groupCaption = L\"Constituents\", \n\tString^ taskCaption = L\"Constituent search\", \n\tString^ dialogId = L\"ConstituentSearchbyNameorLookupID\", \n\tString^ fieldId = L\"KEYNAME\"\n)"},"arguments":{"fieldValue":{"type":"SystemString","description":"The desired value of the search criteria field."},"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Constituents&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Constituent search&quot;."},"dialogId":{"type":"SystemString","description":"The unique id of the search dialog.  i.e. &apos;UniversityofOxfordConstituentSearch&apos;  \n            Defaults to &quot;ConstituentSearchbyNameorLookupID&quot;."},"fieldId":{"type":"SystemString","description":"The unique id of the search dialog field.  i.e. &apos;LOOKUPID&apos;  Defaults to &quot;KEYNAME&quot;."}},"return_val":{"type":" Boolean","description":"True if at least one matching element is found, false otherwise."},"type":" The desired value of the search criteria field.groupCaption (Optional)","references":{"T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm":"ConstituentsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual","summary":"\r\n            Open the dialog to add an individual.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Individuals and households\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Add an individual\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void AddAnIndividual(\n\tstring groupCaption = \"Individuals and households\",\n\tstring taskCaption = \"Add an individual\"\n)","VB":"Public Shared Sub AddAnIndividual ( \n\tOptional groupCaption As String = \"Individuals and households\",\n\tOptional taskCaption As String = \"Add an individual\"\n)","C++":"public:\nstatic void AddAnIndividual(\n\tString^ groupCaption = L\"Individuals and households\", \n\tString^ taskCaption = L\"Add an individual\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Individuals and households&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Add an individual&quot;."}},"type":" The group header caption of the task.  Defaults to \"Individuals and households\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm":"ConstituentsFunctionalArea Class","Overload_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual.htm":"AddAnIndividual Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual","summary":"\r\n            Open the dialog to add an individual, set the fields to the provided values, and save.\r\n            ","param":[{"_":"Mapping of the 'Add an individual' dialog's field captions to their desired values.","name":"individual"},{"_":"The group header caption of the task.  Defaults to \"Individuals and households\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Add an individual\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void AddAnIndividual(\n\tstring groupCaption = \"Individuals and households\",\n\tstring taskCaption = \"Add an individual\"\n)","VB":"Public Shared Sub AddAnIndividual ( \n\tOptional groupCaption As String = \"Individuals and households\",\n\tOptional taskCaption As String = \"Add an individual\"\n)","C++":"public:\nstatic void AddAnIndividual(\n\tString^ groupCaption = L\"Individuals and households\", \n\tString^ taskCaption = L\"Add an individual\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Individuals and households&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Add an individual&quot;."}},"type":" The group header caption of the task.  Defaults to \"Individuals and households\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm":"ConstituentsFunctionalArea Class","Overload_Blueshirt_Core_Crm_ConstituentsFunctionalArea_AddAnIndividual.htm":"AddAnIndividual Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentsFunctionalArea_ConstituentSearch","summary":"\r\n            Search for a constituent and navigate to the first returned result.  An Exception is thrown if\r\n            no results are found.\r\n            ","param":[{"_":"The desired value of the search criteria field.","name":"fieldValue"},{"_":"The group header caption of the task.  Defaults to \"Constituents\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Constituent search\".","name":"taskCaption"},{"_":"The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"ConstituentSearchbyNameorLookupID\".","name":"dialogId"},{"_":"The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"KEYNAME\".","name":"fieldId"}],"params":{"syntax":{"C#":"public static void ConstituentSearch(\n\tstring fieldValue,\n\tstring groupCaption = \"Constituents\",\n\tstring taskCaption = \"Constituent search\",\n\tstring dialogId = \"ConstituentSearchbyNameorLookupID\",\n\tstring fieldId = \"KEYNAME\"\n)","VB":"Public Shared Sub ConstituentSearch ( \n\tfieldValue As String,\n\tOptional groupCaption As String = \"Constituents\",\n\tOptional taskCaption As String = \"Constituent search\",\n\tOptional dialogId As String = \"ConstituentSearchbyNameorLookupID\",\n\tOptional fieldId As String = \"KEYNAME\"\n)","C++":"public:\nstatic void ConstituentSearch(\n\tString^ fieldValue, \n\tString^ groupCaption = L\"Constituents\", \n\tString^ taskCaption = L\"Constituent search\", \n\tString^ dialogId = L\"ConstituentSearchbyNameorLookupID\", \n\tString^ fieldId = L\"KEYNAME\"\n)"},"arguments":{"fieldValue":{"type":"SystemString","description":"The desired value of the search criteria field."},"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Constituents&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Constituent search&quot;."},"dialogId":{"type":"SystemString","description":"The unique id of the search dialog.  i.e. &apos;UniversityofOxfordConstituentSearch&apos;  \n            Defaults to &quot;ConstituentSearchbyNameorLookupID&quot;."},"fieldId":{"type":"SystemString","description":"The unique id of the search dialog field.  i.e. &apos;LOOKUPID&apos;  Defaults to &quot;KEYNAME&quot;."}},"type":" The desired value of the search criteria field.groupCaption (Optional)","references":{"T_Blueshirt_Core_Crm_ConstituentsFunctionalArea.htm":"ConstituentsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_EventsFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Events' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmEventsFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The EventsFunctionalArea type exposes the following members.","constructors":{"EventsFunctionalArea":{"value":"Initializes a new instance of the EventsFunctionalArea class","description":"Initializes a new instance of the EventsFunctionalArea class"}},"methods":{"AddEventAddLanguageSpecificTextSet(\"LSTB473993A_4?cs=()|vb=|cpp=()|nu=()|fs=()\");":{"value":"\n            Open the dialog to add an event.\n            ","description":"\n            Open the dialog to add an event.\n            "},"AddEvent(TableRow)":{"value":"\n            Open the dialog to add an event, set the fields to their desired values, and save.\n            ","description":"\n            Open the dialog to add an event, set the fields to their desired values, and save.\n            "},"AddMultiEvent":{"value":"\n            Open the dialog for adding a 'Multi-level event'.\n            ","description":"\n            Open the dialog for adding a 'Multi-level event'.\n            "},"CollapseCalendar":{"value":"\n            Collapse the Event Calendar if it is expanded and wait for the collapse to complete.\n            ","description":"\n            Collapse the Event Calendar if it is expanded and wait for the collapse to complete.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"EventManagementTemplates":{"value":"\n            Navigate to the 'Event Management Templates' panel.\n            ","description":"\n            Navigate to the 'Event Management Templates' panel.\n            "},"EventSearch":{"value":"\n            Search for an event and select the first matching record.\n            ","description":"\n            Search for an event and select the first matching record.\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"Locations":{"value":"\n            Navigate to the 'Locations' panel.\n            ","description":"\n            Navigate to the 'Locations' panel.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent","summary":"\r\n            Open the dialog to add an event.\r\n            ","params":{"syntax":{"C#":"public static void AddEvent()","VB":"Public Shared Sub AddEvent","C++":"public:\nstatic void AddEvent()"},"references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","Overload_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent.htm":"AddEvent Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent","summary":"\r\n            Open the dialog to add an event, set the fields to their desired values, and save.\r\n            ","param":{"_":"Dictionary mapping field caption keys to their values.","name":"eventValue"},"params":{"syntax":{"C#":"public static void AddEvent()","VB":"Public Shared Sub AddEvent","C++":"public:\nstatic void AddEvent()"},"references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","Overload_Blueshirt_Core_Crm_EventsFunctionalArea_AddEvent.htm":"AddEvent Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_AddMultiEvent","summary":"\r\n            Open the dialog for adding a 'Multi-level event'.\r\n            ","params":{"syntax":{"C#":"public static void AddMultiEvent()","VB":"Public Shared Sub AddMultiEvent","C++":"public:\nstatic void AddMultiEvent()"},"references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_EventSearch","summary":"\r\n            Search for an event and select the first matching record.\r\n            ","param":[{"_":"The desired value of the search criteria field.","name":"fieldValue"},{"_":"The group header caption of the task.  Defaults to \"Fundraising events\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Event search\".","name":"taskCaption"},{"_":"The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"EventSearch\".","name":"dialogId"},{"_":"The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"NAME\".","name":"fieldId"}],"params":{"syntax":{"C#":"public static void EventSearch(\n\tstring fieldValue,\n\tstring groupCaption = \"Fundraising events\",\n\tstring taskCaption = \"Event search\",\n\tstring dialogId = \"EventSearch\",\n\tstring fieldId = \"NAME\"\n)","VB":"Public Shared Sub EventSearch ( \n\tfieldValue As String,\n\tOptional groupCaption As String = \"Fundraising events\",\n\tOptional taskCaption As String = \"Event search\",\n\tOptional dialogId As String = \"EventSearch\",\n\tOptional fieldId As String = \"NAME\"\n)","C++":"public:\nstatic void EventSearch(\n\tString^ fieldValue, \n\tString^ groupCaption = L\"Fundraising events\", \n\tString^ taskCaption = L\"Event search\", \n\tString^ dialogId = L\"EventSearch\", \n\tString^ fieldId = L\"NAME\"\n)"},"arguments":{"fieldValue":{"type":"SystemString","description":"The desired value of the search criteria field."},"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Fundraising events&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Event search&quot;."},"dialogId":{"type":"SystemString","description":"The unique id of the search dialog.  i.e. &apos;UniversityofOxfordConstituentSearch&apos;  \n            Defaults to &quot;EventSearch&quot;."},"fieldId":{"type":"SystemString","description":"The unique id of the search dialog field.  i.e. &apos;LOOKUPID&apos;  Defaults to &quot;NAME&quot;."}},"type":" The desired value of the search criteria field.groupCaption (Optional)","references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_Locations","summary":"\r\n            Navigate to the 'Locations' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Fundraising events\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Locations\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void Locations(\n\tstring groupCaption = \"Fundraising events\",\n\tstring taskCaption = \"Locations\"\n)","VB":"Public Shared Sub Locations ( \n\tOptional groupCaption As String = \"Fundraising events\",\n\tOptional taskCaption As String = \"Locations\"\n)","C++":"public:\nstatic void Locations(\n\tString^ groupCaption = L\"Fundraising events\", \n\tString^ taskCaption = L\"Locations\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Fundraising events&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Locations&quot;."}},"type":" The group header caption of the task.  Defaults to \"Fundraising events\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_EventManagementTemplates","summary":"\r\n            Navigate to the 'Event Management Templates' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Fundraising events\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Event management templates\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void EventManagementTemplates(\n\tstring groupCaption = \"Fundraising events\",\n\tstring taskCaption = \"Event management templates\"\n)","VB":"Public Shared Sub EventManagementTemplates ( \n\tOptional groupCaption As String = \"Fundraising events\",\n\tOptional taskCaption As String = \"Event management templates\"\n)","C++":"public:\nstatic void EventManagementTemplates(\n\tString^ groupCaption = L\"Fundraising events\", \n\tString^ taskCaption = L\"Event management templates\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Fundraising events&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Event management templates&quot;."}},"type":" The group header caption of the task.  Defaults to \"Fundraising events\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventsFunctionalArea_CollapseCalendar","summary":"\r\n            Collapse the Event Calendar if it is expanded and wait for the collapse to complete.\r\n            ","params":{"syntax":{"C#":"public static void CollapseCalendar()","VB":"Public Shared Sub CollapseCalendar","C++":"public:\nstatic void CollapseCalendar()"},"references":{"T_Blueshirt_Core_Crm_EventsFunctionalArea.htm":"EventsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_FundraisingFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Fundraising' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmFundraisingFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The FundraisingFunctionalArea type exposes the following members.","constructors":{"FundraisingFunctionalArea":{"value":"Initializes a new instance of the FundraisingFunctionalArea class","description":"Initializes a new instance of the FundraisingFunctionalArea class"}},"methods":{"DesignationExists":{"value":"\n            Check if a designation exists and navigate to it if so.\n            ","description":"\n            Check if a designation exists and navigate to it if so.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_FundraisingFunctionalArea_DesignationExists","summary":"\r\n            Check if a designation exists and navigate to it if so.\r\n            ","param":[{"_":"The name of the designation.","name":"designation"},{"_":"The group header caption of the task.  Defaults to \"Fundraising\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Designation search\"","name":"taskCaption"},{"_":"The unique id of the search dialog.  i.e. 'UniversityofOxfordConstituentSearch'  \r\n            Defaults to \"DesignationSearch\".","name":"dialogId"},{"_":"The unique id of the search dialog field.  i.e. 'LOOKUPID'  Defaults to \"COMBINEDSEARCH\".","name":"fieldId"}],"returns":"True if the designation exists, false otherwise.","params":{"syntax":{"C#":"public static bool DesignationExists(\n\tstring designation,\n\tstring groupCaption = \"Fundraising\",\n\tstring taskCaption = \"Designation search\",\n\tstring dialogId = \"DesignationSearch\",\n\tstring fieldId = \"COMBINEDSEARCH\"\n)","VB":"Public Shared Function DesignationExists ( \n\tdesignation As String,\n\tOptional groupCaption As String = \"Fundraising\",\n\tOptional taskCaption As String = \"Designation search\",\n\tOptional dialogId As String = \"DesignationSearch\",\n\tOptional fieldId As String = \"COMBINEDSEARCH\"\n) As Boolean","C++":"public:\nstatic bool DesignationExists(\n\tString^ designation, \n\tString^ groupCaption = L\"Fundraising\", \n\tString^ taskCaption = L\"Designation search\", \n\tString^ dialogId = L\"DesignationSearch\", \n\tString^ fieldId = L\"COMBINEDSEARCH\"\n)"},"arguments":{"designation":{"type":"SystemString","description":"The name of the designation."},"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Fundraising&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Designation search&quot;"},"dialogId":{"type":"SystemString","description":"The unique id of the search dialog.  i.e. &apos;UniversityofOxfordConstituentSearch&apos;  \n            Defaults to &quot;DesignationSearch&quot;."},"fieldId":{"type":"SystemString","description":"The unique id of the search dialog field.  i.e. &apos;LOOKUPID&apos;  Defaults to &quot;COMBINEDSEARCH&quot;."}},"return_val":{"type":" Boolean","description":"True if the designation exists, false otherwise."},"type":" The name of the designation.groupCaption (Optional)","references":{"T_Blueshirt_Core_Crm_FundraisingFunctionalArea.htm":"FundraisingFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_HomeFunctionalArea","summary":"\r\n             Class to handle interactions for the 'Home' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmHomeFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The HomeFunctionalArea type exposes the following members.","constructors":{"HomeFunctionalArea":{"value":"Initializes a new instance of the HomeFunctionalArea class","description":"Initializes a new instance of the HomeFunctionalArea class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea","summary":"\r\n             Class to handle interactions for the 'Marketing and Communications' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmMarketingAndCommFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAndCommFunctionalArea type exposes the following members.","constructors":{"MarketingAndCommFunctionalArea":{"value":"Initializes a new instance of the MarketingAndCommFunctionalArea class","description":"Initializes a new instance of the MarketingAndCommFunctionalArea class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MarketingAcknowledgements":{"value":"\n            Navigate to the 'Marketing Acknowledgements' panel.\n            ","description":"\n            Navigate to the 'Marketing Acknowledgements' panel.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"Packages":{"value":"\n            Navigate to the 'Packages' panel and then navigate to the 'View packages' panel.\n            ","description":"\n            Navigate to the 'Packages' panel and then navigate to the 'View packages' panel.\n            "},"Receipts":{"value":"\n            Navigate to the 'Receipts' panel.\n            ","description":"\n            Navigate to the 'Receipts' panel.\n            "},"Segments":{"value":"\n            Navigate to the 'Segments' panel.\n            ","description":"\n            Navigate to the 'Segments' panel.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Receipts","summary":"\r\n            Navigate to the 'Receipts' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Donor relations\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Receipts\"","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void Receipts(\n\tstring groupCaption = \"Donor relations\",\n\tstring taskCaption = \"Receipts\"\n)","VB":"Public Shared Sub Receipts ( \n\tOptional groupCaption As String = \"Donor relations\",\n\tOptional taskCaption As String = \"Receipts\"\n)","C++":"public:\nstatic void Receipts(\n\tString^ groupCaption = L\"Donor relations\", \n\tString^ taskCaption = L\"Receipts\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Donor relations&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Receipts&quot;"}},"type":" The group header caption of the task.  Defaults to \"Donor relations\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm":"MarketingAndCommFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_MarketingAcknowledgements","summary":"\r\n            Navigate to the 'Marketing Acknowledgements' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Marketing efforts\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Marketing acknowledgements\"","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void MarketingAcknowledgements(\n\tstring groupCaption = \"Marketing efforts\",\n\tstring taskCaption = \"Marketing acknowledgements\"\n)","VB":"Public Shared Sub MarketingAcknowledgements ( \n\tOptional groupCaption As String = \"Marketing efforts\",\n\tOptional taskCaption As String = \"Marketing acknowledgements\"\n)","C++":"public:\nstatic void MarketingAcknowledgements(\n\tString^ groupCaption = L\"Marketing efforts\", \n\tString^ taskCaption = L\"Marketing acknowledgements\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Marketing efforts&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Marketing acknowledgements&quot;"}},"type":" The group header caption of the task.  Defaults to \"Marketing efforts\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm":"MarketingAndCommFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Segments","summary":"\r\n            Navigate to the 'Segments' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Acquisition and segmentation\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Segments\"","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void Segments(\n\tstring groupCaption = \"Acquisition and segmentation\",\n\tstring taskCaption = \"Segments\"\n)","VB":"Public Shared Sub Segments ( \n\tOptional groupCaption As String = \"Acquisition and segmentation\",\n\tOptional taskCaption As String = \"Segments\"\n)","C++":"public:\nstatic void Segments(\n\tString^ groupCaption = L\"Acquisition and segmentation\", \n\tString^ taskCaption = L\"Segments\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Acquisition and segmentation&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Segments&quot;"}},"type":" The group header caption of the task.  Defaults to \"Acquisition and segmentation\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm":"MarketingAndCommFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea_Packages","summary":"\r\n            Navigate to the 'Packages' panel and then navigate to the 'View packages' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Packages\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Packages\"","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void Packages(\n\tstring groupCaption = \"Packages\",\n\tstring taskCaption = \"Packages\"\n)","VB":"Public Shared Sub Packages ( \n\tOptional groupCaption As String = \"Packages\",\n\tOptional taskCaption As String = \"Packages\"\n)","C++":"public:\nstatic void Packages(\n\tString^ groupCaption = L\"Packages\", \n\tString^ taskCaption = L\"Packages\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Packages&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Packages&quot;"}},"type":" The group header caption of the task.  Defaults to \"Packages\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_MarketingAndCommFunctionalArea.htm":"MarketingAndCommFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_ProspectsFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Prospects' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmProspectsFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The ProspectsFunctionalArea type exposes the following members.","constructors":{"ProspectsFunctionalArea":{"value":"Initializes a new instance of the ProspectsFunctionalArea class","description":"Initializes a new instance of the ProspectsFunctionalArea class"}},"methods":{"CollapseResearchLists":{"value":"\n            Collapse the Research Lists Calendar if it is expanded and wait for the collapse to complete.\n            ","description":"\n            Collapse the Research Lists Calendar if it is expanded and wait for the collapse to complete.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MajorGivingSetup":{"value":"\n            Navigate to the 'Major Giving Setup' panel.\n            ","description":"\n            Navigate to the 'Major Giving Setup' panel.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ProspectsFunctionalArea_MajorGivingSetup","summary":"\r\n            Navigate to the 'Major Giving Setup' panel.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Configuration\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Major giving setup\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void MajorGivingSetup(\n\tstring groupCaption = \"Configuration\",\n\tstring taskCaption = \"Major giving setup\"\n)","VB":"Public Shared Sub MajorGivingSetup ( \n\tOptional groupCaption As String = \"Configuration\",\n\tOptional taskCaption As String = \"Major giving setup\"\n)","C++":"public:\nstatic void MajorGivingSetup(\n\tString^ groupCaption = L\"Configuration\", \n\tString^ taskCaption = L\"Major giving setup\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Configuration&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Major giving setup&quot;."}},"type":" The group header caption of the task.  Defaults to \"Configuration\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_ProspectsFunctionalArea.htm":"ProspectsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ProspectsFunctionalArea_CollapseResearchLists","summary":"\r\n            Collapse the Research Lists Calendar if it is expanded and wait for the collapse to complete.\r\n            ","params":{"syntax":{"C#":"public static void CollapseResearchLists()","VB":"Public Shared Sub CollapseResearchLists","C++":"public:\nstatic void CollapseResearchLists()"},"references":{"T_Blueshirt_Core_Crm_ProspectsFunctionalArea.htm":"ProspectsFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_RevenueFunctionalArea","summary":"\r\n            Class to handle interactions for the 'Revenue' functional area.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_FunctionalArea.htm":"Blueshirt.Core.CrmFunctionalArea","#":"Blueshirt.Core.CrmRevenueFunctionalArea"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The RevenueFunctionalArea type exposes the following members.","constructors":{"RevenueFunctionalArea":{"value":"Initializes a new instance of the RevenueFunctionalArea class","description":"Initializes a new instance of the RevenueFunctionalArea class"}},"methods":{"AddAPayment":{"value":"\n            Open the dialog to add a payment.\n            ","description":"\n            Open the dialog to add a payment.\n            "},"AddAPledge(String, String)":{"value":"\n            Open the dialog to add a pledge.\n            ","description":"\n            Open the dialog to add a pledge.\n            "},"AddAPledge(TableRow, String, String)":{"value":"\n            Open the dialog to add a pledge, set its values, and save.\n            ","description":"\n            Open the dialog to add a pledge, set its values, and save.\n            "},"BatchEntry":{"value":"\n            Navigate to the 'Batch Entry' panel\n            ","description":"\n            Navigate to the 'Batch Entry' panel\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PledgeSubtypes":{"value":"\n            Navigate to the 'Pledge Subtypes' panel\n            ","description":"\n            Navigate to the 'Pledge Subtypes' panel\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"TransactionSearchByConstituent":{"value":"\n            Search for a revenue record by all records associated with a constituent\n            and select the first returned result.\n            ","description":"\n            Search for a revenue record by all records associated with a constituent\n            and select the first returned result.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPayment","summary":"\r\n            Open the dialog to add a payment.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Transactions\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Add a payment\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void AddAPayment(\n\tstring groupCaption = \"Transactions\",\n\tstring taskCaption = \"Add a payment\"\n)","VB":"Public Shared Sub AddAPayment ( \n\tOptional groupCaption As String = \"Transactions\",\n\tOptional taskCaption As String = \"Add a payment\"\n)","C++":"public:\nstatic void AddAPayment(\n\tString^ groupCaption = L\"Transactions\", \n\tString^ taskCaption = L\"Add a payment\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Transactions&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Add a payment&quot;."}},"type":" The group header caption of the task.  Defaults to \"Transactions\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge","summary":"\r\n            Open the dialog to add a pledge.\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Transactions\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Add a pledge\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void AddAPledge(\n\tstring groupCaption = \"Transactions\",\n\tstring taskCaption = \"Add a pledge\"\n)","VB":"Public Shared Sub AddAPledge ( \n\tOptional groupCaption As String = \"Transactions\",\n\tOptional taskCaption As String = \"Add a pledge\"\n)","C++":"public:\nstatic void AddAPledge(\n\tString^ groupCaption = L\"Transactions\", \n\tString^ taskCaption = L\"Add a pledge\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Transactions&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Add a pledge&quot;."}},"type":" The group header caption of the task.  Defaults to \"Transactions\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","Overload_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge.htm":"AddAPledge Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge","summary":"\r\n            Open the dialog to add a pledge, set its values, and save.\r\n            ","param":[{"_":"Mapping of the 'Add a pledge' dialog's field captions to their desired values.","name":"pledge"},{"_":"The group header caption of the task.  Defaults to \"Transactions\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Add a pledge\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void AddAPledge(\n\tstring groupCaption = \"Transactions\",\n\tstring taskCaption = \"Add a pledge\"\n)","VB":"Public Shared Sub AddAPledge ( \n\tOptional groupCaption As String = \"Transactions\",\n\tOptional taskCaption As String = \"Add a pledge\"\n)","C++":"public:\nstatic void AddAPledge(\n\tString^ groupCaption = L\"Transactions\", \n\tString^ taskCaption = L\"Add a pledge\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Transactions&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Add a pledge&quot;."}},"type":" The group header caption of the task.  Defaults to \"Transactions\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","Overload_Blueshirt_Core_Crm_RevenueFunctionalArea_AddAPledge.htm":"AddAPledge Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_BatchEntry","summary":"\r\n            Navigate to the 'Batch Entry' panel\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Transactions\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Batch entry\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void BatchEntry(\n\tstring groupCaption = \"Transactions\",\n\tstring taskCaption = \"Batch entry\"\n)","VB":"Public Shared Sub BatchEntry ( \n\tOptional groupCaption As String = \"Transactions\",\n\tOptional taskCaption As String = \"Batch entry\"\n)","C++":"public:\nstatic void BatchEntry(\n\tString^ groupCaption = L\"Transactions\", \n\tString^ taskCaption = L\"Batch entry\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Transactions&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Batch entry&quot;."}},"type":" The group header caption of the task.  Defaults to \"Transactions\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_PledgeSubtypes","summary":"\r\n            Navigate to the 'Pledge Subtypes' panel\r\n            ","param":[{"_":"The group header caption of the task.  Defaults to \"Configuration\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Pledge subtypes\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void PledgeSubtypes(\n\tstring groupCaption = \"Configuration\",\n\tstring taskCaption = \"Pledge subtypes\"\n)","VB":"Public Shared Sub PledgeSubtypes ( \n\tOptional groupCaption As String = \"Configuration\",\n\tOptional taskCaption As String = \"Pledge subtypes\"\n)","C++":"public:\nstatic void PledgeSubtypes(\n\tString^ groupCaption = L\"Configuration\", \n\tString^ taskCaption = L\"Pledge subtypes\"\n)"},"arguments":{"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Configuration&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Pledge subtypes&quot;."}},"type":" The group header caption of the task.  Defaults to \"Configuration\".taskCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueFunctionalArea_TransactionSearchByConstituent","summary":"\r\n            Search for a revenue record by all records associated with a constituent\r\n            and select the first returned result.\r\n            ","param":[{"_":"The last name of the constituent.","name":"constituent"},{"_":"The group header caption of the task.  Defaults to \"Transactions\".","name":"groupCaption"},{"_":"The link caption of the task.  Defaults to \"Transaction search\".","name":"taskCaption"}],"params":{"syntax":{"C#":"public static void TransactionSearchByConstituent(\n\tstring constituent,\n\tstring groupCaption = \"Transactions\",\n\tstring taskCaption = \"Transaction search\"\n)","VB":"Public Shared Sub TransactionSearchByConstituent ( \n\tconstituent As String,\n\tOptional groupCaption As String = \"Transactions\",\n\tOptional taskCaption As String = \"Transaction search\"\n)","C++":"public:\nstatic void TransactionSearchByConstituent(\n\tString^ constituent, \n\tString^ groupCaption = L\"Transactions\", \n\tString^ taskCaption = L\"Transaction search\"\n)"},"arguments":{"constituent":{"type":"SystemString","description":"The last name of the constituent."},"groupCaption":{"type":"SystemString","description":"The group header caption of the task.  Defaults to &quot;Transactions&quot;."},"taskCaption":{"type":"SystemString","description":"The link caption of the task.  Defaults to &quot;Transaction search&quot;."}},"type":" The last name of the constituent.groupCaption (Optional)","references":{"T_Blueshirt_Core_Crm_RevenueFunctionalArea.htm":"RevenueFunctionalArea Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_AdHocQueryPanel","summary":"\r\n            Class to handle interactions for the 'Ad-hoc Query' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmAdHocQueryPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The AdHocQueryPanel type exposes the following members.","constructors":{"AdHocQueryPanel":{"value":"Initializes a new instance of the AdHocQueryPanel class","description":"Initializes a new instance of the AdHocQueryPanel class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsPanelHeader":{"value":"\n            Check if the Ad-Hoc Query Panel has the provided name in the header.\n            ","description":"\n            Check if the Ad-Hoc Query Panel has the provided name in the header.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_Panel","summary":"\r\n            Base class to handle interactions for panels.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","#":"Blueshirt.Core.CrmPanel","T_Blueshirt_Core_Crm_AdHocQueryPanel.htm":"Blueshirt.Core.CrmAdHocQueryPanel","T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"Blueshirt.Core.CrmBatchEntryPanel","T_Blueshirt_Core_Crm_BusinessProcess.htm":"Blueshirt.Core.CrmBusinessProcess","T_Blueshirt_Core_Crm_ConstituentPanel.htm":"Blueshirt.Core.CrmConstituentPanel","T_Blueshirt_Core_Crm_EventManagementTemplatesPanel.htm":"Blueshirt.Core.CrmEventManagementTemplatesPanel","T_Blueshirt_Core_Crm_EventPanel.htm":"Blueshirt.Core.CrmEventPanel","T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"Blueshirt.Core.CrmInformationLibraryPanel","T_Blueshirt_Core_Crm_LocationsPanel.htm":"Blueshirt.Core.CrmLocationsPanel","T_Blueshirt_Core_Crm_MajorGivingSetupPanel.htm":"Blueshirt.Core.CrmMajorGivingSetupPanel","T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel.htm":"Blueshirt.Core.CrmMarketingAcknowledgementsPanel","T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel.htm":"Blueshirt.Core.CrmMarketingAcknowledgementTemplatePanel","T_Blueshirt_Core_Crm_MultiEventPanel.htm":"Blueshirt.Core.CrmMultiEventPanel","T_Blueshirt_Core_Crm_PackagesPanel.htm":"Blueshirt.Core.CrmPackagesPanel","T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"Blueshirt.Core.Crm.PanelsQueryPanel","T_Blueshirt_Core_Crm_PlanPanel.htm":"Blueshirt.Core.CrmPlanPanel","T_Blueshirt_Core_Crm_PledgePanel.htm":"Blueshirt.Core.CrmPledgePanel","T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm":"Blueshirt.Core.CrmPledgeSubtypePanel","T_Blueshirt_Core_Crm_ReceiptsPanel.htm":"Blueshirt.Core.CrmReceiptsPanel","T_Blueshirt_Core_Crm_RecurringGiftPanel.htm":"Blueshirt.Core.CrmRecurringGiftPanel","T_Blueshirt_Core_Crm_RegistrantPanel.htm":"Blueshirt.Core.CrmRegistrantPanel","T_Blueshirt_Core_Crm_RevenueRecordPanel.htm":"Blueshirt.Core.CrmRevenueRecordPanel","T_Blueshirt_Core_Crm_SegmentPanel.htm":"Blueshirt.Core.CrmSegmentPanel","T_Blueshirt_Core_Crm_SegmentsPanel.htm":"Blueshirt.Core.CrmSegmentsPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The Panel type exposes the following members.","constructors":{"Panel":{"value":"Initializes a new instance of the Panel class","description":"Initializes a new instance of the Panel class"}},"methods":{"AdditionalDatalistPagesExist":{"value":"\n            Check if additional pages exist for a datalist to load.  If so load the page.\n            ","description":"\n            Check if additional pages exist for a datalist to load.  If so load the page.\n            "},"CheckGridResultsContain":{"value":"","description":""},"ClickSectionAddButton":{"value":"\n            Click the 'Add' button of a section.\n            ","description":"\n            Click the 'Add' button of a section.\n            "},"CollapseSection":{"value":"\n            Collapse a section if it is expanded and a collapse/expand button exists.\n            ","description":"\n            Collapse a section if it is expanded and a collapse/expand button exists.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"ExpandRow":{"value":"\n            Expand a row if it is not already expanded.\n            ","description":"\n            Expand a row if it is not already expanded.\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXDataListColumnValue":{"value":"\n            Given the DOM index of a datalist column and the value for that column, return an XPath\n            to append to a datalist XPath for finding that value in the requested column index.\n            \n            No element will be found if the value does not exist in this column.\n            ","description":"\n            Given the DOM index of a datalist column and the value for that column, return an XPath\n            to append to a datalist XPath for finding that value in the requested column index.\n            \n            No element will be found if the value does not exist in this column.\n            "},"getXDatalistRowLinkByActionAndCaption":{"value":"\n            Format an xPath for handling a link on any datalist row.\n            ","description":"\n            Format an xPath for handling a link on any datalist row.\n            "},"getXDatalistSpan":{"value":"","description":""},"getXDiv":{"value":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier XPath\n            to find the DIV field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and div, return a unique identifier XPath\n            to find the DIV field.\n            "},"getXDuplicateSectionDatalistColumnHeaders":{"value":"\n            XPath to get the TR row of column headers for a section's datalist when multiple sections with matching\n            captions exists for a single panel on different tabs.\n            ","description":"\n            XPath to get the TR row of column headers for a section's datalist when multiple sections with matching\n            captions exists for a single panel on different tabs.\n            "},"getXGrid":{"value":"\n            Format an XPath to find a grid/datalist.\n            ","description":"\n            Format an XPath to find a grid/datalist.\n            "},"getXGridHeaders":{"value":"\n            Format an XPath to find the TR header row of a grid/datalist that contains the column captions.\n            ","description":"\n            Format an XPath to find the TR header row of a grid/datalist that contains the column captions.\n            "},"getXGridRow":{"value":"\n            Formats an XPath to find a single row in a grid/datalist.\n            ","description":"\n            Formats an XPath to find a single row in a grid/datalist.\n            "},"getXGridRows":{"value":"\n            Format an XPath to find the TR rows of a grid/datalist.\n            ","description":"\n            Format an XPath to find the TR rows of a grid/datalist.\n            "},"getXInnerTab":{"value":"\n            Formats an XPath for a Tab in an inner Tab bar.\n            ","description":"\n            Formats an XPath for a Tab in an inner Tab bar.\n            "},"getXPanelHeaderAddLanguageSpecificTextSet(\"LST7F1E7F6D_3?cs=()|vb=|cpp=()|nu=()|fs=()\");":{"value":"\n            Generic XPath to get the panel header.\n            ","description":"\n            Generic XPath to get the panel header.\n            "},"getXPanelHeader(String)":{"value":"\n            Formatter for an XPath to find a panel header with a specific image type.\n            ","description":"\n            Formatter for an XPath to find a panel header with a specific image type.\n            "},"getXPanelHeaderByText":{"value":"\n            Format an XPath to find a panel header containing the provided text.\n            ","description":"\n            Format an XPath to find a panel header containing the provided text.\n            "},"getXPanelHeaderLinkAddLanguageSpecificTextSet(\"LST7F1E7F6D_4?cs=()|vb=|cpp=()|nu=()|fs=()\");":{"value":"\n            Format an XPath for finding a context link located in the header of a panel.\n            ","description":"\n            Format an XPath for finding a context link located in the header of a panel.\n            "},"getXPanelHeaderLink(String)":{"value":"\n            Format an XPath for finding a link based on its caption located in the header of a panel.\n            ","description":"\n            Format an XPath for finding a link based on its caption located in the header of a panel.\n            "},"getXPanelTab":{"value":"","description":""},"getXSection":{"value":"\n            Given the caption header of a section, return a unique identifier XPath\n            for handling the section WebElement.\n            ","description":"\n            Given the caption header of a section, return a unique identifier XPath\n            for handling the section WebElement.\n            "},"getXSectionAddButton":{"value":"\n            Given the caption header of a section, formats an XPath for handling the Add\n            button.\n            ","description":"\n            Given the caption header of a section, formats an XPath for handling the Add\n            button.\n            "},"getXSectionDatalistColumnHeaders":{"value":"\n            XPath to get the TR row of column headers for a section's datalist.\n            ","description":"\n            XPath to get the TR row of column headers for a section's datalist.\n            "},"getXSectionDatalistCurrentPageIndex":{"value":"\n            Format an XPath to find the top-right index DIV whose text will be the current page index of a section's datalist.\n            ","description":"\n            Format an XPath to find the top-right index DIV whose text will be the current page index of a section's datalist.\n            "},"getXSectionDatalistPageIndexButtons":{"value":"\n            Format an XPath to find all top-right indexing buttons for a section's datalist.\n            ","description":"\n            Format an XPath to find all top-right indexing buttons for a section's datalist.\n            "},"getXSectionDatalistRow":{"value":"\n            Formats a unique XPath to find a single datalist row.\n            ","description":"\n            Formats a unique XPath to find a single datalist row.\n            "},"getXSectionDatalistRows":{"value":"\n            XPath to get the TR datalist rows of a section.\n            ","description":"\n            XPath to get the TR datalist rows of a section.\n            "},"getXSectionExpandButton":{"value":"\n            Formats an XPath to get the expand/collpase button of a section\n            ","description":"\n            Formats an XPath to get the expand/collpase button of a section\n            "},"getXSectionViewForm":{"value":"\n            Format an XPath for a section's view form root.\n            ","description":"\n            Format an XPath for a section's view form root.\n            "},"getXSectionViewFormSpan":{"value":"\n            Format an XPath to append to a section view form that has an item with the provided\n            caption and CONTAINING (not matching) the value.\n            \n            No element will be found if the caption does not exist with this value.\n            ","description":"\n            Format an XPath to append to a section view form that has an item with the provided\n            caption and CONTAINING (not matching) the value.\n            \n            No element will be found if the caption does not exist with this value.\n            "},"getXSectionWidget":{"value":"\n            Returns an XPath to get the DIV parent of the Research Lists UI widget whose 'stlye' attribute contains visibility info about the widget.\n            ","description":"\n            Returns an XPath to get the DIV parent of the Research Lists UI widget whose 'stlye' attribute contains visibility info about the widget.\n            "},"getXSelectedDatalistRowButton":{"value":"\n            Format an XPath for handling a button on the selected datalist row.\n            ","description":"\n            Format an XPath for handling a button on the selected datalist row.\n            "},"getXSelectedDatalistRowLinkByAction":{"value":"\n            Format an XPath for handling a link on the selected datalist row.\n            ","description":"\n            Format an XPath for handling a link on the selected datalist row.\n            "},"getXSelectedDatalistRowLinkByCaption":{"value":"\n            Format an XPath for handling a link on the selected datalist row.\n            ","description":"\n            Format an XPath for handling a link on the selected datalist row.\n            "},"getXSelectedDatalistRowLinkById":{"value":"\n            Format an XPath for handling a link on the selected datalist row.\n            ","description":"\n            Format an XPath for handling a link on the selected datalist row.\n            "},"getXSpan":{"value":"\n            Given the unique HTML element ids of a dialog and span, return a unique identifier XPath\n            to find the SPAN field.\n            ","description":"\n            Given the unique HTML element ids of a dialog and span, return a unique identifier XPath\n            to find the SPAN field.\n            "},"getXTab":{"value":"\n            Formats an XPath for a Tab in a top Tab bar.\n            ","description":"\n            Formats an XPath for a Tab in a top Tab bar.\n            "},"getXViewForm":{"value":"\n            Format an XPath to find a single view form in a section.\n            \n            Field values will be checked to CONTAIN (not match) the provided values.\n            ","description":"\n            Format an XPath to find a single view form in a section.\n            \n            Field values will be checked to CONTAIN (not match) the provided values.\n            "},"GridRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)":{"value":"\n            Check if a grid/datalist row exists.\n            ","description":"\n            Check if a grid/datalist row exists.\n            "},"GridRowExists(TableRow, String)":{"value":"\n            Check if a grid/datalist row exists.\n            ","description":"\n            Check if a grid/datalist row exists.\n            "},"IsPanelHeader":{"value":"\n            Check if the panel header's text matches the expected value.\n            ","description":"\n            Check if the panel header's text matches the expected value.\n            "},"IsPanelType":{"value":"\n            Check if the panel header's image contains the provided image type.\n            ","description":"\n            Check if the panel header's image contains the provided image type.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenTab":{"value":"","description":""},"SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)":{"value":"\n            Check whether a row exists in a section's datalist.\n            ","description":"\n            Check whether a row exists in a section's datalist.\n            "},"SectionDatalistRowExists(TableRow, String)":{"value":"\n            Check whether a row exists in a section's datalist.\n            ","description":"\n            Check whether a row exists in a section's datalist.\n            "},"SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Check whether a row exists in a section's datalist.\n            ","description":"\n            Check whether a row exists in a section's datalist.\n            "},"SectionDatalistRowExists(TableRow, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Check whether a row exists in a section's datalist.\n            ","description":"\n            Check whether a row exists in a section's datalist.\n            "},"SectionViewFormExists(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, String)":{"value":"\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\n            ","description":"\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\n            "},"SectionViewFormExists(TableRow, String, String)":{"value":"\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\n            ","description":"\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\n            "},"SelectInnerTab":{"value":"\n            Select a Tab from an inner Tab bar.\n            ","description":"\n            Select a Tab from an inner Tab bar.\n            "},"SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)":{"value":"\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\n            ","description":"\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\n            "},"SelectSectionDatalistRow(TableRow, String)":{"value":"\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\n            ","description":"\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\n            "},"SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST7F1E7F6D_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Select a row in a section's datalist.  \n            If the row is already selected, no action is taken.\n            ","description":"\n            Select a row in a section's datalist.  \n            If the row is already selected, no action is taken.\n            "},"SelectSectionDatalistRow(TableRow, String, IDictionaryAddLanguageSpecificTextSet(\"LST7F1E7F6D_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, Int32AddLanguageSpecificTextSet(\"LST7F1E7F6D_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Select a row in a section's datalist.  \n            If the row is already selected, no action is taken.\n            ","description":"\n            Select a row in a section's datalist.  \n            If the row is already selected, no action is taken.\n            "},"SelectTab":{"value":"\n            Select a Tab from the top Tab bar.\n            ","description":"\n            Select a Tab from the top Tab bar.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"WaitForPanelHeaderNotContain":{"value":"\n            Wait the default time for the panel header to not contain the provided value.\n            ","description":"\n            Wait the default time for the panel header to not contain the provided value.\n            "},"WaitForPanelType":{"value":"\n            Wait until the panel header's image contains the provided image type.\n            A WebDriverTimeoutException is thrown is no displayed panel header loads with the image.\n            ","description":"\n            Wait until the panel header's image contains the provided image type.\n            A WebDriverTimeoutException is thrown is no displayed panel header loads with the image.\n            "}},"fields":{"getxEventSearchResultsBar":{"value":"","description":""},"getXEventSearchresultsGridNameFields":{"value":"","description":""},"getXInnerTabsBar":{"value":"\n            Constant XPath for getting an element that indicates an inner Tab bar has loaded an active Tab.\n            ","description":"\n            Constant XPath for getting an element that indicates an inner Tab bar has loaded an active Tab.\n            "},"getXSearchResultsGrid":{"value":"","description":""},"getXTabsBar":{"value":"\n            Constant XPath for getting an element that indicates the top Tab bar has loaded an active Tab.\n            ","description":"\n            Constant XPath for getting an element that indicates the top Tab bar has loaded an active Tab.\n            "},"getXTabsBarActiveTab":{"value":"\n            Constant XPath for getting an element corresponds to the currently active Tab in the top Tab bar.\n            ","description":"\n            Constant XPath for getting an element corresponds to the currently active Tab in the top Tab bar.\n            "},"getXTabsBarRightScroller":{"value":"\n            Constant XPath for getting the right scroller on the top Tab bar.\n            ","description":"\n            Constant XPath for getting the right scroller on the top Tab bar.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panel_getXTabsBarRightScroller","summary":"\r\n            Constant XPath for getting the right scroller on the top Tab bar.\r\n            ","params":{"syntax":{"C#":"public const string getXTabsBarRightScroller","VB":"Public Const getXTabsBarRightScroller As String","C++":"public:\nliteral String^ getXTabsBarRightScroller"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panel_getXTabsBar","summary":"\r\n            Constant XPath for getting an element that indicates the top Tab bar has loaded an active Tab.\r\n            ","params":{"syntax":{"C#":"public const string getXTabsBar","VB":"Public Const getXTabsBar As String","C++":"public:\nliteral String^ getXTabsBar"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panel_getXTabsBarActiveTab","summary":"\r\n            Constant XPath for getting an element corresponds to the currently active Tab in the top Tab bar.\r\n            ","params":{"syntax":{"C#":"public const string getXTabsBarActiveTab","VB":"Public Const getXTabsBarActiveTab As String","C++":"public:\nliteral String^ getXTabsBarActiveTab"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panel_getXInnerTabsBar","summary":"\r\n            Constant XPath for getting an element that indicates an inner Tab bar has loaded an active Tab.\r\n            ","params":{"syntax":{"C#":"public const string getXInnerTabsBar","VB":"Public Const getXInnerTabsBar As String","C++":"public:\nliteral String^ getXInnerTabsBar"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSpan","summary":"\r\n            Given the unique HTML element ids of a dialog and span, return a unique identifier XPath\r\n            to find the SPAN field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'","name":"dialogId"},{"_":"The SPAN element's unique id identifier - i.e. '_LOCATION_value'","name":"spanId"}],"params":{"syntax":{"C#":"public static string getXSpan(\n\tstring dialogId,\n\tstring spanId\n)","VB":"Public Shared Function getXSpan ( \n\tdialogId As String,\n\tspanId As String\n) As String","C++":"public:\nstatic String^ getXSpan(\n\tString^ dialogId, \n\tString^ spanId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_EventSummaryViewForm3&apos;"},"spanId":{"type":"SystemString","description":"The SPAN element&apos;s unique id identifier - i.e. &apos;_LOCATION_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSpan(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_EventSummaryViewForm3'spanId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXDiv","summary":"\r\n            Given the unique HTML element ids of a dialog and div, return a unique identifier XPath\r\n            to find the DIV field.\r\n            ","param":[{"_":"The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'","name":"dialogId"},{"_":"The DIV element's unique id identifier - i.e. '_LASTNAME_value'","name":"divId"}],"params":{"syntax":{"C#":"public static string getXDiv(\n\tstring dialogId,\n\tstring divId\n)","VB":"Public Shared Function getXDiv ( \n\tdialogId As String,\n\tdivId As String\n) As String","C++":"public:\nstatic String^ getXDiv(\n\tString^ dialogId, \n\tString^ divId\n)"},"arguments":{"dialogId":{"type":"SystemString","description":"The dialog&apos;s unique id identifier - i.e. &apos;_individualSpouseBusinessAddForm&apos;"},"divId":{"type":"SystemString","description":"The DIV element&apos;s unique id identifier - i.e. &apos;_LASTNAME_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXDiv(System.String,System.String)\"]"},"type":" The dialog's unique id identifier - i.e. '_individualSpouseBusinessAddForm'divId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionDatalistPageIndexButtons","summary":"\r\n            Format an XPath to find all top-right indexing buttons for a section's datalist.\r\n            ","param":{"_":"The caption of the section.","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXSectionDatalistPageIndexButtons(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXSectionDatalistPageIndexButtons ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXSectionDatalistPageIndexButtons(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionDatalistPageIndexButtons(System.String)\"]"},"type":" The caption of the section.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionDatalistCurrentPageIndex","summary":"\r\n            Format an XPath to find the top-right index DIV whose text will be the current page index of a section's datalist.\r\n            ","param":{"_":"The caption of the section","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXSectionDatalistCurrentPageIndex(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXSectionDatalistCurrentPageIndex ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXSectionDatalistCurrentPageIndex(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionDatalistCurrentPageIndex(System.String)\"]"},"type":" The caption of the sectionReturn Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowButton","summary":"\r\n            Format an XPath for handling a button on the selected datalist row.\r\n            ","param":{"_":"The caption of the button.","name":"caption"},"params":{"syntax":{"C#":"public static string getXSelectedDatalistRowButton(\n\tstring caption\n)","VB":"Public Shared Function getXSelectedDatalistRowButton ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXSelectedDatalistRowButton(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the button."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowButton(System.String)\"]"},"type":" The caption of the button.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByAction","summary":"\r\n            Format an XPath for handling a link on the selected datalist row.\r\n            ","param":{"_":"The tooltip caption of the action displayed when hovering over the link. i.e. 'Go to plan:'","name":"action"},"params":{"syntax":{"C#":"public static string getXSelectedDatalistRowLinkByAction(\n\tstring action\n)","VB":"Public Shared Function getXSelectedDatalistRowLinkByAction ( \n\taction As String\n) As String","C++":"public:\nstatic String^ getXSelectedDatalistRowLinkByAction(\n\tString^ action\n)"},"arguments":{"action":{"type":"SystemString","description":"The tooltip caption of the action displayed when hovering over the link. i.e. &apos;Go to plan:&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkByAction(System.String)\"]"},"type":" The tooltip caption of the action displayed when hovering over the link. i.e. 'Go to plan:'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXDatalistRowLinkByActionAndCaption","summary":"\r\n            Format an xPath for handling a link on any datalist row.\r\n            ","param":[{"_":"The result of the action. i.e. 'Go to segment:'","name":"action"},{"_":"The caption of the link.","name":"caption"}],"params":{"syntax":{"C#":"public static string getXDatalistRowLinkByActionAndCaption(\n\tstring action,\n\tstring caption\n)","VB":"Public Shared Function getXDatalistRowLinkByActionAndCaption ( \n\taction As String,\n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXDatalistRowLinkByActionAndCaption(\n\tString^ action, \n\tString^ caption\n)"},"arguments":{"action":{"type":"SystemString","description":"The result of the action. i.e. &apos;Go to segment:&apos;"},"caption":{"type":"SystemString","description":"The caption of the link."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXDatalistRowLinkByActionAndCaption(System.String,System.String)\"]"},"type":" The result of the action. i.e. 'Go to segment:'caption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkById","summary":"\r\n            Format an XPath for handling a link on the selected datalist row.\r\n            ","param":{"_":"The id of the link that is the value of the 'data-fieldid' attribute.  i.e. 'PLANNAME'","name":"id"},"params":{"syntax":{"C#":"public static string getXSelectedDatalistRowLinkById(\n\tstring id\n)","VB":"Public Shared Function getXSelectedDatalistRowLinkById ( \n\tid As String\n) As String","C++":"public:\nstatic String^ getXSelectedDatalistRowLinkById(\n\tString^ id\n)"},"arguments":{"id":{"type":"SystemString","description":"The id of the link that is the value of the &apos;data-fieldid&apos; attribute.  i.e. &apos;PLANNAME&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkById(System.String)\"]"},"type":" The id of the link that is the value of the 'data-fieldid' attribute.  i.e. 'PLANNAME'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSelectedDatalistRowLinkByCaption","summary":"\r\n            Format an XPath for handling a link on the selected datalist row.\r\n            ","param":{"_":"The caption text of the link.","name":"caption"},"params":{"syntax":{"C#":"public static string getXSelectedDatalistRowLinkByCaption(\n\tstring caption\n)","VB":"Public Shared Function getXSelectedDatalistRowLinkByCaption ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXSelectedDatalistRowLinkByCaption(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption text of the link."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSelectedDatalistRowLinkByCaption(System.String)\"]"},"type":" The caption text of the link.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink","summary":"\r\n            Format an XPath for finding a link based on its caption located in the header of a panel.\r\n            ","param":{"name":"linkCaption"},"params":{"syntax":{"C#":"public static string getXPanelHeaderLink()","VB":"Public Shared Function getXPanelHeaderLink As String","C++":"public:\nstatic String^ getXPanelHeaderLink()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink\"]","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink.htm":"getXPanelHeaderLink Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink","summary":"\r\n            Format an XPath for finding a context link located in the header of a panel.\r\n            ","params":{"syntax":{"C#":"public static string getXPanelHeaderLink()","VB":"Public Shared Function getXPanelHeaderLink As String","C++":"public:\nstatic String^ getXPanelHeaderLink()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeaderLink\"]","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_getXPanelHeaderLink.htm":"getXPanelHeaderLink Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXPanelHeader","summary":"\r\n            Formatter for an XPath to find a panel header with a specific image type.\r\n            ","param":{"_":"Unique name of the image associated with the panel header.","name":"imageName"},"params":{"syntax":{"C#":"public static string getXPanelHeader()","VB":"Public Shared Function getXPanelHeader As String","C++":"public:\nstatic String^ getXPanelHeader()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeader\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeader\"]","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_getXPanelHeader.htm":"getXPanelHeader Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXPanelHeader","summary":"\r\n            Generic XPath to get the panel header.\r\n            ","params":{"syntax":{"C#":"public static string getXPanelHeader()","VB":"Public Shared Function getXPanelHeader As String","C++":"public:\nstatic String^ getXPanelHeader()"},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeader\"]"},"type":" String[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeader\"]","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_getXPanelHeader.htm":"getXPanelHeader Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXPanelHeaderByText","summary":"\r\n            Format an XPath to find a panel header containing the provided text.\r\n            ","param":{"_":"The value to check for in the panel header.","name":"text"},"params":{"syntax":{"C#":"public static string getXPanelHeaderByText(\n\tstring text\n)","VB":"Public Shared Function getXPanelHeaderByText ( \n\ttext As String\n) As String","C++":"public:\nstatic String^ getXPanelHeaderByText(\n\tString^ text\n)"},"arguments":{"text":{"type":"SystemString","description":"The value to check for in the panel header."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXPanelHeaderByText(System.String)\"]"},"type":" The value to check for in the panel header.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXDataListColumnValue","summary":"\r\n            Given the DOM index of a datalist column and the value for that column, return an XPath\r\n            to append to a datalist XPath for finding that value in the requested column index.\r\n            \r\n            No element will be found if the value does not exist in this column.\r\n            ","param":[{"_":"The DOM index for the TD element representing the desired column.","name":"columnIndex"},{"_":"The value corresponding the provided column.  ","name":"columnValue"}],"params":{"syntax":{"C#":"public static string getXDataListColumnValue(\n\tint columnIndex,\n\tstring columnValue\n)","VB":"Public Shared Function getXDataListColumnValue ( \n\tcolumnIndex As Integer,\n\tcolumnValue As String\n) As String","C++":"public:\nstatic String^ getXDataListColumnValue(\n\tint columnIndex, \n\tString^ columnValue\n)"},"arguments":{"columnIndex":{"type":"SystemInt32","description":"The DOM index for the TD element representing the desired column."},"columnValue":{"type":"SystemString","description":"The value corresponding the provided column.  "}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXDataListColumnValue(System.Int32,System.String)\"]"},"type":" The DOM index for the TD element representing the desired column.columnValue","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRows","summary":"\r\n            XPath to get the TR datalist rows of a section.\r\n            ","param":{"_":"The caption of the section that the datalist belongs to.","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXSectionDatalistRows(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXSectionDatalistRows ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXSectionDatalistRows(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the datalist belongs to."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionDatalistRows(System.String)\"]"},"type":" The caption of the section that the datalist belongs to.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionDatalistRow","summary":"\r\n            Formats a unique XPath to find a single datalist row.\r\n            ","param":[{"_":"The caption of the section that the datalist belongs to.","name":"sectionCaption"},{"_":"Mapping of the datalist column captions to their DOM TD index.","name":"columnCaptionToIndex"},{"_":"Mapping of the datalist column captions to their values in a single row.","name":"columnCaptionToValue"}],"params":{"syntax":{"C#":"public static string getXSectionDatalistRow(\n\tstring sectionCaption,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, string> columnCaptionToValue\n)","VB":"Public Shared Function getXSectionDatalistRow ( \n\tsectionCaption As String,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tcolumnCaptionToValue As IDictionary(Of String, String)\n) As String","C++":"public:\nstatic String^ getXSectionDatalistRow(\n\tString^ sectionCaption, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, String^>^ columnCaptionToValue\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the datalist belongs to."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the datalist column captions to their DOM TD index."},"columnCaptionToValue":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the datalist column captions to their values in a single row."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionDatalistRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})\"]"},"type":" The caption of the section that the datalist belongs to.columnCaptionToIndex","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXViewForm","summary":"\r\n            Format an XPath to find a single view form in a section.\r\n            \r\n            Field values will be checked to CONTAIN (not match) the provided values.\r\n            ","param":[{"_":"The caption of the section that the view form belongs to.","name":"sectionCaption"},{"_":"The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'","name":"viewFormId"},{"_":"Mapping of a single view form's captions (excluding the colon) to their desired value.\r\n            Field values will be checked to CONTAIN (not match) the provided values.","name":"viewFormValues"}],"params":{"syntax":{"C#":"public static string getXViewForm(\n\tstring sectionCaption,\n\tstring viewFormId,\n\tIDictionary<string, string> viewFormValues\n)","VB":"Public Shared Function getXViewForm ( \n\tsectionCaption As String,\n\tviewFormId As String,\n\tviewFormValues As IDictionary(Of String, String)\n) As String","C++":"public:\nstatic String^ getXViewForm(\n\tString^ sectionCaption, \n\tString^ viewFormId, \n\tIDictionary<String^, String^>^ viewFormValues\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the view form belongs to."},"viewFormId":{"type":"SystemString","description":"The unique id for the type of view form to look for.  i.e. &apos;RevenueTransactionDetailViewForm&apos;"},"viewFormValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of a single view form&apos;s captions (excluding the colon) to their desired value.\n            Field values will be checked to CONTAIN (not match) the provided values."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXViewForm(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})\"]"},"type":" The caption of the section that the view form belongs to.viewFormId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionViewFormSpan","summary":"\r\n            Format an XPath to append to a section view form that has an item with the provided\r\n            caption and CONTAINING (not matching) the value.\r\n            \r\n            No element will be found if the caption does not exist with this value.\r\n            ","param":[{"_":"The caption of the view form field.","name":"caption"},{"_":"The expected value associated with the provided caption.","name":"value"}],"params":{"syntax":{"C#":"public static string getXSectionViewFormSpan(\n\tstring caption,\n\tstring value\n)","VB":"Public Shared Function getXSectionViewFormSpan ( \n\tcaption As String,\n\tvalue As String\n) As String","C++":"public:\nstatic String^ getXSectionViewFormSpan(\n\tString^ caption, \n\tString^ value\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the view form field."},"value":{"type":"SystemString","description":"The expected value associated with the provided caption."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionViewFormSpan(System.String,System.String)\"]"},"type":" The caption of the view form field.value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionViewForm","summary":"\r\n            Format an XPath for a section's view form root.\r\n            ","param":[{"_":"The caption of the section.","name":"secionCaption"},{"_":"The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'","name":"viewFormId"}],"params":{"syntax":{"C#":"public static string getXSectionViewForm(\n\tstring secionCaption,\n\tstring viewFormId\n)","VB":"Public Shared Function getXSectionViewForm ( \n\tsecionCaption As String,\n\tviewFormId As String\n) As String","C++":"public:\nstatic String^ getXSectionViewForm(\n\tString^ secionCaption, \n\tString^ viewFormId\n)"},"arguments":{"secionCaption":{"type":"SystemString","description":"The caption of the section."},"viewFormId":{"type":"SystemString","description":"The unique id for the type of view form to look for.  i.e. &apos;RevenueTransactionDetailViewForm&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionViewForm(System.String,System.String)\"]"},"type":" The caption of the section.viewFormId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionDatalistColumnHeaders","summary":"\r\n            XPath to get the TR row of column headers for a section's datalist.\r\n            ","param":{"_":"The caption of the section that the datalist belongs to.","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXSectionDatalistColumnHeaders(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXSectionDatalistColumnHeaders ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXSectionDatalistColumnHeaders(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the datalist belongs to."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionDatalistColumnHeaders(System.String)\"]"},"type":" The caption of the section that the datalist belongs to.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXDuplicateSectionDatalistColumnHeaders","summary":"\r\n            XPath to get the TR row of column headers for a section's datalist when multiple sections with matching\r\n            captions exists for a single panel on different tabs.\r\n            ","param":{"_":"The caption of the section that the datalist belongs to.","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXDuplicateSectionDatalistColumnHeaders(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXDuplicateSectionDatalistColumnHeaders ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXDuplicateSectionDatalistColumnHeaders(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the datalist belongs to."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXDuplicateSectionDatalistColumnHeaders(System.String)\"]"},"type":" The caption of the section that the datalist belongs to.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionAddButton","summary":"\r\n            Given the caption header of a section, formats an XPath for handling the Add\r\n            button.\r\n            ","param":[{"_":"The caption head of the section.","name":"sectionName"},{"_":"The caption of the button defaulting to \"Add\".  \r\n            A unique caption value can be specified if the button caption is not \"Add\".","name":"addCaption"}],"returns":"","params":{"syntax":{"C#":"public static string getXSectionAddButton(\n\tstring sectionName,\n\tstring addCaption = \"Add\"\n)","VB":"Public Shared Function getXSectionAddButton ( \n\tsectionName As String,\n\tOptional addCaption As String = \"Add\"\n) As String","C++":"public:\nstatic String^ getXSectionAddButton(\n\tString^ sectionName, \n\tString^ addCaption = L\"Add\"\n)"},"arguments":{"sectionName":{"type":"SystemString","description":"The caption head of the section."},"addCaption":{"type":"SystemString","description":"The caption of the button defaulting to &quot;Add&quot;.  \n            A unique caption value can be specified if the button caption is not &quot;Add&quot;."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionAddButton(System.String,System.String)\"]"},"type":" The caption head of the section.addCaption (Optional)","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSection","summary":"\r\n            Given the caption header of a section, return a unique identifier XPath\r\n            for handling the section WebElement.\r\n            ","param":{"_":"The caption header of the section to reference","name":"sectionName"},"params":{"syntax":{"C#":"public static string getXSection(\n\tstring sectionName\n)","VB":"Public Shared Function getXSection ( \n\tsectionName As String\n) As String","C++":"public:\nstatic String^ getXSection(\n\tString^ sectionName\n)"},"arguments":{"sectionName":{"type":"SystemString","description":"The caption header of the section to reference"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSection(System.String)\"]"},"type":" The caption header of the section to referenceReturn Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXTab","summary":"\r\n            Formats an XPath for a Tab in a top Tab bar.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static string getXTab(\n\tstring caption\n)","VB":"Public Shared Function getXTab ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXInnerTab","summary":"\r\n            Formats an XPath for a Tab in an inner Tab bar.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static string getXInnerTab(\n\tstring caption\n)","VB":"Public Shared Function getXInnerTab ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXInnerTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXInnerTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionExpandButton","summary":"\r\n            Formats an XPath to get the expand/collpase button of a section\r\n            ","param":{"_":"The caption of the section.","name":"sectionCaption"},"params":{"syntax":{"C#":"public static string getXSectionExpandButton(\n\tstring sectionCaption\n)","VB":"Public Shared Function getXSectionExpandButton ( \n\tsectionCaption As String\n) As String","C++":"public:\nstatic String^ getXSectionExpandButton(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionExpandButton(System.String)\"]"},"type":" The caption of the section.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXSectionWidget","summary":"\r\n            Returns an XPath to get the DIV parent of the Research Lists UI widget whose 'stlye' attribute contains visibility info about the widget.\r\n            ","param":[{"_":"The caption of the section.","name":"sectionCaption"},{"_":"A unique part of the widget element's id in the DOM.  i.e. 'ResearchGroupNavigationViewDataForm'","name":"widgetId"}],"params":{"syntax":{"C#":"public static string getXSectionWidget(\n\tstring sectionCaption,\n\tstring widgetId\n)","VB":"Public Shared Function getXSectionWidget ( \n\tsectionCaption As String,\n\twidgetId As String\n) As String","C++":"public:\nstatic String^ getXSectionWidget(\n\tString^ sectionCaption, \n\tString^ widgetId\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section."},"widgetId":{"type":"SystemString","description":"A unique part of the widget element&apos;s id in the DOM.  i.e. &apos;ResearchGroupNavigationViewDataForm&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXSectionWidget(System.String,System.String)\"]"},"type":" The caption of the section.widgetId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_CollapseSection","summary":"\r\n            Collapse a section if it is expanded and a collapse/expand button exists.\r\n            ","param":[{"_":"The caption of the section","name":"sectionCaption"},{"_":"A unique part of the widget element's id in the DOM.  i.e. 'ResearchGroupNavigationViewDataForm'","name":"widgetId"}],"params":{"syntax":{"C#":"public static void CollapseSection(\n\tstring sectionCaption,\n\tstring widgetId\n)","VB":"Public Shared Sub CollapseSection ( \n\tsectionCaption As String,\n\twidgetId As String\n)","C++":"public:\nstatic void CollapseSection(\n\tString^ sectionCaption, \n\tString^ widgetId\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section"},"widgetId":{"type":"SystemString","description":"A unique part of the widget element&apos;s id in the DOM.  i.e. &apos;ResearchGroupNavigationViewDataForm&apos;"}},"type":" The caption of the sectionwidgetId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  \r\n            If the row is already selected, no action is taken.\r\n            ","param":[{"_":"Mapping of the column caption to the single row's values.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"Mapping of the column captions to their TD index.","name":"columnCaptionToIndex"}],"params":{"syntax":{"C#":"public static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"public:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping of the column caption to the single row&apos;s values.   Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  \r\n            If the row is already selected, no action is taken.\r\n            ","param":[{"_":"Mapping of the column caption to the single row's values.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"Mapping of the column captions to their TD index.","name":"columnCaptionToIndex"}],"params":{"syntax":{"C#":"public static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"public:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping of the column caption to the single row&apos;s values.   Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\r\n            ","param":[{"_":"Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"}],"params":{"syntax":{"C#":"public static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"public:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping of the column caption to the single row&apos;s values.   Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\r\n            ","param":[{"_":"Mapping of the column caption to the single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"}],"params":{"syntax":{"C#":"public static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"public:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping of the column caption to the single row&apos;s values.   Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\r\n            Use this when the same panel has tabs with the same section caption.\r\n            ","param":[{"_":"Dictionary mapping of the column caption to the single row's values.   Keys represent column captions.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"}]},{"name":"M_Blueshirt_Core_Crm_Panel_SelectDuplicateSectionDatalistRow","summary":"\r\n            Select a row in a section's datalist.  If the row is already selected, no action is taken.\r\n            Use this when the same panel has tabs with the same section caption.\r\n            ","param":[{"_":"Mapping of the column caption to the single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"}]},{"name":"M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists","summary":"\r\n            Check whether a row exists in a section's datalist.\r\n            ","param":[{"_":"Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"public:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the datalist columns to a single row&apos;s values.  Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists","summary":"\r\n            Check whether a row exists in a section's datalist.\r\n            ","param":[{"_":"Mapping of the datalist columns to a single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"public:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the datalist columns to a single row&apos;s values.  Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists","summary":"\r\n            Check whether a row exists in a section's datalist.\r\n            ","param":[{"_":"Mapping of the datalist columns to a single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"Mapping of the column captions to their TD index.","name":"columnCaptionToIndex"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"public:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the datalist columns to a single row&apos;s values.  Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists","summary":"\r\n            Check whether a row exists in a section's datalist.\r\n            ","param":[{"_":"Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"Mapping of the column captions to their TD index.","name":"columnCaptionToIndex"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Public Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"public:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the datalist columns to a single row&apos;s values.  Keys represent column captions."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the datalist columns to a single row's values.  Keys represent column captions.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SectionViewFormExists","summary":"\r\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\r\n            ","param":[{"_":"Mapping of the view form captions (excluding the colon) to a single view form's values.","name":"viewForm"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'","name":"viewFormId"}],"returns":"True if the view form exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionViewFormExists(\n\tIDictionary<string, string> viewForm,\n\tstring sectionCaption,\n\tstring viewFormId\n)","VB":"Public Shared Function SectionViewFormExists ( \n\tviewForm As IDictionary(Of String, String),\n\tsectionCaption As String,\n\tviewFormId As String\n) As Boolean","C++":"public:\nstatic bool SectionViewFormExists(\n\tIDictionary<String^, String^>^ viewForm, \n\tString^ sectionCaption, \n\tString^ viewFormId\n)"},"arguments":{"viewForm":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the view form captions (excluding the colon) to a single view form&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."},"viewFormId":{"type":"SystemString","description":"The unique id for the type of view form to look for.  i.e. &apos;RevenueTransactionDetailViewForm&apos;"}},"return_val":{"type":" Boolean","description":"True if the view form exists, false otherwise."},"type":" , Mapping of the view form captions (excluding the colon) to a single view form's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionViewFormExists.htm":"SectionViewFormExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SectionViewFormExists","summary":"\r\n            Check whether a view form exists in a section CONTAINING (not identically matching) the provided values.\r\n            ","param":[{"_":"Mapping of the view form captions (excluding the colon) to a single view form's values.","name":"viewForm"},{"_":"The caption of the section.","name":"sectionCaption"},{"_":"The unique id for the type of view form to look for.  i.e. 'RevenueTransactionDetailViewForm'","name":"viewFormId"}],"returns":"True if the view form exists, false otherwise.","params":{"syntax":{"C#":"public static bool SectionViewFormExists(\n\tIDictionary<string, string> viewForm,\n\tstring sectionCaption,\n\tstring viewFormId\n)","VB":"Public Shared Function SectionViewFormExists ( \n\tviewForm As IDictionary(Of String, String),\n\tsectionCaption As String,\n\tviewFormId As String\n) As Boolean","C++":"public:\nstatic bool SectionViewFormExists(\n\tIDictionary<String^, String^>^ viewForm, \n\tString^ sectionCaption, \n\tString^ viewFormId\n)"},"arguments":{"viewForm":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the view form captions (excluding the colon) to a single view form&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."},"viewFormId":{"type":"SystemString","description":"The unique id for the type of view form to look for.  i.e. &apos;RevenueTransactionDetailViewForm&apos;"}},"return_val":{"type":" Boolean","description":"True if the view form exists, false otherwise."},"type":" , Mapping of the view form captions (excluding the colon) to a single view form's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_SectionViewFormExists.htm":"SectionViewFormExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_GridRowExists","summary":"\r\n            Check if a grid/datalist row exists.\r\n            ","param":[{"_":"Mapping of the grid/datalist column captions to a single row's values.","name":"row"},{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool GridRowExists(\n\tIDictionary<string, string> row,\n\tstring gridId\n)","VB":"Public Shared Function GridRowExists ( \n\trow As IDictionary(Of String, String),\n\tgridId As String\n) As Boolean","C++":"public:\nstatic bool GridRowExists(\n\tIDictionary<String^, String^>^ row, \n\tString^ gridId\n)"},"arguments":{"row":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the grid/datalist columns to a single row&apos;s values.  Keys represent column captions."},"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the grid/datalist columns to a single row's values.  Keys represent column captions.gridId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_GridRowExists.htm":"GridRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_GridRowExists","summary":"\r\n            Check if a grid/datalist row exists.\r\n            ","param":[{"_":"Dictionary mapping the grid/datalist columns to a single row's values.  Keys represent column captions.","name":"row"},{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"public static bool GridRowExists(\n\tIDictionary<string, string> row,\n\tstring gridId\n)","VB":"Public Shared Function GridRowExists ( \n\trow As IDictionary(Of String, String),\n\tgridId As String\n) As Boolean","C++":"public:\nstatic bool GridRowExists(\n\tIDictionary<String^, String^>^ row, \n\tString^ gridId\n)"},"arguments":{"row":{"type":"System.Collections.GenericIDictionaryStringString","description":"Dictionary mapping the grid/datalist columns to a single row&apos;s values.  Keys represent column captions."},"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Dictionary mapping the grid/datalist columns to a single row's values.  Keys represent column captions.gridId","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","Overload_Blueshirt_Core_Crm_Panel_GridRowExists.htm":"GridRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXGridRow","summary":"\r\n            Formats an XPath to find a single row in a grid/datalist.\r\n            ","param":[{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"},{"_":"Mapping of the column captions to their index in the TD.","name":"columnCaptionToIndex"},{"_":"Mapping of the column captions to a single row's values.","name":"columnCaptionToValue"}],"params":{"syntax":{"C#":"public static string getXGridRow(\n\tstring gridId,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, string> columnCaptionToValue\n)","VB":"Public Shared Function getXGridRow ( \n\tgridId As String,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tcolumnCaptionToValue As IDictionary(Of String, String)\n) As String","C++":"public:\nstatic String^ getXGridRow(\n\tString^ gridId, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, String^>^ columnCaptionToValue\n)"},"arguments":{"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the column captions to their index in the TD."},"columnCaptionToValue":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXGridRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})\"]"},"type":" The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'columnCaptionToIndex","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXGridRows","summary":"\r\n            Format an XPath to find the TR rows of a grid/datalist.\r\n            ","param":{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"},"params":{"syntax":{"C#":"public static string getXGridRows(\n\tstring gridId\n)","VB":"Public Shared Function getXGridRows ( \n\tgridId As String\n) As String","C++":"public:\nstatic String^ getXGridRows(\n\tString^ gridId\n)"},"arguments":{"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXGridRows(System.String)\"]"},"type":" The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXGridHeaders","summary":"\r\n            Format an XPath to find the TR header row of a grid/datalist that contains the column captions.\r\n            ","param":{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"},"params":{"syntax":{"C#":"public static string getXGridHeaders(\n\tstring gridId\n)","VB":"Public Shared Function getXGridHeaders ( \n\tgridId As String\n) As String","C++":"public:\nstatic String^ getXGridHeaders(\n\tString^ gridId\n)"},"arguments":{"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXGridHeaders(System.String)\"]"},"type":" The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_getXGrid","summary":"\r\n            Format an XPath to find a grid/datalist.\r\n            ","param":{"_":"The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'","name":"gridId"},"params":{"syntax":{"C#":"public static string getXGrid(\n\tstring gridId\n)","VB":"Public Shared Function getXGrid ( \n\tgridId As String\n) As String","C++":"public:\nstatic String^ getXGrid(\n\tString^ gridId\n)"},"arguments":{"gridId":{"type":"SystemString","description":"The unique id of the grid/datalist.  i.e. &apos;_DESIGNATIONS_value&apos;"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panel.getXGrid(System.String)\"]"},"type":" The unique id of the grid/datalist.  i.e. '_DESIGNATIONS_value'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectTab","summary":"\r\n            Select a Tab from the top Tab bar.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static void SelectTab(\n\tstring caption\n)","VB":"Public Shared Sub SelectTab ( \n\tcaption As String\n)","C++":"public:\nstatic void SelectTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"type":" The caption of the tab.","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_SelectInnerTab","summary":"\r\n            Select a Tab from an inner Tab bar.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static void SelectInnerTab(\n\tstring caption\n)","VB":"Public Shared Sub SelectInnerTab ( \n\tcaption As String\n)","C++":"public:\nstatic void SelectInnerTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"type":" The caption of the tab.","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_ClickSectionAddButton","summary":"\r\n            Click the 'Add' button of a section.\r\n            ","param":[{"_":"The caption of the section that the button belongs to.","name":"sectionCaption"},{"_":"The caption of the button to click.  Defaults to 'Add'.","name":"addButtonCaption"}],"params":{"syntax":{"C#":"public static void ClickSectionAddButton(\n\tstring sectionCaption,\n\tstring addButtonCaption = \"Add\"\n)","VB":"Public Shared Sub ClickSectionAddButton ( \n\tsectionCaption As String,\n\tOptional addButtonCaption As String = \"Add\"\n)","C++":"public:\nstatic void ClickSectionAddButton(\n\tString^ sectionCaption, \n\tString^ addButtonCaption = L\"Add\"\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the button belongs to."},"addButtonCaption":{"type":"SystemString","description":"The caption of the button to click.  Defaults to &apos;Add&apos;."}},"type":" The caption of the section that the button belongs to.addButtonCaption (Optional)","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_IsPanelHeader","summary":"\r\n            Check if the panel header's text matches the expected value.\r\n            ","param":{"_":"The expected value of the header.","name":"expectedValue"},"returns":"True if the text of the header matches the provided expected value, false otherwise.","params":{"syntax":{"C#":"public static bool IsPanelHeader(\n\tstring expectedValue\n)","VB":"Public Shared Function IsPanelHeader ( \n\texpectedValue As String\n) As Boolean","C++":"public:\nstatic bool IsPanelHeader(\n\tString^ expectedValue\n)"},"arguments":{"expectedValue":{"type":"SystemString","description":"The expected value of the header."}},"return_val":{"type":" Boolean","description":"True if the text of the header matches the provided expected value, false otherwise."},"type":" The expected value of the header.Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_IsPanelType","summary":"\r\n            Check if the panel header's image contains the provided image type.\r\n            ","param":{"_":"The unique image name of the panel.  i.e. 'individual.png'","name":"panelImage"},"returns":"True if the panel header image contains the provided image type, false otherwise.","params":{"syntax":{"C#":"public static bool IsPanelType(\n\tstring panelImage\n)","VB":"Public Shared Function IsPanelType ( \n\tpanelImage As String\n) As Boolean","C++":"public:\nstatic bool IsPanelType(\n\tString^ panelImage\n)"},"arguments":{"panelImage":{"type":"SystemString","description":"The unique image name of the panel.  i.e. &apos;individual.png&apos;"}},"return_val":{"type":" Boolean","description":"True if the panel header image contains the provided image type, false otherwise."},"type":" The unique image name of the panel.  i.e. 'individual.png'Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_WaitForPanelType","summary":"\r\n            Wait until the panel header's image contains the provided image type.\r\n            A WebDriverTimeoutException is thrown is no displayed panel header loads with the image.\r\n            ","param":{"_":"The unique image name of the panel.  i.e. 'individual.png'","name":"panelImage"},"params":{"syntax":{"C#":"public static void WaitForPanelType(\n\tstring panelImage\n)","VB":"Public Shared Sub WaitForPanelType ( \n\tpanelImage As String\n)","C++":"public:\nstatic void WaitForPanelType(\n\tString^ panelImage\n)"},"arguments":{"panelImage":{"type":"SystemString","description":"The unique image name of the panel.  i.e. &apos;individual.png&apos;"}},"type":" The unique image name of the panel.  i.e. 'individual.png'","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_WaitForPanelHeaderNotContain","summary":"\r\n            Wait the default time for the panel header to not contain the provided value.\r\n            ","param":{"_":"The value to wait until not displayed in the header.","name":"header"},"params":{"syntax":{"C#":"public static void WaitForPanelHeaderNotContain(\n\tstring header\n)","VB":"Public Shared Sub WaitForPanelHeaderNotContain ( \n\theader As String\n)","C++":"public:\nstatic void WaitForPanelHeaderNotContain(\n\tString^ header\n)"},"arguments":{"header":{"type":"SystemString","description":"The value to wait until not displayed in the header."}},"type":" The value to wait until not displayed in the header.","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_ExpandRow","summary":"\r\n            Expand a row if it is not already expanded.\r\n            ","params":{"syntax":{"C#":"public static void ExpandRow(\n\tstring XPath\n)","VB":"Public Shared Sub ExpandRow ( \n\tXPath As String\n)","C++":"public:\nstatic void ExpandRow(\n\tString^ XPath\n)"},"arguments":{"XPath":{"type":"SystemString[Missing <param name=\"XPath\"/> documentation for \"M:Blueshirt.Core.Crm.Panel.ExpandRow(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;XPath&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Crm.Panel.ExpandRow(System.String)&quot;]</p>"}},"type":" [Missing <param name=\"XPath\"/> documentation for \"M:Blueshirt.Core.Crm.Panel.ExpandRow(System.String)\"]","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panel_AdditionalDatalistPagesExist","summary":"\r\n            Check if additional pages exist for a datalist to load.  If so load the page.\r\n            ","returns":"Returns true if an additional page was found and clicked, false otherwise.","params":{"syntax":{"C#":"public static bool AdditionalDatalistPagesExist(\n\tstring sectionCaption\n)","VB":"Public Shared Function AdditionalDatalistPagesExist ( \n\tsectionCaption As String\n) As Boolean","C++":"public:\nstatic bool AdditionalDatalistPagesExist(\n\tString^ sectionCaption\n)"},"arguments":{"sectionCaption":{"type":"SystemString[Missing <param name=\"sectionCaption\"/> documentation for \"M:Blueshirt.Core.Crm.Panel.AdditionalDatalistPagesExist(System.String)\"]","description":"<p style=\"color: #dc143c; font-size: 8.5pt; font-weight: bold;\">[Missing &lt;param name=&quot;sectionCaption&quot;/&gt; documentation for &quot;M:Blueshirt.Core.Crm.Panel.AdditionalDatalistPagesExist(System.String)&quot;]</p>"}},"return_val":{"type":" Boolean","description":"Returns true if an additional page was found and clicked, false otherwise."},"type":" [Missing <param name=\"sectionCaption\"/> documentation for \"M:Blueshirt.Core.Crm.Panel.AdditionalDatalistPagesExist(System.String)\"]Return Value","references":{"T_Blueshirt_Core_Crm_Panel.htm":"Panel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_AdHocQueryPanel_IsPanelHeader","summary":"\r\n            Check if the Ad-Hoc Query Panel has the provided name in the header.\r\n            ","param":{"_":"The value to check for in the header.","name":"queryName"},"returns":"True if the header contains the value, false otherwise.","params":{"syntax":{"C#":"public static bool IsPanelHeader(\n\tstring queryName\n)","VB":"Public Shared Function IsPanelHeader ( \n\tqueryName As String\n) As Boolean","C++":"public:\nstatic bool IsPanelHeader(\n\tString^ queryName\n)"},"arguments":{"queryName":{"type":"SystemString","description":"The value to check for in the header."}},"return_val":{"type":" Boolean","description":"True if the header contains the value, false otherwise."},"type":" The value to check for in the header.Return Value","references":{"T_Blueshirt_Core_Crm_AdHocQueryPanel.htm":"AdHocQueryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_BatchEntryPanel","summary":"\r\n            Class to handle interactions for the 'Batch Entry' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmBatchEntryPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BatchEntryPanel type exposes the following members.","constructors":{"BatchEntryPanel":{"value":"Initializes a new instance of the BatchEntryPanel class","description":"Initializes a new instance of the BatchEntryPanel class"}},"methods":{"AddBatch(String)":{"value":"\n            Create a new batch using the specified template and load the batch dialog.\n            ","description":"\n            Create a new batch using the specified template and load the batch dialog.\n            "},"AddBatch(String, String)":{"value":"\n            Create a new batch with the specified template and description.\n            ","description":"\n            Create a new batch with the specified template and description.\n            "},"CommitSelectedBatch":{"value":"\n            Commit the currently selected batch.\n            ","description":"\n            Commit the currently selected batch.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SelectUncommittedBatch":{"value":"\n            Select an uncommitted batch.\n            ","description":"\n            Select an uncommitted batch.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"},"UncommittedBatchExists":{"value":"\n            Check if a batch exists as a row in the uncommitted batches datalist.\n            ","description":"\n            Check if a batch exists as a row in the uncommitted batches datalist.\n            "}},"fields":{"getXSearchInput":{"value":"","description":""}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch","summary":"\r\n            Create a new batch using the specified template and load the batch dialog.\r\n            ","param":{"_":"The template to use for the new batch.","name":"batchTemplate"},"params":{"syntax":{"C#":"public static void AddBatch(\n\tstring batchTemplate\n)","VB":"Public Shared Sub AddBatch ( \n\tbatchTemplate As String\n)","C++":"public:\nstatic void AddBatch(\n\tString^ batchTemplate\n)"},"arguments":{"batchTemplate":{"type":"SystemString","description":"The template to use for the new batch."}},"type":" The template to use for the new batch.","references":{"T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"BatchEntryPanel Class","Overload_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch.htm":"AddBatch Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"_":"\r\n            \r\n            \r\n            /// \r\n        ","name":"M_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch","summary":"\r\n            Create a new batch with the specified template and description.\r\n            ","param":[{"_":"The template to use for the new batch.","name":"batchTemplate"},{"_":"The description to use for the new batch.","name":"description"}],"params":{"syntax":{"C#":"public static void AddBatch(\n\tstring batchTemplate\n)","VB":"Public Shared Sub AddBatch ( \n\tbatchTemplate As String\n)","C++":"public:\nstatic void AddBatch(\n\tString^ batchTemplate\n)"},"arguments":{"batchTemplate":{"type":"SystemString","description":"The template to use for the new batch."}},"type":" The template to use for the new batch.","references":{"T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"BatchEntryPanel Class","Overload_Blueshirt_Core_Crm_BatchEntryPanel_AddBatch.htm":"AddBatch Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchEntryPanel_UncommittedBatchExists","summary":"\r\n            Check if a batch exists as a row in the uncommitted batches datalist.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"batch"},"returns":"True if the batch exists, false otherwise.","params":{"syntax":{"C#":"public static bool UncommittedBatchExists(\n\tTableRow batch\n)","VB":"Public Shared Function UncommittedBatchExists ( \n\tbatch As TableRow\n) As Boolean","C++":"public:\nstatic bool UncommittedBatchExists(\n\tTableRow^ batch\n)"},"arguments":{"batch":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the batch exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"BatchEntryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchEntryPanel_SelectUncommittedBatch","summary":"\r\n            Select an uncommitted batch.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"batchRow"},"params":{"syntax":{"C#":"public static void SelectUncommittedBatch(\n\tTableRow batchRow\n)","VB":"Public Shared Sub SelectUncommittedBatch ( \n\tbatchRow As TableRow\n)","C++":"public:\nstatic void SelectUncommittedBatch(\n\tTableRow^ batchRow\n)"},"arguments":{"batchRow":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" TableRowMapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"BatchEntryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BatchEntryPanel_CommitSelectedBatch","summary":"\r\n            Commit the currently selected batch.\r\n            ","params":{"syntax":{"C#":"public static void CommitSelectedBatch()","VB":"Public Shared Sub CommitSelectedBatch","C++":"public:\nstatic void CommitSelectedBatch()"},"references":{"T_Blueshirt_Core_Crm_BatchEntryPanel.htm":"BatchEntryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_BusinessProcess","summary":"\r\n            Base class to handle interactions for the 'Business Process' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmBusinessProcess","T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess.htm":"Blueshirt.Core.CrmMarketingAcknowledgementBusinessProcess","T_Blueshirt_Core_Crm_ReceiptBusinessProcess.htm":"Blueshirt.Core.CrmReceiptBusinessProcess"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BusinessProcess type exposes the following members.","constructors":{"BusinessProcess":{"value":"Initializes a new instance of the BusinessProcess class","description":"Initializes a new instance of the BusinessProcess class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsCompleted":{"value":"\n            Wait for the business process to complete and check if the status finished as 'Completed'.\n            ","description":"\n            Wait for the business process to complete and check if the status finished as 'Completed'.\n            "},"IsNumRecordsProcessed":{"value":"\n            Check for the total number of records processed.\n            ","description":"\n            Check for the total number of records processed.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXCommitStatus":{"value":"\n            Get a formatted xPath for an element whose text represents the commit status of the business process.\n            ","description":"\n            Get a formatted xPath for an element whose text represents the commit status of the business process.\n            "},"getXRecordsProcessed":{"value":"\n            Get a formatted xPath for an element whose test represents the number of records processed for the business process.\n            ","description":"\n            Get a formatted xPath for an element whose test represents the number of records processed for the business process.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BusinessProcess_getXCommitStatus","summary":"\r\n            Get a formatted xPath for an element whose text represents the commit status of the business process.\r\n            ","params":{"syntax":{"C#":"public static string getXCommitStatus","VB":"Public Shared getXCommitStatus As String","C++":"public:\nstatic String^ getXCommitStatus"},"type":" String","references":{"T_Blueshirt_Core_Crm_BusinessProcess.htm":"BusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BusinessProcess_getXRecordsProcessed","summary":"\r\n            Get a formatted xPath for an element whose test represents the number of records processed for the business process.\r\n            ","params":{"syntax":{"C#":"public static string getXRecordsProcessed","VB":"Public Shared getXRecordsProcessed As String","C++":"public:\nstatic String^ getXRecordsProcessed"},"type":" String","references":{"T_Blueshirt_Core_Crm_BusinessProcess.htm":"BusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BusinessProcess_IsCompleted","summary":"\r\n            Wait for the business process to complete and check if the status finished as 'Completed'.\r\n            ","returns":"True if the business process completes without errors or exceptions, false otherwise.","params":{"syntax":{"C#":"public static bool IsCompleted()","VB":"Public Shared Function IsCompleted As Boolean","C++":"public:\nstatic bool IsCompleted()"},"return_val":{"type":" Boolean","description":"True if the business process completes without errors or exceptions, false otherwise."},"type":" BooleanTrue if the business process completes without errors or exceptions, false otherwise.","references":{"T_Blueshirt_Core_Crm_BusinessProcess.htm":"BusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BusinessProcess_IsNumRecordsProcessed","summary":"\r\n            Check for the total number of records processed.\r\n            ","param":{"_":"The expected number of total records processed by the business process.","name":"numRecords"},"returns":"True if the posted number of total processed records equals the provided expected amount, false otherwise.","params":{"syntax":{"C#":"public static bool IsNumRecordsProcessed(\n\tint numRecords\n)","VB":"Public Shared Function IsNumRecordsProcessed ( \n\tnumRecords As Integer\n) As Boolean","C++":"public:\nstatic bool IsNumRecordsProcessed(\n\tint numRecords\n)"},"arguments":{"numRecords":{"type":"SystemInt32","description":"The expected number of total records processed by the business process."}},"return_val":{"type":" Boolean","description":"True if the posted number of total processed records equals the provided expected amount, false otherwise."},"type":" The expected number of total records processed by the business process.Return Value","references":{"T_Blueshirt_Core_Crm_BusinessProcess.htm":"BusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess","summary":"\r\n            Class to handle interactions for the 'Marketing Acknowledgement Business Process' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","T_Blueshirt_Core_Crm_BusinessProcess.htm":"Blueshirt.Core.CrmBusinessProcess","#":"Blueshirt.Core.CrmMarketingAcknowledgementBusinessProcess"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAcknowledgementBusinessProcess type exposes the following members.","constructors":{"MarketingAcknowledgementBusinessProcess":{"value":"Initializes a new instance of the MarketingAcknowledgementBusinessProcess class","description":"Initializes a new instance of the MarketingAcknowledgementBusinessProcess class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsCompleted":{"value":"\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\n            ","description":"\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\n            "},"IsNumRecordsProcessed":{"value":"\n            Check for the number of records successfully processed.\n            ","description":"\n            Check for the number of records successfully processed.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsNumRecordsProcessed","summary":"\r\n            Check for the number of records successfully processed.\r\n            ","param":{"_":"The number of records to check for.","name":"numRecords"},"returns":"True if the provided number matches the listed amount of successfully processed records, false otherwise.","params":{"syntax":{"C#":"public static bool IsNumRecordsProcessed(\n\tint numRecords\n)","VB":"Public Shared Function IsNumRecordsProcessed ( \n\tnumRecords As Integer\n) As Boolean","C++":"public:\nstatic bool IsNumRecordsProcessed(\n\tint numRecords\n)"},"arguments":{"numRecords":{"type":"SystemInt32","description":"The number of records to check for."}},"return_val":{"type":" Boolean","description":"True if the provided number matches the listed amount of successfully processed records, false otherwise."},"type":" The number of records to check for.Return Value","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess.htm":"MarketingAcknowledgementBusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess_IsCompleted","summary":"\r\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\r\n            ","returns":"True if the process completed without errors or exceptions, false otherwise.","params":{"syntax":{"C#":"public static bool IsCompleted()","VB":"Public Shared Function IsCompleted As Boolean","C++":"public:\nstatic bool IsCompleted()"},"return_val":{"type":" Boolean","description":"True if the process completed without errors or exceptions, false otherwise."},"type":" BooleanTrue if the process completed without errors or exceptions, false otherwise.","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementBusinessProcess.htm":"MarketingAcknowledgementBusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_ReceiptBusinessProcess","summary":"\r\n            Class to handle interactions for the 'Receipt Business Process' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","T_Blueshirt_Core_Crm_BusinessProcess.htm":"Blueshirt.Core.CrmBusinessProcess","#":"Blueshirt.Core.CrmReceiptBusinessProcess"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The ReceiptBusinessProcess type exposes the following members.","constructors":{"ReceiptBusinessProcess":{"value":"Initializes a new instance of the ReceiptBusinessProcess class","description":"Initializes a new instance of the ReceiptBusinessProcess class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsCompleted":{"value":"\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\n            ","description":"\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ReceiptBusinessProcess_IsCompleted","summary":"\r\n            Wait for the the business process to finish and validate if it finished with a \"Completed\" status.\r\n            ","returns":"True if the process completed without errors or exceptions, false otherwise.","params":{"syntax":{"C#":"public static bool IsCompleted()","VB":"Public Shared Function IsCompleted As Boolean","C++":"public:\nstatic bool IsCompleted()"},"return_val":{"type":" Boolean","description":"True if the process completed without errors or exceptions, false otherwise."},"type":" BooleanTrue if the process completed without errors or exceptions, false otherwise.","references":{"T_Blueshirt_Core_Crm_ReceiptBusinessProcess.htm":"ReceiptBusinessProcess Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_ConstituentPanel","summary":"\r\n            Class to handle interactions for the 'Constituent' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmConstituentPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The ConstituentPanel type exposes the following members.","constructors":{"ConstituentPanel":{"value":"Initializes a new instance of the ConstituentPanel class","description":"Initializes a new instance of the ConstituentPanel class"}},"methods":{"AddConstituency":{"value":"\n            Add a constituency under the 'Personal Info' => 'Constituencies' tab.\n            ","description":"\n            Add a constituency under the 'Personal Info' => 'Constituencies' tab.\n            "},"AddMajorGivingPlan":{"value":"\n            Add a major giving plan to a prospect constituent.\n            ","description":"\n            Add a major giving plan to a prospect constituent.\n            "},"AddNote":{"value":"\n            Add a Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab\n            ","description":"\n            Add a Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab\n            "},"AddNotification":{"value":"\n            Add a Notification to the specified Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab.\n            ","description":"\n            Add a Notification to the specified Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab.\n            "},"AddTeamMember":{"value":"\n            Add a prospect team member from the 'Prospect' => 'Prospect Team' tab.\n            \n            Constituent may need to have the 'Prospect' constituency for this tab to be displayed.\n            ","description":"\n            Add a prospect team member from the 'Prospect' => 'Prospect Team' tab.\n            \n            Constituent may need to have the 'Prospect' constituency for this tab to be displayed.\n            "},"AddTeamRole":{"value":"\n            Add Team Member Role through the 'Add a prospect team member' dialog.\n            ","description":"\n            Add Team Member Role through the 'Add a prospect team member' dialog.\n            "},"ClickConstituentLink":{"value":"\n            Follow the specified constituency link.\n            ","description":"\n            Follow the specified constituency link.\n            "},"ConstituencyExists":{"value":"\n            Check if a constituency exists on the 'Personal Info' => 'Constituencies' tab.\n            ","description":"\n            Check if a constituency exists on the 'Personal Info' => 'Constituencies' tab.\n            "},"DeleteConstituency":{"value":"","description":""},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetConstituentTypeText":{"value":"\n            Return the Constituent Type text from the TopBar on the ConstituentPanel\n            ","description":"\n            Return the Constituent Type text from the TopBar on the ConstituentPanel\n            "},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXNotification":{"value":"\n            XPath to find a notification on a Constituent panel.\n            ","description":"\n            XPath to find a notification on a Constituent panel.\n            "},"GoToPlan":{"value":"\n            Navigate the plan panel of an existing plan for the constituent.\n            ","description":"\n            Navigate the plan panel of an existing plan for the constituent.\n            "},"IsBirthDate":{"value":"\n            Check the Birth Date of the constituent.\n            ","description":"\n            Check the Birth Date of the constituent.\n            "},"IsConstituentPanelHeader":{"value":"\n            Check if the Constituent panel header has the expected text.\n            ","description":"\n            Check if the Constituent panel header has the expected text.\n            "},"IsLastName":{"value":"\n            Checks if the constituent record panel has the provided last name.\n            ","description":"\n            Checks if the constituent record panel has the provided last name.\n            "},"IsStateAddress":{"value":"\n            Check the State address of the constituent.\n            ","description":"\n            Check the State address of the constituent.\n            "},"IsTitle":{"value":"\n            Check the Title of the constituent.\n            ","description":"\n            Check the Title of the constituent.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"NotificationExists":{"value":"\n            Check if a Notification exists for the provided Note.\n            ","description":"\n            Check if a Notification exists for the provided Note.\n            "},"PlanExists":{"value":"\n            Check if a plan exists for the constituent.\n            ","description":"\n            Check if a plan exists for the constituent.\n            "},"SelectInfoTab":{"value":"\n            Select Info tab based on constituent type Text in the Panel Header\n            ","description":"\n            Select Info tab based on constituent type Text in the Panel Header\n            "},"SelectNote":{"value":"\n            Select a Note.\n            ","description":"\n            Select a Note.\n            "},"StartToAddAPlan":{"value":"\n            Start to add a plan to the prospect constituent.\n            ","description":"\n            Start to add a plan to the prospect constituent.\n            "},"TeamMemberExists":{"value":"\n            Check if a prospect team member exists.\n            ","description":"\n            Check if a prospect team member exists.\n            "},"TeamRoleExists":{"value":"\n            Check if a Team Member Role exists when adding a Prospect team member through the\n            'Add a prospect team member' dialog.\n            ","description":"\n            Check if a Team Member Role exists when adding a Prospect team member through the\n            'Add a prospect team member' dialog.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXYesReallyDelete":{"value":"","description":""}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_getXNotification","summary":"\r\n            XPath to find a notification on a Constituent panel.\r\n            ","param":{"_":"Part of the title that the notification must have.","name":"noteTitle"},"params":{"syntax":{"C#":"protected static string getXNotification(\n\tstring noteTitle\n)","VB":"Protected Shared Function getXNotification ( \n\tnoteTitle As String\n) As String","C++":"protected:\nstatic String^ getXNotification(\n\tString^ noteTitle\n)"},"arguments":{"noteTitle":{"type":"SystemString","description":"Part of the title that the notification must have."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.ConstituentPanel.getXNotification(System.String)\"]"},"type":" Part of the title that the notification must have.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_IsTitle","summary":"\r\n            Check the Title of the constituent.\r\n            ","param":{"_":"The Title value to check for.","name":"title"},"returns":"True if the provided value is the constituent's Title, false otherwise.","params":{"syntax":{"C#":"public static bool IsTitle(\n\tstring title\n)","VB":"Public Shared Function IsTitle ( \n\ttitle As String\n) As Boolean","C++":"public:\nstatic bool IsTitle(\n\tString^ title\n)"},"arguments":{"title":{"type":"SystemString","description":"The Title value to check for."}},"return_val":{"type":" Boolean","description":"True if the provided value is the constituent's Title, false otherwise."},"type":" The Title value to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_IsStateAddress","summary":"\r\n            Check the State address of the constituent.\r\n            ","param":{"_":"The State abbreviation to check for.","name":"state"},"returns":"True if the provided value is the constituent's state, false otherwise.","params":{"syntax":{"C#":"public static bool IsStateAddress(\n\tstring state\n)","VB":"Public Shared Function IsStateAddress ( \n\tstate As String\n) As Boolean","C++":"public:\nstatic bool IsStateAddress(\n\tString^ state\n)"},"arguments":{"state":{"type":"SystemString","description":"The State abbreviation to check for."}},"return_val":{"type":" Boolean","description":"True if the provided value is the constituent's state, false otherwise."},"type":" The State abbreviation to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_IsBirthDate","summary":"\r\n            Check the Birth Date of the constituent.\r\n            ","param":{"_":"The birth date value to check for.","name":"birthDate"},"returns":"True if the provided value is the constituent's birth date, false otherwise.","params":{"syntax":{"C#":"public static bool IsBirthDate(\n\tstring birthDate\n)","VB":"Public Shared Function IsBirthDate ( \n\tbirthDate As String\n) As Boolean","C++":"public:\nstatic bool IsBirthDate(\n\tString^ birthDate\n)"},"arguments":{"birthDate":{"type":"SystemString","description":"The birth date value to check for."}},"return_val":{"type":" Boolean","description":"True if the provided value is the constituent's birth date, false otherwise."},"type":" The birth date value to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_IsLastName","summary":"\r\n            Checks if the constituent record panel has the provided last name.\r\n            ","param":{"_":"The last name to check for.","name":"lastName"},"returns":"True if the constituent has the provided last name, false otherwise.","params":{"syntax":{"C#":"public static bool IsLastName(\n\tstring lastName\n)","VB":"Public Shared Function IsLastName ( \n\tlastName As String\n) As Boolean","C++":"public:\nstatic bool IsLastName(\n\tString^ lastName\n)"},"arguments":{"lastName":{"type":"SystemString","description":"The last name to check for."}},"return_val":{"type":" Boolean","description":"True if the constituent has the provided last name, false otherwise."},"type":" The last name to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_IsConstituentPanelHeader","summary":"\r\n            Check if the Constituent panel header has the expected text.\r\n            ","param":{"_":"The expected text of the header to check for.","name":"expectedText"},"returns":"True if the header has the expected text, false otherwise.","params":{"syntax":{"C#":"public static bool IsConstituentPanelHeader(\n\tstring expectedText\n)","VB":"Public Shared Function IsConstituentPanelHeader ( \n\texpectedText As String\n) As Boolean","C++":"public:\nstatic bool IsConstituentPanelHeader(\n\tString^ expectedText\n)"},"arguments":{"expectedText":{"type":"SystemString","description":"The expected text of the header to check for."}},"return_val":{"type":" Boolean","description":"True if the header has the expected text, false otherwise."},"type":" The expected text of the header to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_ConstituencyExists","summary":"\r\n            Check if a constituency exists on the 'Personal Info' => 'Constituencies' tab.\r\n            ","param":{"_":"Mapping of column captions to a row's values.","name":"values"},"returns":"True if the constituency exists, false otherwise.","params":{"syntax":{"C#":"public static bool ConstituencyExists(\n\tTableRow values\n)","VB":"Public Shared Function ConstituencyExists ( \n\tvalues As TableRow\n) As Boolean","C++":"public:\nstatic bool ConstituencyExists(\n\tTableRow^ values\n)"},"arguments":{"values":{"type":"TableRow","description":"Mapping of column captions to a row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the constituency exists, false otherwise."},"type":" TableRowMapping of column captions to a row's values.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddConstituency","summary":"\r\n            Add a constituency under the 'Personal Info' => 'Constituencies' tab.\r\n            ","param":[{"_":"The type of constituency to add (i.e. 'Staff')","name":"constituency"},{"_":"Mapping of the field captions and desired values to set on the 'Add constituency' dialog.  \r\n            Defaults to null where no values are set.","name":"values"}],"params":{"syntax":{"C#":"public static void AddConstituency(\n\tstring constituency,\n\tTableRow values = null\n)","VB":"Public Shared Sub AddConstituency ( \n\tconstituency As String,\n\tOptional values As TableRow = Nothing\n)","C++":"public:\nstatic void AddConstituency(\n\tString^ constituency, \n\tTableRow^ values = nullptr\n)"},"arguments":{"constituency":{"type":"SystemString","description":"The type of constituency to add (i.e. &apos;Staff&apos;)"},"values":{"type":"TableRow","description":"Mapping of the field captions and desired values to set on the &apos;Add constituency&apos; dialog.  \n            Defaults to null where no values are set."}},"type":" The type of constituency to add (i.e. 'Staff')values (Optional)","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddNote","summary":"\r\n            Add a Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab\r\n            ","param":{"_":"Mapping of the field captions for the 'Add a note' dialog to their desired values.","name":"note"},"params":{"syntax":{"C#":"public static void AddNote(\n\tTableRow note\n)","VB":"Public Shared Sub AddNote ( \n\tnote As TableRow\n)","C++":"public:\nstatic void AddNote(\n\tTableRow^ note\n)"},"arguments":{"note":{"type":"TableRow","description":"Mapping of the field captions for the &apos;Add a note&apos; dialog to their desired values."}},"type":" TableRowMapping of the field captions for the 'Add a note' dialog to their desired values.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_SelectNote","summary":"\r\n            Select a Note.\r\n            ","param":{"_":"The value of the 'Title' column for the desired row.","name":"noteTitle"},"params":{"syntax":{"C#":"protected static void SelectNote(\n\tstring noteTitle\n)","VB":"Protected Shared Sub SelectNote ( \n\tnoteTitle As String\n)","C++":"protected:\nstatic void SelectNote(\n\tString^ noteTitle\n)"},"arguments":{"noteTitle":{"type":"SystemString","description":"The value of the &apos;Title&apos; column for the desired row."}},"type":" The value of the 'Title' column for the desired row.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddNotification","summary":"\r\n            Add a Notification to the specified Note in the 'Documentation and Interactions' => 'Constituent Documentation' tab.\r\n            ","param":[{"_":"The 'Title' of the Note to add a notification to.","name":"noteTitle"},{"_":"Mapping of the field captions for the 'Add notification' dialog to their desired values.","name":"notification"}],"params":{"syntax":{"C#":"public static void AddNotification(\n\tstring noteTitle,\n\tTableRow notification\n)","VB":"Public Shared Sub AddNotification ( \n\tnoteTitle As String,\n\tnotification As TableRow\n)","C++":"public:\nstatic void AddNotification(\n\tString^ noteTitle, \n\tTableRow^ notification\n)"},"arguments":{"noteTitle":{"type":"SystemString","description":"The &apos;Title&apos; of the Note to add a notification to."},"notification":{"type":"TableRow","description":"Mapping of the field captions for the &apos;Add notification&apos; dialog to their desired values."}},"type":" The 'Title' of the Note to add a notification to.notification","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_NotificationExists","summary":"\r\n            Check if a Notification exists for the provided Note.\r\n            ","param":{"_":"The 'Title' of the Note.","name":"noteTitle"},"returns":"True if the notification exists, false otherwise.","params":{"syntax":{"C#":"public static bool NotificationExists(\n\tstring noteTitle\n)","VB":"Public Shared Function NotificationExists ( \n\tnoteTitle As String\n) As Boolean","C++":"public:\nstatic bool NotificationExists(\n\tString^ noteTitle\n)"},"arguments":{"noteTitle":{"type":"SystemString","description":"The &apos;Title&apos; of the Note."}},"return_val":{"type":" Boolean","description":"True if the notification exists, false otherwise."},"type":" The 'Title' of the Note.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_TeamRoleExists","summary":"\r\n            Check if a Team Member Role exists when adding a Prospect team member through the\r\n            'Add a prospect team member' dialog.\r\n            ","param":{"_":"The name of the team role to check for.","name":"teamRole"},"returns":"True if the team role exists, false otherwise.","params":{"syntax":{"C#":"public static bool TeamRoleExists(\n\tstring teamRole\n)","VB":"Public Shared Function TeamRoleExists ( \n\tteamRole As String\n) As Boolean","C++":"public:\nstatic bool TeamRoleExists(\n\tString^ teamRole\n)"},"arguments":{"teamRole":{"type":"SystemString","description":"The name of the team role to check for."}},"return_val":{"type":" Boolean","description":"True if the team role exists, false otherwise."},"type":" The name of the team role to check for.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamRole","summary":"\r\n            Add Team Member Role through the 'Add a prospect team member' dialog.\r\n            ","param":{"_":"The name of the team role to add.","name":"teamRole"},"params":{"syntax":{"C#":"public static void AddTeamRole(\n\tstring teamRole\n)","VB":"Public Shared Sub AddTeamRole ( \n\tteamRole As String\n)","C++":"public:\nstatic void AddTeamRole(\n\tString^ teamRole\n)"},"arguments":{"teamRole":{"type":"SystemString","description":"The name of the team role to add."}},"type":" The name of the team role to add.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddTeamMember","summary":"\r\n            Add a prospect team member from the 'Prospect' => 'Prospect Team' tab.\r\n            \r\n            Constituent may need to have the 'Prospect' constituency for this tab to be displayed.\r\n            ","param":{"_":"Mapping of the field captions for the 'Add a prospect team member' dialog to their desired values.","name":"teamMember"},"params":{"syntax":{"C#":"public static void AddTeamMember(\n\tTableRow teamMember\n)","VB":"Public Shared Sub AddTeamMember ( \n\tteamMember As TableRow\n)","C++":"public:\nstatic void AddTeamMember(\n\tTableRow^ teamMember\n)"},"arguments":{"teamMember":{"type":"TableRow","description":"Mapping of the field captions for the &apos;Add a prospect team member&apos; dialog to their desired values."}},"type":" TableRowMapping of the field captions for the 'Add a prospect team member' dialog to their desired values.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_TeamMemberExists","summary":"\r\n            Check if a prospect team member exists.\r\n            ","param":{"_":"Mapping of column captions to a row's values.","name":"teamMember"},"returns":"True if the team member exists, false otherwise","params":{"syntax":{"C#":"public static bool TeamMemberExists(\n\tTableRow teamMember\n)","VB":"Public Shared Function TeamMemberExists ( \n\tteamMember As TableRow\n) As Boolean","C++":"public:\nstatic bool TeamMemberExists(\n\tTableRow^ teamMember\n)"},"arguments":{"teamMember":{"type":"TableRow","description":"Mapping of column captions to a row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the team member exists, false otherwise"},"type":" TableRowMapping of column captions to a row's values.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_AddMajorGivingPlan","summary":"\r\n            Add a major giving plan to a prospect constituent.\r\n            ","param":[{"_":"Mapping of the 'Details' tab field captions to their desired values.","name":"detailFields"},{"_":"The outline to use.","name":"outline"}],"params":{"syntax":{"C#":"public static void AddMajorGivingPlan(\n\tTableRow detailFields,\n\tstring outline\n)","VB":"Public Shared Sub AddMajorGivingPlan ( \n\tdetailFields As TableRow,\n\toutline As String\n)","C++":"public:\nstatic void AddMajorGivingPlan(\n\tTableRow^ detailFields, \n\tString^ outline\n)"},"arguments":{"detailFields":{"type":"TableRow","description":"Mapping of the &apos;Details&apos; tab field captions to their desired values."},"outline":{"type":"SystemString","description":"The outline to use."}},"type":" TableRowMapping of the 'Details' tab field captions to their desired values.outline","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_GoToPlan","summary":"\r\n            Navigate the plan panel of an existing plan for the constituent.\r\n            ","param":{"_":"The name of the plan.","name":"planName"},"params":{"syntax":{"C#":"public static void GoToPlan(\n\tstring planName\n)","VB":"Public Shared Sub GoToPlan ( \n\tplanName As String\n)","C++":"public:\nstatic void GoToPlan(\n\tString^ planName\n)"},"arguments":{"planName":{"type":"SystemString","description":"The name of the plan."}},"type":" The name of the plan.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_PlanExists","summary":"\r\n            Check if a plan exists for the constituent.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"plan"},"returns":"True if the plan exists, false otherwise.","params":{"syntax":{"C#":"public static bool PlanExists(\n\tTableRow plan\n)","VB":"Public Shared Function PlanExists ( \n\tplan As TableRow\n) As Boolean","C++":"public:\nstatic bool PlanExists(\n\tTableRow^ plan\n)"},"arguments":{"plan":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the plan exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ConstituentPanel_StartToAddAPlan","summary":"\r\n            Start to add a plan to the prospect constituent.\r\n            ","param":{"_":"The caption of the add menu item for the type of plan to add.","name":"planType"},"params":{"syntax":{"C#":"public static void StartToAddAPlan(\n\tstring planType\n)","VB":"Public Shared Sub StartToAddAPlan ( \n\tplanType As String\n)","C++":"public:\nstatic void StartToAddAPlan(\n\tString^ planType\n)"},"arguments":{"planType":{"type":"SystemString","description":"The caption of the add menu item for the type of plan to add."}},"type":" The caption of the add menu item for the type of plan to add.","references":{"T_Blueshirt_Core_Crm_ConstituentPanel.htm":"ConstituentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_EventManagementTemplatesPanel","summary":"\r\n            Class to handle interactions for the 'Event Management Templates' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmEventManagementTemplatesPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The EventManagementTemplatesPanel type exposes the following members.","constructors":{"EventManagementTemplatesPanel":{"value":"Initializes a new instance of the EventManagementTemplatesPanel class","description":"Initializes a new instance of the EventManagementTemplatesPanel class"}},"methods":{"AddTemplate":{"value":"\n            Add an event management template with a single level labeled 'Default'\n            ","description":"\n            Add an event management template with a single level labeled 'Default'\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"TemplateExists":{"value":"\n            Check if an event management template exists.\n            ","description":"\n            Check if an event management template exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_TemplateExists","summary":"\r\n            Check if an event management template exists.\r\n            ","param":{"_":"The name of the event management template.","name":"templateName"},"returns":"True if the template exists, false otherwise.","params":{"syntax":{"C#":"public static bool TemplateExists(\n\tstring templateName\n)","VB":"Public Shared Function TemplateExists ( \n\ttemplateName As String\n) As Boolean","C++":"public:\nstatic bool TemplateExists(\n\tString^ templateName\n)"},"arguments":{"templateName":{"type":"SystemString","description":"The name of the event management template."}},"return_val":{"type":" Boolean","description":"True if the template exists, false otherwise."},"type":" The name of the event management template.Return Value","references":{"T_Blueshirt_Core_Crm_EventManagementTemplatesPanel.htm":"EventManagementTemplatesPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventManagementTemplatesPanel_AddTemplate","summary":"\r\n            Add an event management template with a single level labeled 'Default'\r\n            ","param":{"_":"The name of the template to add.","name":"templateName"},"params":{"syntax":{"C#":"public static void AddTemplate(\n\tstring templateName\n)","VB":"Public Shared Sub AddTemplate ( \n\ttemplateName As String\n)","C++":"public:\nstatic void AddTemplate(\n\tString^ templateName\n)"},"arguments":{"templateName":{"type":"SystemString","description":"The name of the template to add."}},"type":" The name of the template to add.","references":{"T_Blueshirt_Core_Crm_EventManagementTemplatesPanel.htm":"EventManagementTemplatesPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_EventPanel","summary":"\r\n            Class to handle interactions for the 'Event' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmEventPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The EventPanel type exposes the following members.","constructors":{"EventPanel":{"value":"Initializes a new instance of the EventPanel class","description":"Initializes a new instance of the EventPanel class"}},"methods":{"AddCoordinator":{"value":"\n            Add a coordinator.\n            ","description":"\n            Add a coordinator.\n            "},"AddExpense":{"value":"\n            Add an expense under the 'Expenses' tab.\n            ","description":"\n            Add an expense under the 'Expenses' tab.\n            "},"AddPreference":{"value":"\n            Add a Preference to an Event under the 'Options' tab\n            ","description":"\n            Add a Preference to an Event under the 'Options' tab\n            "},"AddRegistrant":{"value":"\n            Start to add a registrant by clicking the add button under the 'Registrations' tab.\n            ","description":"\n            Start to add a registrant by clicking the add button under the 'Registrations' tab.\n            "},"AddRegistrationOption":{"value":"\n            Add a registration option.\n            ","description":"\n            Add a registration option.\n            "},"AddTaskDialog":{"value":"\n            Initiate the dialog for adding a task on the 'Tasks/Coordinators' tab.\n            \n            Note: This is technically a different dialog than the dialog for editing a task.\n            ","description":"\n            Initiate the dialog for adding a task on the 'Tasks/Coordinators' tab.\n            \n            Note: This is technically a different dialog than the dialog for editing a task.\n            "},"CoordinatorExists":{"value":"\n            Check if the event record panel has the provided coordinator listed.\n            ","description":"\n            Check if the event record panel has the provided coordinator listed.\n            "},"CopyRegistrationOptions":{"value":"\n            Copy the registration options from another existing event.\n            ","description":"\n            Copy the registration options from another existing event.\n            "},"EditTask":{"value":"\n            Open the 'Edit task' dialog for task in the 'Tasks/Coordinators' tab.\n            \n            Note: This is technically a different dialog than the dialog for adding a task.\n            ","description":"\n            Open the 'Edit task' dialog for task in the 'Tasks/Coordinators' tab.\n            \n            Note: This is technically a different dialog than the dialog for adding a task.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"ExpenseExists":{"value":"\n            Check if an expense exists in the 'Expenses' tab.\n            ","description":"\n            Check if an expense exists in the 'Expenses' tab.\n            "},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsEventName":{"value":"\n            Check if the event record panel has the provided name.\n            ","description":"\n            Check if the event record panel has the provided name.\n            "},"IsLocation":{"value":"\n            Check if the event record panel occurs at the provided location.\n            ","description":"\n            Check if the event record panel occurs at the provided location.\n            "},"IsStartDate":{"value":"\n            Check if the event record panel starts on the provided start date.\n            ","description":"\n            Check if the event record panel starts on the provided start date.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PreferenceExists":{"value":"\n            Check if a preference exists under the 'Options' tab of the current Event Panel.\n            ","description":"\n            Check if a preference exists under the 'Options' tab of the current Event Panel.\n            "},"RegistrationOptionExists":{"value":"\n            Check if a registration option exists.\n            ","description":"\n            Check if a registration option exists.\n            "},"ReminderExists":{"value":"\n            Check if a reminder exists on task in the 'Tasks/Coordinators' tab.\n            ","description":"\n            Check if a reminder exists on task in the 'Tasks/Coordinators' tab.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddCoordinator","summary":"\r\n            Add a coordinator.\r\n            ","param":{"_":"The last name of the constituent to add as a coordinator.","name":"constituentLastName"},"params":{"syntax":{"C#":"public static void AddCoordinator(\n\tstring constituentLastName\n)","VB":"Public Shared Sub AddCoordinator ( \n\tconstituentLastName As String\n)","C++":"public:\nstatic void AddCoordinator(\n\tString^ constituentLastName\n)"},"arguments":{"constituentLastName":{"type":"SystemString","description":"The last name of the constituent to add as a coordinator."}},"type":" The last name of the constituent to add as a coordinator.","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_CoordinatorExists","summary":"\r\n            Check if the event record panel has the provided coordinator listed.\r\n            ","param":{"_":"The name of coordinator.","name":"coordinatorName"},"returns":"True if the coordinator exists, false otherwise.","params":{"syntax":{"C#":"public static bool CoordinatorExists(\n\tstring coordinatorName\n)","VB":"Public Shared Function CoordinatorExists ( \n\tcoordinatorName As String\n) As Boolean","C++":"public:\nstatic bool CoordinatorExists(\n\tString^ coordinatorName\n)"},"arguments":{"coordinatorName":{"type":"SystemString","description":"The name of coordinator."}},"return_val":{"type":" Boolean","description":"True if the coordinator exists, false otherwise."},"type":" The name of coordinator.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_IsEventName","summary":"\r\n            Check if the event record panel has the provided name.\r\n            ","param":{"_":"The event name value to check for.","name":"eventName"},"returns":"True if the event has the provided name, false otherwise.","params":{"syntax":{"C#":"public static bool IsEventName(\n\tstring eventName\n)","VB":"Public Shared Function IsEventName ( \n\teventName As String\n) As Boolean","C++":"public:\nstatic bool IsEventName(\n\tString^ eventName\n)"},"arguments":{"eventName":{"type":"SystemString","description":"The event name value to check for."}},"return_val":{"type":" Boolean","description":"True if the event has the provided name, false otherwise."},"type":" The event name value to check for.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_IsStartDate","summary":"\r\n            Check if the event record panel starts on the provided start date.\r\n            ","param":{"_":"The start date value to check for.","name":"startDate"},"returns":"True if the event starts on the start date, false otherwise.","params":{"syntax":{"C#":"public static bool IsStartDate(\n\tstring startDate\n)","VB":"Public Shared Function IsStartDate ( \n\tstartDate As String\n) As Boolean","C++":"public:\nstatic bool IsStartDate(\n\tString^ startDate\n)"},"arguments":{"startDate":{"type":"SystemString","description":"The start date value to check for."}},"return_val":{"type":" Boolean","description":"True if the event starts on the start date, false otherwise."},"type":" The start date value to check for.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_IsLocation","summary":"\r\n            Check if the event record panel occurs at the provided location.\r\n            ","param":{"_":"The location to check for.","name":"location"},"returns":"True if the event occurs at the location, false otherwise","params":{"syntax":{"C#":"public static bool IsLocation(\n\tstring location\n)","VB":"Public Shared Function IsLocation ( \n\tlocation As String\n) As Boolean","C++":"public:\nstatic bool IsLocation(\n\tString^ location\n)"},"arguments":{"location":{"type":"SystemString","description":"The location to check for."}},"return_val":{"type":" Boolean","description":"True if the event occurs at the location, false otherwise"},"type":" The location to check for.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddRegistrationOption","summary":"\r\n            Add a registration option.\r\n            ","param":{"_":"Mapping of field captions to their desired values.","name":"option"},"params":{"syntax":{"C#":"public static void AddRegistrationOption(\n\tTableRow option\n)","VB":"Public Shared Sub AddRegistrationOption ( \n\toption As TableRow\n)","C++":"public:\nstatic void AddRegistrationOption(\n\tTableRow^ option\n)"},"arguments":{"option":{"type":"TableRow","description":"Mapping of field captions to their desired values."}},"type":" TableRowMapping of field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_RegistrationOptionExists","summary":"\r\n            Check if a registration option exists.\r\n            ","param":{"_":"Mapping a column headers to a single row's values.","name":"option"},"returns":"True if the registration option exists, false otherwise.","params":{"syntax":{"C#":"public static bool RegistrationOptionExists(\n\tTableRow option\n)","VB":"Public Shared Function RegistrationOptionExists ( \n\toption As TableRow\n) As Boolean","C++":"public:\nstatic bool RegistrationOptionExists(\n\tTableRow^ option\n)"},"arguments":{"option":{"type":"TableRow","description":"Mapping a column headers to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the registration option exists, false otherwise."},"type":" TableRowMapping a column headers to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_CopyRegistrationOptions","summary":"\r\n            Copy the registration options from another existing event.\r\n            ","param":{"_":"The name of the event to copy the registration options from.","name":"copyFromEventName"},"params":{"syntax":{"C#":"public static void CopyRegistrationOptions(\n\tstring copyFromEventName\n)","VB":"Public Shared Sub CopyRegistrationOptions ( \n\tcopyFromEventName As String\n)","C++":"public:\nstatic void CopyRegistrationOptions(\n\tString^ copyFromEventName\n)"},"arguments":{"copyFromEventName":{"type":"SystemString","description":"The name of the event to copy the registration options from."}},"type":" The name of the event to copy the registration options from.","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddExpense","summary":"\r\n            Add an expense under the 'Expenses' tab.\r\n            ","param":{"_":"Mapping of the 'Add an expese' dialogs field captions to their desired values.","name":"expense"},"params":{"syntax":{"C#":"public static void AddExpense(\n\tTableRow expense\n)","VB":"Public Shared Sub AddExpense ( \n\texpense As TableRow\n)","C++":"public:\nstatic void AddExpense(\n\tTableRow^ expense\n)"},"arguments":{"expense":{"type":"TableRow","description":"Mapping of the &apos;Add an expese&apos; dialogs field captions to their desired values."}},"type":" TableRowMapping of the 'Add an expese' dialogs field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_ExpenseExists","summary":"\r\n            Check if an expense exists in the 'Expenses' tab.\r\n            ","param":{"_":"Mapping of the column captions to a row's values.","name":"expense"},"returns":"True if the expense exists, false otherwise.","params":{"syntax":{"C#":"public static bool ExpenseExists(\n\tTableRow expense\n)","VB":"Public Shared Function ExpenseExists ( \n\texpense As TableRow\n) As Boolean","C++":"public:\nstatic bool ExpenseExists(\n\tTableRow^ expense\n)"},"arguments":{"expense":{"type":"TableRow","description":"Mapping of the column captions to a row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the expense exists, false otherwise."},"type":" TableRowMapping of the column captions to a row's values.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddTaskDialog","summary":"\r\n            Initiate the dialog for adding a task on the 'Tasks/Coordinators' tab.\r\n            \r\n            Note: This is technically a different dialog than the dialog for editing a task.\r\n            ","params":{"syntax":{"C#":"public static void AddTaskDialog()","VB":"Public Shared Sub AddTaskDialog","C++":"public:\nstatic void AddTaskDialog()"},"references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_EditTask","summary":"\r\n            Open the 'Edit task' dialog for task in the 'Tasks/Coordinators' tab.\r\n            \r\n            Note: This is technically a different dialog than the dialog for adding a task.\r\n            ","param":{"_":"The name of task to edit.","name":"taskName"},"params":{"syntax":{"C#":"public static void EditTask(\n\tstring taskName\n)","VB":"Public Shared Sub EditTask ( \n\ttaskName As String\n)","C++":"public:\nstatic void EditTask(\n\tString^ taskName\n)"},"arguments":{"taskName":{"type":"SystemString","description":"The name of task to edit."}},"type":" The name of task to edit.","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_ReminderExists","summary":"\r\n            Check if a reminder exists on task in the 'Tasks/Coordinators' tab.\r\n            ","param":[{"_":"The name of task to check for the reminder on.","name":"taskName"},{"_":"The complete title of the reminder to check for.","name":"reminderTitle"}],"returns":"True if the reminder exists on the task, false otherwise.","params":{"syntax":{"C#":"public static bool ReminderExists(\n\tstring taskName,\n\tstring reminderTitle\n)","VB":"Public Shared Function ReminderExists ( \n\ttaskName As String,\n\treminderTitle As String\n) As Boolean","C++":"public:\nstatic bool ReminderExists(\n\tString^ taskName, \n\tString^ reminderTitle\n)"},"arguments":{"taskName":{"type":"SystemString","description":"The name of task to check for the reminder on."},"reminderTitle":{"type":"SystemString","description":"The complete title of the reminder to check for."}},"return_val":{"type":" Boolean","description":"True if the reminder exists on the task, false otherwise."},"type":" The name of task to check for the reminder on.reminderTitle","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_SelectTask","summary":"\r\n            Select a task.\r\n            ","param":{"_":"The row's value for the task under the 'Name' column.","name":"taskName"}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddPreference","summary":"\r\n            Add a Preference to an Event under the 'Options' tab\r\n            ","param":[{"_":"The name of the preference to add.","name":"name"},{"_":"Table where each TableRow corresponds to a desired grid row's values in the 'Add a preference' dialog.","name":"preferences"}],"params":{"syntax":{"C#":"public static void AddPreference(\n\tstring name,\n\tTable preferences\n)","VB":"Public Shared Sub AddPreference ( \n\tname As String,\n\tpreferences As Table\n)","C++":"public:\nstatic void AddPreference(\n\tString^ name, \n\tTable^ preferences\n)"},"arguments":{"name":{"type":"SystemString","description":"The name of the preference to add."},"preferences":{"type":"Table","description":"Table where each TableRow corresponds to a desired grid row&apos;s values in the &apos;Add a preference&apos; dialog."}},"type":" The name of the preference to add.preferences","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_PreferenceExists","summary":"\r\n            Check if a preference exists under the 'Options' tab of the current Event Panel.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"preference"},"returns":"True if the preference exists, false otherwise.","params":{"syntax":{"C#":"public static bool PreferenceExists(\n\tTableRow preference\n)","VB":"Public Shared Function PreferenceExists ( \n\tpreference As TableRow\n) As Boolean","C++":"public:\nstatic bool PreferenceExists(\n\tTableRow^ preference\n)"},"arguments":{"preference":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the preference exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_EventPanel_AddRegistrant","summary":"\r\n            Start to add a registrant by clicking the add button under the 'Registrations' tab.\r\n            ","params":{"syntax":{"C#":"public static void AddRegistrant()","VB":"Public Shared Sub AddRegistrant","C++":"public:\nstatic void AddRegistrant()"},"references":{"T_Blueshirt_Core_Crm_EventPanel.htm":"EventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_InformationLibraryPanel","summary":"\r\n            Class to handle interactions for the 'Information Library' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmInformationLibraryPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The InformationLibraryPanel type exposes the following members.","constructors":{"InformationLibraryPanel":{"value":"Initializes a new instance of the InformationLibraryPanel class","description":"Initializes a new instance of the InformationLibraryPanel class"}},"methods":{"AddAdHocQuery":{"value":"\n            Load the dialog to add an Ad-Hoc Query and select the type of query to create.\n            ","description":"\n            Load the dialog to add an Ad-Hoc Query and select the type of query to create.\n            "},"CopyQueryAsStaticSelection":{"value":"\n            Create a copy of an existing query as a static selection.\n            ","description":"\n            Create a copy of an existing query as a static selection.\n            "},"DeleteQuery(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Delete a query.\n            ","description":"\n            Delete a query.\n            "},"DeleteQuery(TableRow)":{"value":"\n            Delete a query.\n            ","description":"\n            Delete a query.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXDataListColumnValue":{"value":"\n            Given the DOM index of a datalist column and the value for that column, return an XPath\n            to append to a datalist XPath for finding that value in the requested column index.\n            \n            No element will be found if the value does not exist in this column.\n            ","description":"\n            Given the DOM index of a datalist column and the value for that column, return an XPath\n            to append to a datalist XPath for finding that value in the requested column index.\n            \n            No element will be found if the value does not exist in this column.\n            "},"getXQuery":{"value":"\n            Returns an Xpath for the highlighted Query search result.  \n            ","description":"\n            Returns an Xpath for the highlighted Query search result.  \n            "},"getXSectionDatalistRow":{"value":"\n            Formats a unique xPath to find a single datalist row.\n            ","description":"\n            Formats a unique xPath to find a single datalist row.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"QueryExists(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Check if a query exists.\n            ","description":"\n            Check if a query exists.\n            "},"QueryExists(TableRow)":{"value":"\n            Check if a query exists.\n            ","description":"\n            Check if a query exists.\n            "},"SectionDatalistRowExists(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)":{"value":"\n            Check if a datalist row exists.\n            ","description":"\n            Check if a datalist row exists.\n            "},"SectionDatalistRowExists(TableRow, String)":{"value":"\n            Check if a datalist row exists.\n            ","description":"\n            Check if a datalist row exists.\n            "},"SelectSectionDatalistRow(IDictionaryAddLanguageSpecificTextSet(\"LST2707115D_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST2707115D_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");, String)":{"value":"\n            Select a datalist row for a section.\n            ","description":"\n            Select a datalist row for a section.\n            "},"SelectSectionDatalistRow(TableRow, String)":{"value":"\n            Select a datalist row for a section.\n            ","description":"\n            Select a datalist row for a section.\n            "},"SetFilter":{"value":"","description":""},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXAllQueriesTreeRoot":{"value":"","description":""},"getXDeleteQuery":{"value":"\n            Returns an Xpath for the Delete Query menu item on a InformationLibraryPanel.\n            ","description":"\n            Returns an Xpath for the Delete Query menu item on a InformationLibraryPanel.\n            "},"getXFilterQueryField":{"value":"\n            Return an Xpath for the Query Field on the InformationLibraryPanel.\n            ","description":"\n            Return an Xpath for the Query Field on the InformationLibraryPanel.\n            "}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_AddAdHocQuery","summary":"\r\n            Load the dialog to add an Ad-Hoc Query and select the type of query to create.\r\n            ","param":{"_":"The type of query to add.","name":"type"},"params":{"syntax":{"C#":"public static void AddAdHocQuery(\n\tstring type\n)","VB":"Public Shared Sub AddAdHocQuery ( \n\ttype As String\n)","C++":"public:\nstatic void AddAdHocQuery(\n\tString^ type\n)"},"arguments":{"type":{"type":"SystemString","description":"The type of query to add."}},"type":" The type of query to add.","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_InformationLibraryPanel_getXFilterQueryField","summary":"\r\n            Return an Xpath for the Query Field on the InformationLibraryPanel.\r\n            ","params":{"syntax":{"C#":"protected static string getXFilterQueryField","VB":"Protected Shared getXFilterQueryField As String","C++":"protected:\nstatic String^ getXFilterQueryField"},"type":" String","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_InformationLibraryPanel_getXDeleteQuery","summary":"\r\n            Returns an Xpath for the Delete Query menu item on a InformationLibraryPanel.\r\n            ","params":{"syntax":{"C#":"public static string getXDeleteQuery","VB":"Public Shared getXDeleteQuery As String","C++":"public:\nstatic String^ getXDeleteQuery"},"type":" String","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_getXQuery","summary":"\r\n            Returns an Xpath for the highlighted Query search result.  \r\n            ","param":{"_":"The text of the result.","name":"text"},"returns":"","params":{"syntax":{"C#":"public static string getXQuery(\n\tstring text\n)","VB":"Public Shared Function getXQuery ( \n\ttext As String\n) As String","C++":"public:\nstatic String^ getXQuery(\n\tString^ text\n)"},"arguments":{"text":{"type":"SystemString","description":"The text of the result."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.InformationLibraryPanel.getXQuery(System.String)\"]"},"type":" The text of the result.Return Value","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_CopyQueryAsStaticSelection","summary":"\r\n            Create a copy of an existing query as a static selection.\r\n            ","param":[{"_":"The name to give to the new static selection.","name":"selection"},{"_":"The query to create a copy off.  Mapping of the column captions to a single row's values.","name":"query"}],"params":{"syntax":{"C#":"public static void CopyQueryAsStaticSelection(\n\tstring selection,\n\tIDictionary<string, string> query\n)","VB":"Public Shared Sub CopyQueryAsStaticSelection ( \n\tselection As String,\n\tquery As IDictionary(Of String, String)\n)","C++":"public:\nstatic void CopyQueryAsStaticSelection(\n\tString^ selection, \n\tIDictionary<String^, String^>^ query\n)"},"arguments":{"selection":{"type":"SystemString","description":"The name to give to the new static selection."},"query":{"type":"System.Collections.GenericIDictionaryStringString","description":"The query to create a copy off.  Mapping of the column captions to a single row&apos;s values."}},"type":" The name to give to the new static selection.query","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists","summary":"\r\n            Check if a query exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"query"},"returns":"True if the query exists, false otherwise.","params":{"syntax":{"C#":"public static bool QueryExists(\n\tIDictionary<string, string> query\n)","VB":"Public Shared Function QueryExists ( \n\tquery As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool QueryExists(\n\tIDictionary<String^, String^>^ query\n)"},"arguments":{"query":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the query exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists.htm":"QueryExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists","summary":"\r\n            Check if a query exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"query"},"returns":"True if the query exists, false otherwise.","params":{"syntax":{"C#":"public static bool QueryExists(\n\tIDictionary<string, string> query\n)","VB":"Public Shared Function QueryExists ( \n\tquery As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool QueryExists(\n\tIDictionary<String^, String^>^ query\n)"},"arguments":{"query":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the query exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_QueryExists.htm":"QueryExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery","summary":"\r\n            Delete a query.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"query"},"params":{"syntax":{"C#":"public static void DeleteQuery(\n\tIDictionary<string, string> query\n)","VB":"Public Shared Sub DeleteQuery ( \n\tquery As IDictionary(Of String, String)\n)","C++":"public:\nstatic void DeleteQuery(\n\tIDictionary<String^, String^>^ query\n)"},"arguments":{"query":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery.htm":"DeleteQuery Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery","summary":"\r\n            Delete a query.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"query"},"params":{"syntax":{"C#":"public static void DeleteQuery(\n\tIDictionary<string, string> query\n)","VB":"Public Shared Sub DeleteQuery ( \n\tquery As IDictionary(Of String, String)\n)","C++":"public:\nstatic void DeleteQuery(\n\tIDictionary<String^, String^>^ query\n)"},"arguments":{"query":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_DeleteQuery.htm":"DeleteQuery Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow","summary":"\r\n            Select a datalist row for a section.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"}],"params":{"syntax":{"C#":"protected static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Protected Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"protected:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Mapping of the column captions to a single row's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow","summary":"\r\n            Select a datalist row for a section.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"}],"params":{"syntax":{"C#":"protected static void SelectSectionDatalistRow(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Protected Shared Sub SelectSectionDatalistRow ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n)","C++":"protected:\nstatic void SelectSectionDatalistRow(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"type":" , Mapping of the column captions to a single row's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_SelectSectionDatalistRow.htm":"SelectSectionDatalistRow Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists","summary":"\r\n            Check if a datalist row exists.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"row"},{"_":"The caption of the section.","name":"sectionCaption"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"protected static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Protected Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"protected:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists","summary":"\r\n            Check if a datalist row exists.\r\n            ","param":[{"_":"Mapping of the column captions to a single row's values.","name":"rowValues"},{"_":"The caption of the section.","name":"sectionCaption"}],"returns":"True if the row exists, false otherwise.","params":{"syntax":{"C#":"protected static bool SectionDatalistRowExists(\n\tIDictionary<string, string> rowValues,\n\tstring sectionCaption\n)","VB":"Protected Shared Function SectionDatalistRowExists ( \n\trowValues As IDictionary(Of String, String),\n\tsectionCaption As String\n) As Boolean","C++":"protected:\nstatic bool SectionDatalistRowExists(\n\tIDictionary<String^, String^>^ rowValues, \n\tString^ sectionCaption\n)"},"arguments":{"rowValues":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."},"sectionCaption":{"type":"SystemString","description":"The caption of the section."}},"return_val":{"type":" Boolean","description":"True if the row exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.sectionCaption","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","Overload_Blueshirt_Core_Crm_InformationLibraryPanel_SectionDatalistRowExists.htm":"SectionDatalistRowExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_getXSectionDatalistRow","summary":"\r\n            Formats a unique xPath to find a single datalist row.\r\n            ","param":[{"_":"The caption of the section that the datalist belongs to.","name":"sectionCaption"},{"_":"Mapping of the datalist column captions to their DOM TD index.","name":"columnCaptionToIndex"},{"_":"Mapping of the datalist column captions to their values in a single row.","name":"columnCaptionToValue"}],"params":{"syntax":{"C#":"protected static string getXSectionDatalistRow(\n\tstring sectionCaption,\n\tIDictionary<string, int> columnCaptionToIndex,\n\tIDictionary<string, string> columnCaptionToValue\n)","VB":"Protected Shared Function getXSectionDatalistRow ( \n\tsectionCaption As String,\n\tcolumnCaptionToIndex As IDictionary(Of String, Integer),\n\tcolumnCaptionToValue As IDictionary(Of String, String)\n) As String","C++":"protected:\nstatic String^ getXSectionDatalistRow(\n\tString^ sectionCaption, \n\tIDictionary<String^, int>^ columnCaptionToIndex, \n\tIDictionary<String^, String^>^ columnCaptionToValue\n)"},"arguments":{"sectionCaption":{"type":"SystemString","description":"The caption of the section that the datalist belongs to."},"columnCaptionToIndex":{"type":"System.Collections.GenericIDictionaryStringInt32","description":"Mapping of the datalist column captions to their DOM TD index."},"columnCaptionToValue":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the datalist column captions to their values in a single row."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.InformationLibraryPanel.getXSectionDatalistRow(System.String,System.Collections.Generic.IDictionary{System.String,System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})\"]"},"type":" The caption of the section that the datalist belongs to.columnCaptionToIndex","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_InformationLibraryPanel_getXDataListColumnValue","summary":"\r\n            Given the DOM index of a datalist column and the value for that column, return an XPath\r\n            to append to a datalist XPath for finding that value in the requested column index.\r\n            \r\n            No element will be found if the value does not exist in this column.\r\n            ","param":[{"_":"The DOM index for the TD element representing the desired column.","name":"columnIndex"},{"_":"The value corresponding the provided column.  ","name":"columnValue"}],"params":{"syntax":{"C#":"protected static string getXDataListColumnValue(\n\tint columnIndex,\n\tstring columnValue\n)","VB":"Protected Shared Function getXDataListColumnValue ( \n\tcolumnIndex As Integer,\n\tcolumnValue As String\n) As String","C++":"protected:\nstatic String^ getXDataListColumnValue(\n\tint columnIndex, \n\tString^ columnValue\n)"},"arguments":{"columnIndex":{"type":"SystemInt32","description":"The DOM index for the TD element representing the desired column."},"columnValue":{"type":"SystemString","description":"The value corresponding the provided column.  "}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.InformationLibraryPanel.getXDataListColumnValue(System.Int32,System.String)\"]"},"type":" The DOM index for the TD element representing the desired column.columnValue","references":{"T_Blueshirt_Core_Crm_InformationLibraryPanel.htm":"InformationLibraryPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_LocationsPanel","summary":"\r\n            Class to handle interactions for the 'Locations' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmLocationsPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The LocationsPanel type exposes the following members.","constructors":{"LocationsPanel":{"value":"Initializes a new instance of the LocationsPanel class","description":"Initializes a new instance of the LocationsPanel class"}},"methods":{"AddLocation":{"value":"\n            Add an event location.\n            ","description":"\n            Add an event location.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"LocationExists(String)":{"value":"\n            Checks if a location exists.\n            ","description":"\n            Checks if a location exists.\n            "},"LocationExists(TableRow)":{"value":"\n            Checks if a location exists.\n            ","description":"\n            Checks if a location exists.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_LocationsPanel_LocationExists","summary":"\r\n            Checks if a location exists.\r\n            ","param":{"_":"The name of the location.","name":"locationName"},"returns":"True if the location exists, false otherwise.","params":{"syntax":{"C#":"public static bool LocationExists(\n\tstring locationName\n)","VB":"Public Shared Function LocationExists ( \n\tlocationName As String\n) As Boolean","C++":"public:\nstatic bool LocationExists(\n\tString^ locationName\n)"},"arguments":{"locationName":{"type":"SystemString","description":"The name of the location."}},"return_val":{"type":" Boolean","description":"True if the location exists, false otherwise."},"type":" The name of the location.Return Value","references":{"T_Blueshirt_Core_Crm_LocationsPanel.htm":"LocationsPanel Class","Overload_Blueshirt_Core_Crm_LocationsPanel_LocationExists.htm":"LocationExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_LocationsPanel_LocationExists","summary":"\r\n            Checks if a location exists.\r\n            ","param":{"_":"Mapping of the column captions to the desired location's values.","name":"location"},"returns":"True if the location exists, false otherwise.","params":{"syntax":{"C#":"public static bool LocationExists(\n\tstring locationName\n)","VB":"Public Shared Function LocationExists ( \n\tlocationName As String\n) As Boolean","C++":"public:\nstatic bool LocationExists(\n\tString^ locationName\n)"},"arguments":{"locationName":{"type":"SystemString","description":"The name of the location."}},"return_val":{"type":" Boolean","description":"True if the location exists, false otherwise."},"type":" The name of the location.Return Value","references":{"T_Blueshirt_Core_Crm_LocationsPanel.htm":"LocationsPanel Class","Overload_Blueshirt_Core_Crm_LocationsPanel_LocationExists.htm":"LocationExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_LocationsPanel_AddLocation","summary":"\r\n            Add an event location.\r\n            ","param":{"_":"The name of the location.","name":"locationName"},"params":{"syntax":{"C#":"public static void AddLocation(\n\tstring locationName\n)","VB":"Public Shared Sub AddLocation ( \n\tlocationName As String\n)","C++":"public:\nstatic void AddLocation(\n\tString^ locationName\n)"},"arguments":{"locationName":{"type":"SystemString","description":"The name of the location."}},"type":" The name of the location.","references":{"T_Blueshirt_Core_Crm_LocationsPanel.htm":"LocationsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MajorGivingSetupPanel","summary":"\r\n            Class to handle interactions for the 'Major Giving Setup' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmMajorGivingSetupPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MajorGivingSetupPanel type exposes the following members.","constructors":{"MajorGivingSetupPanel":{"value":"Initializes a new instance of the MajorGivingSetupPanel class","description":"Initializes a new instance of the MajorGivingSetupPanel class"}},"methods":{"AddPlanOutline":{"value":"\n            Add a major giving plan outline.\n            ","description":"\n            Add a major giving plan outline.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PlanOutlineExists":{"value":"\n            Check if a major giving plan outline exists\n            ","description":"\n            Check if a major giving plan outline exists\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingSetupPanel_AddPlanOutline","summary":"\r\n            Add a major giving plan outline.\r\n            ","param":[{"_":"The name of the plan outline.","name":"planName"},{"_":"Table where each row represents a step to add.  Row keys correspond to the column captions.","name":"steps"}],"params":{"syntax":{"C#":"public static void AddPlanOutline(\n\tstring planName,\n\tTable steps\n)","VB":"Public Shared Sub AddPlanOutline ( \n\tplanName As String,\n\tsteps As Table\n)","C++":"public:\nstatic void AddPlanOutline(\n\tString^ planName, \n\tTable^ steps\n)"},"arguments":{"planName":{"type":"SystemString","description":"The name of the plan outline."},"steps":{"type":"Table","description":"Table where each row represents a step to add.  Row keys correspond to the column captions."}},"type":" The name of the plan outline.steps","references":{"T_Blueshirt_Core_Crm_MajorGivingSetupPanel.htm":"MajorGivingSetupPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MajorGivingSetupPanel_PlanOutlineExists","summary":"\r\n            Check if a major giving plan outline exists\r\n            ","param":{"_":"Mapping of field caption keys to their values.","name":"plan"},"returns":"True if the plan exists, false otherwise.","params":{"syntax":{"C#":"public static bool PlanOutlineExists(\n\tTableRow plan\n)","VB":"Public Shared Function PlanOutlineExists ( \n\tplan As TableRow\n) As Boolean","C++":"public:\nstatic bool PlanOutlineExists(\n\tTableRow^ plan\n)"},"arguments":{"plan":{"type":"TableRow","description":"Mapping of field caption keys to their values."}},"return_val":{"type":" Boolean","description":"True if the plan exists, false otherwise."},"type":" TableRowMapping of field caption keys to their values.Return Value","references":{"T_Blueshirt_Core_Crm_MajorGivingSetupPanel.htm":"MajorGivingSetupPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel","summary":"\r\n            Class to handle interactions for the 'Marketing Acknowledgements' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmMarketingAcknowledgementsPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAcknowledgementsPanel type exposes the following members.","constructors":{"MarketingAcknowledgementsPanel":{"value":"Initializes a new instance of the MarketingAcknowledgementsPanel class","description":"Initializes a new instance of the MarketingAcknowledgementsPanel class"}},"methods":{"AddTemplate":{"value":"\n            Start to add a new marketing acknowledgement template.\n            ","description":"\n            Start to add a new marketing acknowledgement template.\n            "},"DeleteTemplate":{"value":"\n            Delete a marketing acknowledgement template.\n            ","description":"\n            Delete a marketing acknowledgement template.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"TemplateExists":{"value":"\n            Check if a marketing acknowledgement template exists.\n            ","description":"\n            Check if a marketing acknowledgement template exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_AddTemplate","summary":"\r\n            Start to add a new marketing acknowledgement template.\r\n            ","params":{"syntax":{"C#":"public static void AddTemplate()","VB":"Public Shared Sub AddTemplate","C++":"public:\nstatic void AddTemplate()"},"references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel.htm":"MarketingAcknowledgementsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_TemplateExists","summary":"\r\n            Check if a marketing acknowledgement template exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"template"},"returns":"True if the template exists, false otherwise.","params":{"syntax":{"C#":"public static bool TemplateExists(\n\tTableRow template\n)","VB":"Public Shared Function TemplateExists ( \n\ttemplate As TableRow\n) As Boolean","C++":"public:\nstatic bool TemplateExists(\n\tTableRow^ template\n)"},"arguments":{"template":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the template exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel.htm":"MarketingAcknowledgementsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel_DeleteTemplate","summary":"\r\n            Delete a marketing acknowledgement template.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"template"},"params":{"syntax":{"C#":"public static void DeleteTemplate(\n\tTableRow template\n)","VB":"Public Shared Sub DeleteTemplate ( \n\ttemplate As TableRow\n)","C++":"public:\nstatic void DeleteTemplate(\n\tTableRow^ template\n)"},"arguments":{"template":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" TableRowMapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementsPanel.htm":"MarketingAcknowledgementsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel","summary":"\r\n            Class to handle interactions for the 'Marketing Acknowledgement Template' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmMarketingAcknowledgementTemplatePanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MarketingAcknowledgementTemplatePanel type exposes the following members.","constructors":{"MarketingAcknowledgementTemplatePanel":{"value":"Initializes a new instance of the MarketingAcknowledgementTemplatePanel class","description":"Initializes a new instance of the MarketingAcknowledgementTemplatePanel class"}},"methods":{"AddAcknowledgementRule":{"value":"\n            Start to add an acknowledgement rule to the template.\n            ","description":"\n            Start to add an acknowledgement rule to the template.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ProcessAcknowledgement":{"value":"\n            Start the process for the current acknowledgement template.\n            ","description":"\n            Start the process for the current acknowledgement template.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_AddAcknowledgementRule","summary":"\r\n            Start to add an acknowledgement rule to the template.\r\n            ","params":{"syntax":{"C#":"public static void AddAcknowledgementRule()","VB":"Public Shared Sub AddAcknowledgementRule","C++":"public:\nstatic void AddAcknowledgementRule()"},"references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel.htm":"MarketingAcknowledgementTemplatePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel_ProcessAcknowledgement","summary":"\r\n            Start the process for the current acknowledgement template.\r\n            ","params":{"syntax":{"C#":"public static void ProcessAcknowledgement()","VB":"Public Shared Sub ProcessAcknowledgement","C++":"public:\nstatic void ProcessAcknowledgement()"},"references":{"T_Blueshirt_Core_Crm_MarketingAcknowledgementTemplatePanel.htm":"MarketingAcknowledgementTemplatePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_MultiEventPanel","summary":"\r\n            Class to handle interactions for the 'Multi-Event' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmMultiEventPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The MultiEventPanel type exposes the following members.","constructors":{"MultiEventPanel":{"value":"Initializes a new instance of the MultiEventPanel class","description":"Initializes a new instance of the MultiEventPanel class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsHierarchy":{"value":"\n            Check if the multi-event has the provided event hierarchy.\n            ","description":"\n            Check if the multi-event has the provided event hierarchy.\n            "},"IsMultiEventName":{"value":"\n            Check if the multi event record page has the provided name.\n            ","description":"\n            Check if the multi event record page has the provided name.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiEventPanel_IsMultiEventName","summary":"\r\n            Check if the multi event record page has the provided name.\r\n            ","param":{"_":"The multi event name value to check for.","name":"name"},"returns":"True if the multi event has the provided name, false otherwise.","params":{"syntax":{"C#":"public static bool IsMultiEventName(\n\tstring name\n)","VB":"Public Shared Function IsMultiEventName ( \n\tname As String\n) As Boolean","C++":"public:\nstatic bool IsMultiEventName(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The multi event name value to check for."}},"return_val":{"type":" Boolean","description":"True if the multi event has the provided name, false otherwise."},"type":" The multi event name value to check for.Return Value","references":{"T_Blueshirt_Core_Crm_MultiEventPanel.htm":"MultiEventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiEventPanel_IsHierarchy","summary":"\r\n            Check if the multi-event has the provided event hierarchy.\r\n            ","param":{"_":"The hierarchy to validate.  A column 'event' should exist for the event\r\n            name with a column 'parent' mapping the expected parent of the event.  If no value is provided in the 'parent' column,\r\n            it is assumed that this is the root event.","name":"hierarchy"},"returns":"True if the multi-event has the provided hierarchy, false otherwise.","params":{"syntax":{"C#":"public static bool IsHierarchy(\n\tTable hierarchy\n)","VB":"Public Shared Function IsHierarchy ( \n\thierarchy As Table\n) As Boolean","C++":"public:\nstatic bool IsHierarchy(\n\tTable^ hierarchy\n)"},"arguments":{"hierarchy":{"type":"Table","description":"The hierarchy to validate.  A column &apos;event&apos; should exist for the event\n            name with a column &apos;parent&apos; mapping the expected parent of the event.  If no value is provided in the &apos;parent&apos; column,\n            it is assumed that this is the root event."}},"return_val":{"type":" Boolean","description":"True if the multi-event has the provided hierarchy, false otherwise."},"type":" TableThe hierarchy to validate.  A column 'event' should exist for the event\n            name with a column 'parent' mapping the expected parent of the event.  If no value is provided in the 'parent' column,\n            it is assumed that this is the root event.Return Value","references":{"T_Blueshirt_Core_Crm_MultiEventPanel.htm":"MultiEventPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_MultiEventPanel_IsRootEvent","summary":"\r\n            Check if the provided event name is displayed as the root event for the Multi-Event page\r\n            "},{"name":"M_Blueshirt_Core_Crm_MultiEventPanel_IsChildOfParent","summary":"\r\n            Check if the provided event is listed as a child of the expected parent event.\r\n            "},{"name":"T_Blueshirt_Core_Crm_PackagesPanel","summary":"\r\n            Class to handle interactions for the 'Packages' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmPackagesPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PackagesPanel type exposes the following members.","constructors":{"PackagesPanel":{"value":"Initializes a new instance of the PackagesPanel class","description":"Initializes a new instance of the PackagesPanel class"}},"methods":{"AddMailPackage":{"value":"\n            Start to add a mail package.\n            ","description":"\n            Start to add a mail package.\n            "},"DeletePackage(IDictionaryAddLanguageSpecificTextSet(\"LST920513D2_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST920513D2_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Delete a package.\n            ","description":"\n            Delete a package.\n            "},"DeletePackage(TableRow)":{"value":"\n            Delete a package.\n            ","description":"\n            Delete a package.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PackageExists(IDictionaryAddLanguageSpecificTextSet(\"LST920513D2_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(\");String, StringAddLanguageSpecificTextSet(\"LST920513D2_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)\");)":{"value":"\n            Check if a package exists.\n            ","description":"\n            Check if a package exists.\n            "},"PackageExists(TableRow)":{"value":"\n            Check if a package exists.\n            ","description":"\n            Check if a package exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_PackagesPanel_packagesColumnCaptionToIndex","summary":"\r\n            Static mapping of the column captions to their DOM index for the 'Packages' datalist.\r\n            "},{"name":"M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage","summary":"\r\n            Delete a package.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"package"},"params":{"syntax":{"C#":"public static void DeletePackage(\n\tIDictionary<string, string> package\n)","VB":"Public Shared Sub DeletePackage ( \n\tpackage As IDictionary(Of String, String)\n)","C++":"public:\nstatic void DeletePackage(\n\tIDictionary<String^, String^>^ package\n)"},"arguments":{"package":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_PackagesPanel.htm":"PackagesPanel Class","Overload_Blueshirt_Core_Crm_PackagesPanel_DeletePackage.htm":"DeletePackage Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PackagesPanel_DeletePackage","summary":"\r\n            Delete a package.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"package"},"params":{"syntax":{"C#":"public static void DeletePackage(\n\tIDictionary<string, string> package\n)","VB":"Public Shared Sub DeletePackage ( \n\tpackage As IDictionary(Of String, String)\n)","C++":"public:\nstatic void DeletePackage(\n\tIDictionary<String^, String^>^ package\n)"},"arguments":{"package":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_PackagesPanel.htm":"PackagesPanel Class","Overload_Blueshirt_Core_Crm_PackagesPanel_DeletePackage.htm":"DeletePackage Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PackagesPanel_AddMailPackage","summary":"\r\n            Start to add a mail package.\r\n            ","params":{"syntax":{"C#":"public static void AddMailPackage()","VB":"Public Shared Sub AddMailPackage","C++":"public:\nstatic void AddMailPackage()"},"references":{"T_Blueshirt_Core_Crm_PackagesPanel.htm":"PackagesPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PackagesPanel_PackageExists","summary":"\r\n            Check if a package exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"package"},"returns":"True if the package exists, false otherwise.","params":{"syntax":{"C#":"public static bool PackageExists(\n\tIDictionary<string, string> package\n)","VB":"Public Shared Function PackageExists ( \n\tpackage As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool PackageExists(\n\tIDictionary<String^, String^>^ package\n)"},"arguments":{"package":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the package exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_PackagesPanel.htm":"PackagesPanel Class","Overload_Blueshirt_Core_Crm_PackagesPanel_PackageExists.htm":"PackageExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PackagesPanel_PackageExists","summary":"\r\n            Check if a package exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"package"},"returns":"True if the package exists, false otherwise","params":{"syntax":{"C#":"public static bool PackageExists(\n\tIDictionary<string, string> package\n)","VB":"Public Shared Function PackageExists ( \n\tpackage As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool PackageExists(\n\tIDictionary<String^, String^>^ package\n)"},"arguments":{"package":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the package exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_PackagesPanel.htm":"PackagesPanel Class","Overload_Blueshirt_Core_Crm_PackagesPanel_PackageExists.htm":"PackageExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PlanPanel","summary":"\r\n            Class to handle interactions for the 'Plan' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmPlanPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PlanPanel type exposes the following members.","constructors":{"PlanPanel":{"value":"Initializes a new instance of the PlanPanel class","description":"Initializes a new instance of the PlanPanel class"}},"methods":{"AddCompletedStep":{"value":"\n            Add a completed step to the plan.\n            ","description":"\n            Add a completed step to the plan.\n            "},"CompletedStepExists":{"value":"\n            Check if a completed step exists.\n            ","description":"\n            Check if a completed step exists.\n            "},"EditSteps":{"value":"\n            Click the 'Edit steps' button for the 'Planned and pending steps' section.\n            ","description":"\n            Click the 'Edit steps' button for the 'Planned and pending steps' section.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PlannedStepExists":{"value":"\n            Check if a planned step exists.\n            ","description":"\n            Check if a planned step exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PlanPanel_AddCompletedStep","summary":"\r\n            Add a completed step to the plan.\r\n            ","param":{"_":"Mapping of the field captions for adding a step to their desired values.","name":"step"},"params":{"syntax":{"C#":"public static void AddCompletedStep(\n\tTableRow step\n)","VB":"Public Shared Sub AddCompletedStep ( \n\tstep As TableRow\n)","C++":"public:\nstatic void AddCompletedStep(\n\tTableRow^ step\n)"},"arguments":{"step":{"type":"TableRow","description":"Mapping of the field captions for adding a step to their desired values."}},"type":" TableRowMapping of the field captions for adding a step to their desired values.","references":{"T_Blueshirt_Core_Crm_PlanPanel.htm":"PlanPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PlanPanel_CompletedStepExists","summary":"\r\n            Check if a completed step exists.\r\n            ","param":{"_":"Mapping of the column captions for the 'Completed steps' section to a single row's values.","name":"step"},"returns":"True if the step exists, false otherwise.","params":{"syntax":{"C#":"public static bool CompletedStepExists(\n\tTableRow step\n)","VB":"Public Shared Function CompletedStepExists ( \n\tstep As TableRow\n) As Boolean","C++":"public:\nstatic bool CompletedStepExists(\n\tTableRow^ step\n)"},"arguments":{"step":{"type":"TableRow","description":"Mapping of the column captions for the &apos;Completed steps&apos; section to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the step exists, false otherwise."},"type":" TableRowMapping of the column captions for the 'Completed steps' section to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_PlanPanel.htm":"PlanPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PlanPanel_PlannedStepExists","summary":"\r\n            Check if a planned step exists.\r\n            ","param":{"_":"Mapping of the column captions for the 'Planned and pending steps' section to a single row's values.","name":"step"},"returns":"True if the step exists, false otherwise.","params":{"syntax":{"C#":"public static bool PlannedStepExists(\n\tTableRow step\n)","VB":"Public Shared Function PlannedStepExists ( \n\tstep As TableRow\n) As Boolean","C++":"public:\nstatic bool PlannedStepExists(\n\tTableRow^ step\n)"},"arguments":{"step":{"type":"TableRow","description":"Mapping of the column captions for the &apos;Planned and pending steps&apos; section to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the step exists, false otherwise."},"type":" TableRowMapping of the column captions for the 'Planned and pending steps' section to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_PlanPanel.htm":"PlanPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PlanPanel_EditSteps","summary":"\r\n            Click the 'Edit steps' button for the 'Planned and pending steps' section.\r\n            ","params":{"syntax":{"C#":"public static void EditSteps()","VB":"Public Shared Sub EditSteps","C++":"public:\nstatic void EditSteps()"},"references":{"T_Blueshirt_Core_Crm_PlanPanel.htm":"PlanPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PledgePanel","summary":"\r\n            Class to handle interactions for the 'Pledge' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmPledgePanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PledgePanel type exposes the following members.","constructors":{"PledgePanel":{"value":"Initializes a new instance of the PledgePanel class","description":"Initializes a new instance of the PledgePanel class"}},"methods":{"DesignationExists":{"value":"\n            Check if a designation exists.\n            ","description":"\n            Check if a designation exists.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsPledgeAmount":{"value":"\n            Check if the pledge is for the provided amount.\n            ","description":"\n            Check if the pledge is for the provided amount.\n            "},"IsPledgeConstituent":{"value":"\n            Check if the pledge is associated with the provided constituent.\n            Verifies by checking which constituent the header link navigates to.\n            ","description":"\n            Check if the pledge is associated with the provided constituent.\n            Verifies by checking which constituent the header link navigates to.\n            "},"IsPledgeSubtype":{"value":"\n            Check if the pledge has the provided subtype.\n            ","description":"\n            Check if the pledge has the provided subtype.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgePanel_IsPledgeConstituent","summary":"\r\n            Check if the pledge is associated with the provided constituent.\r\n            Verifies by checking which constituent the header link navigates to.\r\n            ","param":{"_":"The last name of the constituent.","name":"constituent"},"returns":"True if the pledge is associated with the provided constituent, false otherwise.","params":{"syntax":{"C#":"public static bool IsPledgeConstituent(\n\tstring constituent\n)","VB":"Public Shared Function IsPledgeConstituent ( \n\tconstituent As String\n) As Boolean","C++":"public:\nstatic bool IsPledgeConstituent(\n\tString^ constituent\n)"},"arguments":{"constituent":{"type":"SystemString","description":"The last name of the constituent."}},"return_val":{"type":" Boolean","description":"True if the pledge is associated with the provided constituent, false otherwise."},"type":" The last name of the constituent.Return Value","references":{"T_Blueshirt_Core_Crm_PledgePanel.htm":"PledgePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgePanel_IsPledgeAmount","summary":"\r\n            Check if the pledge is for the provided amount.\r\n            ","param":{"_":"The amount to check for.","name":"amount"},"returns":"True if the pledge is for the provided amount, false otherwise.","params":{"syntax":{"C#":"public static bool IsPledgeAmount(\n\tstring amount\n)","VB":"Public Shared Function IsPledgeAmount ( \n\tamount As String\n) As Boolean","C++":"public:\nstatic bool IsPledgeAmount(\n\tString^ amount\n)"},"arguments":{"amount":{"type":"SystemString","description":"The amount to check for."}},"return_val":{"type":" Boolean","description":"True if the pledge is for the provided amount, false otherwise."},"type":" The amount to check for.Return Value","references":{"T_Blueshirt_Core_Crm_PledgePanel.htm":"PledgePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgePanel_IsPledgeSubtype","summary":"\r\n            Check if the pledge has the provided subtype.\r\n            ","param":{"_":"The subtype to check for.","name":"subtype"},"returns":"True if the pledge has the subtype, false otherwise.","params":{"syntax":{"C#":"public static bool IsPledgeSubtype(\n\tstring subtype\n)","VB":"Public Shared Function IsPledgeSubtype ( \n\tsubtype As String\n) As Boolean","C++":"public:\nstatic bool IsPledgeSubtype(\n\tString^ subtype\n)"},"arguments":{"subtype":{"type":"SystemString","description":"The subtype to check for."}},"return_val":{"type":" Boolean","description":"True if the pledge has the subtype, false otherwise."},"type":" The subtype to check for.Return Value","references":{"T_Blueshirt_Core_Crm_PledgePanel.htm":"PledgePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgePanel_DesignationExists","summary":"\r\n            Check if a designation exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"designation"},"returns":"True if the designation exists, false otherwise.","params":{"syntax":{"C#":"public static bool DesignationExists(\n\tTableRow designation\n)","VB":"Public Shared Function DesignationExists ( \n\tdesignation As TableRow\n) As Boolean","C++":"public:\nstatic bool DesignationExists(\n\tTableRow^ designation\n)"},"arguments":{"designation":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the designation exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_PledgePanel.htm":"PledgePanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_PledgeSubtypePanel","summary":"\r\n            Class to handle interactions for the 'Pledge Subtype' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmPledgeSubtypePanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The PledgeSubtypePanel type exposes the following members.","constructors":{"PledgeSubtypePanel":{"value":"Initializes a new instance of the PledgeSubtypePanel class","description":"Initializes a new instance of the PledgeSubtypePanel class"}},"methods":{"AddSubtype(TableRow)":{"value":"\n            Add a pledge subtype.\n            ","description":"\n            Add a pledge subtype.\n            "},"AddSubtype(String, Boolean)":{"value":"\n            Add a pledge subtype.\n            ","description":"\n            Add a pledge subtype.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SubtypeExists(String)":{"value":"\n            Check if a subtype exists.\n            ","description":"\n            Check if a subtype exists.\n            "},"SubtypeExists(TableRow)":{"value":"\n            Check if a subtype exists.\n            ","description":"\n            Check if a subtype exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype","summary":"\r\n            Add a pledge subtype.\r\n            ","param":[{"_":"The name of the subtype.","name":"name"},{"_":"Boolean indicating whether the 'Post to GL' checkbox should bet set or not.","name":"postToGL"}],"params":{"syntax":{"C#":"public static void AddSubtype(\n\tstring name,\n\tbool postToGL\n)","VB":"Public Shared Sub AddSubtype ( \n\tname As String,\n\tpostToGL As Boolean\n)","C++":"public:\nstatic void AddSubtype(\n\tString^ name, \n\tbool postToGL\n)"},"arguments":{"name":{"type":"SystemString","description":"The name of the subtype."},"postToGL":{"type":"SystemBoolean","description":"Boolean indicating whether the &apos;Post to GL&apos; checkbox should bet set or not."}},"type":" The name of the subtype.postToGL","references":{"T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm":"PledgeSubtypePanel Class","Overload_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype.htm":"AddSubtype Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype","summary":"\r\n            Add a pledge subtype.\r\n            ","param":{"_":"Mapping of the 'Add a pledge subtype' field captions to their values.","name":"subtype"},"params":{"syntax":{"C#":"public static void AddSubtype(\n\tstring name,\n\tbool postToGL\n)","VB":"Public Shared Sub AddSubtype ( \n\tname As String,\n\tpostToGL As Boolean\n)","C++":"public:\nstatic void AddSubtype(\n\tString^ name, \n\tbool postToGL\n)"},"arguments":{"name":{"type":"SystemString","description":"The name of the subtype."},"postToGL":{"type":"SystemBoolean","description":"Boolean indicating whether the &apos;Post to GL&apos; checkbox should bet set or not."}},"type":" The name of the subtype.postToGL","references":{"T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm":"PledgeSubtypePanel Class","Overload_Blueshirt_Core_Crm_PledgeSubtypePanel_AddSubtype.htm":"AddSubtype Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists","summary":"\r\n            Check if a subtype exists.\r\n            ","param":{"_":"The name of the subtype/","name":"name"},"returns":"True if the subtype exists, false otherwise.","params":{"syntax":{"C#":"public static bool SubtypeExists(\n\tstring name\n)","VB":"Public Shared Function SubtypeExists ( \n\tname As String\n) As Boolean","C++":"public:\nstatic bool SubtypeExists(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The name of the subtype/"}},"return_val":{"type":" Boolean","description":"True if the subtype exists, false otherwise."},"type":" The name of the subtype/Return Value","references":{"T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm":"PledgeSubtypePanel Class","Overload_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists.htm":"SubtypeExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists","summary":"\r\n            Check if a subtype exists.\r\n            ","param":{"_":"Mapping of column captions to a single row's values.","name":"subtype"},"returns":"True if the subtype exists, false otherwise.","params":{"syntax":{"C#":"public static bool SubtypeExists(\n\tstring name\n)","VB":"Public Shared Function SubtypeExists ( \n\tname As String\n) As Boolean","C++":"public:\nstatic bool SubtypeExists(\n\tString^ name\n)"},"arguments":{"name":{"type":"SystemString","description":"The name of the subtype/"}},"return_val":{"type":" Boolean","description":"True if the subtype exists, false otherwise."},"type":" The name of the subtype/Return Value","references":{"T_Blueshirt_Core_Crm_PledgeSubtypePanel.htm":"PledgeSubtypePanel Class","Overload_Blueshirt_Core_Crm_PledgeSubtypePanel_SubtypeExists.htm":"SubtypeExists Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_Panels_QueryPanel","summary":"\r\n            Class to handle interactions for the 'Query' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.Crm.PanelsQueryPanel"},"namespace":{"N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The QueryPanel type exposes the following members.","constructors":{"QueryPanel":{"value":"Initializes a new instance of the QueryPanel class","description":"Initializes a new instance of the QueryPanel class"}},"methods":{"AddQuery":{"value":"","description":""},"CheckQueryPresent":{"value":"","description":""},"DeleteQuery(String)":{"value":"","description":""},"DeleteQuery(String, String)":{"value":"","description":""},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXDeleteQuery":{"value":"\n            Returns an XPath for the Delete Query menu item on a QueryPanel.  \n            \n            ","description":"\n            Returns an XPath for the Delete Query menu item on a QueryPanel.  \n            \n            "},"getXQuery":{"value":"\n            Returns an Xpath for a Query in a results row on a QueryPanel.\n            \n            ","description":"\n            Returns an Xpath for a Query in a results row on a QueryPanel.\n            \n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenQueriesTab":{"value":"","description":""},"OpenSelectionsTab":{"value":"","description":""},"SetFilter":{"value":"","description":""},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"DeleteQueryLinkElement":{"value":"","description":""},"getXAddButton":{"value":"\n            Returns an Xpath for the Add button on a QueryPanel.\n            ","description":"\n            Returns an Xpath for the Add button on a QueryPanel.\n            "},"getXAdhocQuery":{"value":"\n            Returns an Xpath for the Adhoc Query menu item on a QueryPanel.\n            ","description":"\n            Returns an Xpath for the Adhoc Query menu item on a QueryPanel.\n            "},"getXFilterQueryField":{"value":"\n            Returns an Xpath for the Query Filter field on a QueryPanel.\n            ","description":"\n            Returns an Xpath for the Query Filter field on a QueryPanel.\n            "},"QueryLinkElement":{"value":"","description":""},"YesReallyDeleteElement":{"value":"","description":""}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAddButton","summary":"\r\n            Returns an Xpath for the Add button on a QueryPanel.\r\n            ","params":{"syntax":{"C#":"public const string getXAddButton","VB":"Public Const getXAddButton As String","C++":"public:\nliteral String^ getXAddButton"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"QueryPanel Class","N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panels_QueryPanel_getXAdhocQuery","summary":"\r\n            Returns an Xpath for the Adhoc Query menu item on a QueryPanel.\r\n            ","params":{"syntax":{"C#":"public const string getXAdhocQuery","VB":"Public Const getXAdhocQuery As String","C++":"public:\nliteral String^ getXAdhocQuery"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"QueryPanel Class","N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"F_Blueshirt_Core_Crm_Panels_QueryPanel_getXFilterQueryField","summary":"\r\n            Returns an Xpath for the Query Filter field on a QueryPanel.\r\n            ","params":{"syntax":{"C#":"public const string getXFilterQueryField","VB":"Public Const getXFilterQueryField As String","C++":"public:\nliteral String^ getXFilterQueryField"},"type":" String","references":{"T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"QueryPanel Class","N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panels_QueryPanel_getXDeleteQuery","summary":"\r\n            Returns an XPath for the Delete Query menu item on a QueryPanel.  \r\n            \r\n            ","param":{"_":"The text of the Query to delete","name":"text"},"returns":"","params":{"syntax":{"C#":"public static string getXDeleteQuery(\n\tstring text\n)","VB":"Public Shared Function getXDeleteQuery ( \n\ttext As String\n) As String","C++":"public:\nstatic String^ getXDeleteQuery(\n\tString^ text\n)"},"arguments":{"text":{"type":"SystemString","description":"The text of the Query to delete"}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panels.QueryPanel.getXDeleteQuery(System.String)\"]"},"type":" The text of the Query to deleteReturn Value","references":{"T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"QueryPanel Class","N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"M_Blueshirt_Core_Crm_Panels_QueryPanel_getXQuery","summary":"\r\n            Returns an Xpath for a Query in a results row on a QueryPanel.\r\n            \r\n            ","param":{"_":"The text of the Query.","name":"text"},"returns":"","params":{"syntax":{"C#":"public static string getXQuery(\n\tstring text\n)","VB":"Public Shared Function getXQuery ( \n\ttext As String\n) As String","C++":"public:\nstatic String^ getXQuery(\n\tString^ text\n)"},"arguments":{"text":{"type":"SystemString","description":"The text of the Query."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.Panels.QueryPanel.getXQuery(System.String)\"]"},"type":" The text of the Query.Return Value","references":{"T_Blueshirt_Core_Crm_Panels_QueryPanel.htm":"QueryPanel Class","N_Blueshirt_Core_Crm_Panels.htm":"Blueshirt.Core.Crm.Panels Namespace"}}},{"name":"M_Blueshirt_Core_BBIS_BBISHomePage_Logon","summary":"\r\n            Logon with the credentials specified in the config file.\r\n            "},{"name":"T_Blueshirt_Core_Crm_BBCRMHomePage","summary":"\r\n            A class for handling interactions and actions on the main BBCRM page.\r\n            \r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","#":"Blueshirt.Core.CrmBBCRMHomePage"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The BBCRMHomePage type exposes the following members.","constructors":{"BBCRMHomePage":{"value":"Initializes a new instance of the BBCRMHomePage class","description":"Initializes a new instance of the BBCRMHomePage class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"getXExtMenuTab":{"value":"","description":""},"getXExtTab":{"value":"\n            Returns an Xpath that will match a Tab either on the main tool bar or the expanded one.\n            \n            Any Functional Area link can be in two places; the main 'Tabs' menu and in the expanded menu. \n            This Xpath matches both elements.\n            It relies on only one side matching at a time, which is true for this method but might not be for all possible permutaions\n            of GUI manipulation, particularly changing window size. So the uniqueness of this Xpath depends on the sequence of GUI actions\n            that lead up to its use.\n            ","description":"\n            Returns an Xpath that will match a Tab either on the main tool bar or the expanded one.\n            \n            Any Functional Area link can be in two places; the main 'Tabs' menu and in the expanded menu. \n            This Xpath matches both elements.\n            It relies on only one side matching at a time, which is true for this method but might not be for all possible permutaions\n            of GUI manipulation, particularly changing window size. So the uniqueness of this Xpath depends on the sequence of GUI actions\n            that lead up to its use.\n            "},"getXTask":{"value":"\n            Format an xPath to find a task in the left explorer bar.\n            ","description":"\n            Format an xPath to find a task in the left explorer bar.\n            "},"Login":{"value":"\n            Logon with the credentials specified in the config file.\n            ","description":"\n            Logon with the credentials specified in the config file.\n            "},"LoginAs":{"value":"\n            Login as a specified user.\n            Pass credentials in the form \"username:password\".\n            \n            Authenticaiton requires that the target environment uses Blackbaud\n            CustomBasicAuthentication.\n            \n            ","description":"\n            Login as a specified user.\n            Pass credentials in the form \"username:password\".\n            \n            Authenticaiton requires that the target environment uses Blackbaud\n            CustomBasicAuthentication.\n            \n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"OpenAnalysisFA":{"value":"\n            Navigate to the 'Analysis' functional area.\n            ","description":"\n            Navigate to the 'Analysis' functional area.\n            "},"OpenConstituentsFA":{"value":"\n            Navigate to the 'Constituents' functional area.\n            ","description":"\n            Navigate to the 'Constituents' functional area.\n            "},"OpenEventsFA":{"value":"\n            Navigate to the 'Events' functional area.\n            ","description":"\n            Navigate to the 'Events' functional area.\n            "},"OpenFunctionalArea(String)":{"value":"\n            Open a Functional Area by caption.\n            ","description":"\n            Open a Functional Area by caption.\n            "},"OpenFunctionalArea(String, String)":{"value":"\n            Open a Functional Area by caption and wait for its header image to load.\n            ","description":"\n            Open a Functional Area by caption and wait for its header image to load.\n            "},"OpenFundraisingFA":{"value":"\n            Navigate to the 'Fundraising' functional area.\n            ","description":"\n            Navigate to the 'Fundraising' functional area.\n            "},"OpenMarketingAndCommunicationsFA":{"value":"\n            Navigate to the 'Marketing and Communications' functional area.\n            ","description":"\n            Navigate to the 'Marketing and Communications' functional area.\n            "},"OpenMembershipsFA":{"value":"\n            Navigate to the 'Memberships' functional area.\n            ","description":"\n            Navigate to the 'Memberships' functional area.\n            "},"OpenProspectsFA":{"value":"\n            Navigate to the 'Prospects' functional area.\n            ","description":"\n            Navigate to the 'Prospects' functional area.\n            "},"OpenRevenueFA":{"value":"\n            Navigate to the 'Revenue' functional area.\n            ","description":"\n            Navigate to the 'Revenue' functional area.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"fields":{"getXMenuMore":{"value":"\n            Returns an Xpath for the more button icon on the toolbar.\n            ","description":"\n            Returns an Xpath for the more button icon on the toolbar.\n            "},"getXWaitBar":{"value":"\n            Returns an Xpath for the WaitBar\n            ","description":"\n            Returns an Xpath for the WaitBar\n            "}},"properties":{"BaseUrl":{"value":"","description":""},"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"},"VirtualPath":{"value":"","description":""}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BBCRMHomePage_getXMenuMore","summary":"\r\n            Returns an Xpath for the more button icon on the toolbar.\r\n            ","params":{"syntax":{"C#":"public const string getXMenuMore","VB":"Public Const getXMenuMore As String","C++":"public:\nliteral String^ getXMenuMore"},"type":" String","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_getXTask","summary":"\r\n            Format an xPath to find a task in the left explorer bar.\r\n            ","param":{"_":"The caption of the task.","name":"caption"},"params":{"syntax":{"C#":"public static string getXTask(\n\tstring caption\n)","VB":"Public Shared Function getXTask ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXTask(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the task."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.BBCRMHomePage.getXTask(System.String)\"]"},"type":" The caption of the task.Return Value","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_getXExtTab","summary":"\r\n            Returns an Xpath that will match a Tab either on the main tool bar or the expanded one.\r\n            \r\n            Any Functional Area link can be in two places; the main 'Tabs' menu and in the expanded menu. \r\n            This Xpath matches both elements.\r\n            It relies on only one side matching at a time, which is true for this method but might not be for all possible permutaions\r\n            of GUI manipulation, particularly changing window size. So the uniqueness of this Xpath depends on the sequence of GUI actions\r\n            that lead up to its use.\r\n            ","param":{"_":"The caption of the tab.","name":"caption"},"params":{"syntax":{"C#":"public static string getXExtTab(\n\tstring caption\n)","VB":"Public Shared Function getXExtTab ( \n\tcaption As String\n) As String","C++":"public:\nstatic String^ getXExtTab(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption of the tab."}},"return_val":{"type":" String","description":"[Missing <returns> documentation for \"M:Blueshirt.Core.Crm.BBCRMHomePage.getXExtTab(System.String)\"]"},"type":" The caption of the tab.Return Value","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"F_Blueshirt_Core_Crm_BBCRMHomePage_getXWaitBar","summary":"\r\n            Returns an Xpath for the WaitBar\r\n            ","params":{"syntax":{"C#":"public static string getXWaitBar","VB":"Public Shared getXWaitBar As String","C++":"public:\nstatic String^ getXWaitBar"},"type":" String","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenConstituentsFA","summary":"\r\n            Navigate to the 'Constituents' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenConstituentsFA()","VB":"Public Shared Sub OpenConstituentsFA","C++":"public:\nstatic void OpenConstituentsFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFundraisingFA","summary":"\r\n            Navigate to the 'Fundraising' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenFundraisingFA()","VB":"Public Shared Sub OpenFundraisingFA","C++":"public:\nstatic void OpenFundraisingFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenRevenueFA","summary":"\r\n            Navigate to the 'Revenue' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenRevenueFA()","VB":"Public Shared Sub OpenRevenueFA","C++":"public:\nstatic void OpenRevenueFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenEventsFA","summary":"\r\n            Navigate to the 'Events' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenEventsFA()","VB":"Public Shared Sub OpenEventsFA","C++":"public:\nstatic void OpenEventsFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenProspectsFA","summary":"\r\n            Navigate to the 'Prospects' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenProspectsFA()","VB":"Public Shared Sub OpenProspectsFA","C++":"public:\nstatic void OpenProspectsFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenAnalysisFA","summary":"\r\n            Navigate to the 'Analysis' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenAnalysisFA()","VB":"Public Shared Sub OpenAnalysisFA","C++":"public:\nstatic void OpenAnalysisFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMembershipsFA","summary":"\r\n            Navigate to the 'Memberships' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenMembershipsFA()","VB":"Public Shared Sub OpenMembershipsFA","C++":"public:\nstatic void OpenMembershipsFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenMarketingAndCommunicationsFA","summary":"\r\n            Navigate to the 'Marketing and Communications' functional area.\r\n            ","params":{"syntax":{"C#":"public static void OpenMarketingAndCommunicationsFA()","VB":"Public Shared Sub OpenMarketingAndCommunicationsFA","C++":"public:\nstatic void OpenMarketingAndCommunicationsFA()"},"references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea","summary":"\r\n            Open a Functional Area by caption and wait for its header image to load.\r\n            ","param":[{"_":"The caption(name) of the Functional Area to open.","name":"caption"},{"_":"All or part of the image name that the desired functional area displays in the header.","name":"imageName"}],"params":{"syntax":{"C#":"public static void OpenFunctionalArea(\n\tstring caption\n)","VB":"Public Shared Sub OpenFunctionalArea ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenFunctionalArea(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption(name) of the Functional Area to open."}},"type":" The caption(name) of the Functional Area to open.","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","Overload_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea.htm":"OpenFunctionalArea Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea","summary":"\r\n            Open a Functional Area by caption.\r\n            ","param":{"_":"The caption(name) of the Functional Area to open.","name":"caption"},"params":{"syntax":{"C#":"public static void OpenFunctionalArea(\n\tstring caption\n)","VB":"Public Shared Sub OpenFunctionalArea ( \n\tcaption As String\n)","C++":"public:\nstatic void OpenFunctionalArea(\n\tString^ caption\n)"},"arguments":{"caption":{"type":"SystemString","description":"The caption(name) of the Functional Area to open."}},"type":" The caption(name) of the Functional Area to open.","references":{"T_Blueshirt_Core_Crm_BBCRMHomePage.htm":"BBCRMHomePage Class","Overload_Blueshirt_Core_Crm_BBCRMHomePage_OpenFunctionalArea.htm":"OpenFunctionalArea Overload","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_BBCRMHomePage_Logon","summary":"\r\n            Logon with the credentials specified in the config file.\r\n            "},{"name":"T_Blueshirt_Core_Crm_ReceiptsPanel","summary":"\r\n            Class to handle interactions for the 'Receipts' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmReceiptsPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The ReceiptsPanel type exposes the following members.","constructors":{"ReceiptsPanel":{"value":"Initializes a new instance of the ReceiptsPanel class","description":"Initializes a new instance of the ReceiptsPanel class"}},"methods":{"AddReceipt":{"value":"\n            Add a receipt process.\n            ","description":"\n            Add a receipt process.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"RunReceiptProcess":{"value":"\n            Select a receipt process and start it.\n            ","description":"\n            Select a receipt process and start it.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ReceiptsPanel_AddReceipt","summary":"\r\n            Add a receipt process.\r\n            ","param":{"_":"Mapping of the field captions to their desired values.","name":"receipt"},"params":{"syntax":{"C#":"public static void AddReceipt(\n\tTableRow receipt\n)","VB":"Public Shared Sub AddReceipt ( \n\treceipt As TableRow\n)","C++":"public:\nstatic void AddReceipt(\n\tTableRow^ receipt\n)"},"arguments":{"receipt":{"type":"TableRow","description":"Mapping of the field captions to their desired values."}},"type":" TableRowMapping of the field captions to their desired values.","references":{"T_Blueshirt_Core_Crm_ReceiptsPanel.htm":"ReceiptsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_ReceiptsPanel_RunReceiptProcess","summary":"\r\n            Select a receipt process and start it.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"receiptProcess"},"params":{"syntax":{"C#":"public static void RunReceiptProcess(\n\tTableRow receiptProcess\n)","VB":"Public Shared Sub RunReceiptProcess ( \n\treceiptProcess As TableRow\n)","C++":"public:\nstatic void RunReceiptProcess(\n\tTableRow^ receiptProcess\n)"},"arguments":{"receiptProcess":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" TableRowMapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_ReceiptsPanel.htm":"ReceiptsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_RecurringGiftPanel","summary":"\r\n            Class to handle interactions for the 'Recurring Gift' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmRecurringGiftPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The RecurringGiftPanel type exposes the following members.","constructors":{"RecurringGiftPanel":{"value":"Initializes a new instance of the RecurringGiftPanel class","description":"Initializes a new instance of the RecurringGiftPanel class"}},"methods":{"DesignationExists":{"value":"\n            Check if a designation exists for the recurring gift.\n            ","description":"\n            Check if a designation exists for the recurring gift.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RecurringGiftPanel_DesignationExists","summary":"\r\n            Check if a designation exists for the recurring gift.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"designation"},"returns":"True if the designation exists, false otherwise.","params":{"syntax":{"C#":"public static bool DesignationExists(\n\tTableRow designation\n)","VB":"Public Shared Function DesignationExists ( \n\tdesignation As TableRow\n) As Boolean","C++":"public:\nstatic bool DesignationExists(\n\tTableRow^ designation\n)"},"arguments":{"designation":{"type":"TableRow","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the designation exists, false otherwise."},"type":" TableRowMapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_RecurringGiftPanel.htm":"RecurringGiftPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_RegistrantPanel","summary":"\r\n            Class to handle interactions for the 'Event Registrant' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmRegistrantPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The RegistrantPanel type exposes the following members.","constructors":{"RegistrantPanel":{"value":"Initializes a new instance of the RegistrantPanel class","description":"Initializes a new instance of the RegistrantPanel class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsEvent":{"value":"\n            Check the name of the event the registrant is registered for.\n            ","description":"\n            Check the name of the event the registrant is registered for.\n            "},"IsNumGuests":{"value":"\n            Check the number of listed guests for the registrant.\n            ","description":"\n            Check the number of listed guests for the registrant.\n            "},"IsRegistrant":{"value":"\n            Check the name of the registrant on the panel.\n            ","description":"\n            Check the name of the registrant on the panel.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RegistrantPanel_IsRegistrant","summary":"\r\n            Check the name of the registrant on the panel.\r\n            ","param":{"_":"The name of the registrant to check for.","name":"registrant"},"returns":"True if the provided name is the name of the registrant.","params":{"syntax":{"C#":"public static bool IsRegistrant(\n\tstring registrant\n)","VB":"Public Shared Function IsRegistrant ( \n\tregistrant As String\n) As Boolean","C++":"public:\nstatic bool IsRegistrant(\n\tString^ registrant\n)"},"arguments":{"registrant":{"type":"SystemString","description":"The name of the registrant to check for."}},"return_val":{"type":" Boolean","description":"True if the provided name is the name of the registrant."},"type":" The name of the registrant to check for.Return Value","references":{"T_Blueshirt_Core_Crm_RegistrantPanel.htm":"RegistrantPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RegistrantPanel_IsEvent","summary":"\r\n            Check the name of the event the registrant is registered for.\r\n            ","param":{"_":"The name of the even to check for.","name":"eventName"},"returns":"True if the provided name is the name of the associated event.","params":{"syntax":{"C#":"public static bool IsEvent(\n\tstring eventName\n)","VB":"Public Shared Function IsEvent ( \n\teventName As String\n) As Boolean","C++":"public:\nstatic bool IsEvent(\n\tString^ eventName\n)"},"arguments":{"eventName":{"type":"SystemString","description":"The name of the even to check for."}},"return_val":{"type":" Boolean","description":"True if the provided name is the name of the associated event."},"type":" The name of the even to check for.Return Value","references":{"T_Blueshirt_Core_Crm_RegistrantPanel.htm":"RegistrantPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RegistrantPanel_IsNumGuests","summary":"\r\n            Check the number of listed guests for the registrant.\r\n            ","param":{"_":"The number of guests to check for.","name":"numGuests"},"returns":"True if the provided number is the listed number of guests.","params":{"syntax":{"C#":"public static bool IsNumGuests(\n\tint numGuests\n)","VB":"Public Shared Function IsNumGuests ( \n\tnumGuests As Integer\n) As Boolean","C++":"public:\nstatic bool IsNumGuests(\n\tint numGuests\n)"},"arguments":{"numGuests":{"type":"SystemInt32","description":"The number of guests to check for."}},"return_val":{"type":" Boolean","description":"True if the provided number is the listed number of guests."},"type":" The number of guests to check for.Return Value","references":{"T_Blueshirt_Core_Crm_RegistrantPanel.htm":"RegistrantPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_RevenueRecordPanel","summary":"\r\n            Class to handle interactions for the 'Revenue Record' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmRevenueRecordPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The RevenueRecordPanel type exposes the following members.","constructors":{"RevenueRecordPanel":{"value":"Initializes a new instance of the RevenueRecordPanel class","description":"Initializes a new instance of the RevenueRecordPanel class"}},"methods":{"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"IsAcknowledged":{"value":"\n            Check if a payment is marked as 'Acknowledged'\n            ","description":"\n            Check if a payment is marked as 'Acknowledged'\n            "},"IsReceipted":{"value":"\n            Check if a payment is marked as 'Receipted'\n            ","description":"\n            Check if a payment is marked as 'Receipted'\n            "},"IsSubtype":{"value":"\n            Check the subtype of the revenue record.\n            ","description":"\n            Check the subtype of the revenue record.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"PaymentExists":{"value":"\n            Check if a payment exists on the revenue record.\n            ","description":"\n            Check if a payment exists on the revenue record.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueRecordPanel_IsSubtype","summary":"\r\n            Check the subtype of the revenue record.\r\n            ","param":{"_":"The subtype to check for.","name":"subtype"},"returns":"True if the subtype is the expected value, false otherwise.","params":{"syntax":{"C#":"public static bool IsSubtype(\n\tstring subtype\n)","VB":"Public Shared Function IsSubtype ( \n\tsubtype As String\n) As Boolean","C++":"public:\nstatic bool IsSubtype(\n\tString^ subtype\n)"},"arguments":{"subtype":{"type":"SystemString","description":"The subtype to check for."}},"return_val":{"type":" Boolean","description":"True if the subtype is the expected value, false otherwise."},"type":" The subtype to check for.Return Value","references":{"T_Blueshirt_Core_Crm_RevenueRecordPanel.htm":"RevenueRecordPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueRecordPanel_PaymentExists","summary":"\r\n            Check if a payment exists on the revenue record.\r\n            ","param":{"_":"Mapping of the donation view form's captions (minus the colon) to a single donation's values.","name":"donation"},"returns":"True if the donation exists, false otherwise.","params":{"syntax":{"C#":"public static bool PaymentExists(\n\tTableRow donation\n)","VB":"Public Shared Function PaymentExists ( \n\tdonation As TableRow\n) As Boolean","C++":"public:\nstatic bool PaymentExists(\n\tTableRow^ donation\n)"},"arguments":{"donation":{"type":"TableRow","description":"Mapping of the donation view form&apos;s captions (minus the colon) to a single donation&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the donation exists, false otherwise."},"type":" TableRowMapping of the donation view form's captions (minus the colon) to a single donation's values.Return Value","references":{"T_Blueshirt_Core_Crm_RevenueRecordPanel.htm":"RevenueRecordPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueRecordPanel_IsReceipted","summary":"\r\n            Check if a payment is marked as 'Receipted'\r\n            ","returns":"True if the payment is 'Receipted', false otherwise.","params":{"syntax":{"C#":"public static bool IsReceipted()","VB":"Public Shared Function IsReceipted As Boolean","C++":"public:\nstatic bool IsReceipted()"},"return_val":{"type":" Boolean","description":"True if the payment is 'Receipted', false otherwise."},"type":" BooleanTrue if the payment is 'Receipted', false otherwise.","references":{"T_Blueshirt_Core_Crm_RevenueRecordPanel.htm":"RevenueRecordPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_RevenueRecordPanel_IsAcknowledged","summary":"\r\n            Check if a payment is marked as 'Acknowledged'\r\n            ","returns":"True if the payment is 'Acknowledged', false otherwise.","params":{"syntax":{"C#":"public static bool IsAcknowledged()","VB":"Public Shared Function IsAcknowledged As Boolean","C++":"public:\nstatic bool IsAcknowledged()"},"return_val":{"type":" Boolean","description":"True if the payment is 'Acknowledged', false otherwise."},"type":" BooleanTrue if the payment is 'Acknowledged', false otherwise.","references":{"T_Blueshirt_Core_Crm_RevenueRecordPanel.htm":"RevenueRecordPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_SegmentPanel","summary":"\r\n            Class to handle interactions for the 'Segment' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmSegmentPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The SegmentPanel type exposes the following members.","constructors":{"SegmentPanel":{"value":"Initializes a new instance of the SegmentPanel class","description":"Initializes a new instance of the SegmentPanel class"}},"methods":{"ActivatedMarketingEffortExists":{"value":"\n            Check if an activated marketing effort exists.\n            ","description":"\n            Check if an activated marketing effort exists.\n            "},"DeleteActivatedMarketingEffort":{"value":"\n            Delete an activated marketing effort using the specified template.\n            ","description":"\n            Delete an activated marketing effort using the specified template.\n            "},"DeleteSegment":{"value":"\n            Delete the current segment.\n            ","description":"\n            Delete the current segment.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentPanel_ActivatedMarketingEffortExists","summary":"\r\n            Check if an activated marketing effort exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"effort"},"returns":"True if the effort exists, false otherwise.","params":{"syntax":{"C#":"public static bool ActivatedMarketingEffortExists(\n\tIDictionary<string, string> effort\n)","VB":"Public Shared Function ActivatedMarketingEffortExists ( \n\teffort As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool ActivatedMarketingEffortExists(\n\tIDictionary<String^, String^>^ effort\n)"},"arguments":{"effort":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the effort exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_SegmentPanel.htm":"SegmentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentPanel_DeleteActivatedMarketingEffort","summary":"\r\n            Delete an activated marketing effort using the specified template.\r\n            ","param":{"_":"The name of the template that the effort uses.","name":"marketingTemplate"},"params":{"syntax":{"C#":"public static void DeleteActivatedMarketingEffort(\n\tstring marketingTemplate\n)","VB":"Public Shared Sub DeleteActivatedMarketingEffort ( \n\tmarketingTemplate As String\n)","C++":"public:\nstatic void DeleteActivatedMarketingEffort(\n\tString^ marketingTemplate\n)"},"arguments":{"marketingTemplate":{"type":"SystemString","description":"The name of the template that the effort uses."}},"type":" The name of the template that the effort uses.","references":{"T_Blueshirt_Core_Crm_SegmentPanel.htm":"SegmentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentPanel_DeleteSegment","summary":"\r\n            Delete the current segment.\r\n            ","params":{"syntax":{"C#":"public static void DeleteSegment()","VB":"Public Shared Sub DeleteSegment","C++":"public:\nstatic void DeleteSegment()"},"references":{"T_Blueshirt_Core_Crm_SegmentPanel.htm":"SegmentPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"T_Blueshirt_Core_Crm_SegmentsPanel","summary":"\r\n            Class to handle interactions for the 'Segments' panel.\r\n            ","params":{"inheritance":{"http://msdn2.microsoft.com/en-us/library/e5kfa45b":"SystemObject","T_Blueshirt_Core_Base_BaseComponent.htm":"Blueshirt.Core.BaseBaseComponent","T_Blueshirt_Core_Crm_Panel.htm":"Blueshirt.Core.CrmPanel","#":"Blueshirt.Core.CrmSegmentsPanel"},"namespace":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm"},"assembly":" Blueshirt.Core (in Blueshirt.Core.dll) Version: 1.0.647.3 (1.0.647.3)","lower_syntax_text":"The SegmentsPanel type exposes the following members.","constructors":{"SegmentsPanel":{"value":"Initializes a new instance of the SegmentsPanel class","description":"Initializes a new instance of the SegmentsPanel class"}},"methods":{"AddSegment":{"value":"\n            Start to add a segment of the specified type.\n            ","description":"\n            Start to add a segment of the specified type.\n            "},"DeleteSegment":{"value":"\n            Delete a segment.\n            ","description":"\n            Delete a segment.\n            "},"Equals":{"value":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)","description":"Determines whether the specified Object is equal to the current Object. (Inherited from Object.)"},"Finalize":{"value":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)","description":"Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection. (Inherited from Object.)"},"GetHashCode":{"value":"Serves as a hash function for a particular type.  (Inherited from Object.)","description":"Serves as a hash function for a particular type.  (Inherited from Object.)"},"GetType":{"value":"Gets the Type of the current instance. (Inherited from Object.)","description":"Gets the Type of the current instance. (Inherited from Object.)"},"GoToSegment":{"value":"\n            Navigate to the segment panel of a specified segment.\n            ","description":"\n            Navigate to the segment panel of a specified segment.\n            "},"MemberwiseClone":{"value":"Creates a shallow copy of the current Object. (Inherited from Object.)","description":"Creates a shallow copy of the current Object. (Inherited from Object.)"},"SegmentExists":{"value":"\n            Check if a segment exists.\n            ","description":"\n            Check if a segment exists.\n            "},"ToString":{"value":"Returns a string that represents the current object. (Inherited from Object.)","description":"Returns a string that represents the current object. (Inherited from Object.)"}},"properties":{"Title":{"value":" (Inherited from BaseComponent.)","description":" (Inherited from BaseComponent.)"}},"references":{"N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentsPanel_AddSegment","summary":"\r\n            Start to add a segment of the specified type.\r\n            ","param":{"_":"The type of segment to add.  Corresponds to the caption of Add menu items.","name":"segmentType"},"params":{"syntax":{"C#":"public static void AddSegment(\n\tstring segmentType\n)","VB":"Public Shared Sub AddSegment ( \n\tsegmentType As String\n)","C++":"public:\nstatic void AddSegment(\n\tString^ segmentType\n)"},"arguments":{"segmentType":{"type":"SystemString","description":"The type of segment to add.  Corresponds to the caption of Add menu items."}},"type":" The type of segment to add.  Corresponds to the caption of Add menu items.","references":{"T_Blueshirt_Core_Crm_SegmentsPanel.htm":"SegmentsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentsPanel_DeleteSegment","summary":"\r\n            Delete a segment.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"segment"},"params":{"syntax":{"C#":"public static void DeleteSegment(\n\tIDictionary<string, string> segment\n)","VB":"Public Shared Sub DeleteSegment ( \n\tsegment As IDictionary(Of String, String)\n)","C++":"public:\nstatic void DeleteSegment(\n\tIDictionary<String^, String^>^ segment\n)"},"arguments":{"segment":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_SegmentsPanel.htm":"SegmentsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentsPanel_SegmentExists","summary":"\r\n            Check if a segment exists.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"segment"},"returns":"True if the segment exists, false otherwise.","params":{"syntax":{"C#":"public static bool SegmentExists(\n\tIDictionary<string, string> segment\n)","VB":"Public Shared Function SegmentExists ( \n\tsegment As IDictionary(Of String, String)\n) As Boolean","C++":"public:\nstatic bool SegmentExists(\n\tIDictionary<String^, String^>^ segment\n)"},"arguments":{"segment":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"return_val":{"type":" Boolean","description":"True if the segment exists, false otherwise."},"type":" , Mapping of the column captions to a single row's values.Return Value","references":{"T_Blueshirt_Core_Crm_SegmentsPanel.htm":"SegmentsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}},{"name":"M_Blueshirt_Core_Crm_SegmentsPanel_GoToSegment","summary":"\r\n            Navigate to the segment panel of a specified segment.\r\n            ","param":{"_":"Mapping of the column captions to a single row's values.","name":"segment"},"params":{"syntax":{"C#":"public static void GoToSegment(\n\tIDictionary<string, string> segment\n)","VB":"Public Shared Sub GoToSegment ( \n\tsegment As IDictionary(Of String, String)\n)","C++":"public:\nstatic void GoToSegment(\n\tIDictionary<String^, String^>^ segment\n)"},"arguments":{"segment":{"type":"System.Collections.GenericIDictionaryStringString","description":"Mapping of the column captions to a single row&apos;s values."}},"type":" , Mapping of the column captions to a single row's values.","references":{"T_Blueshirt_Core_Crm_SegmentsPanel.htm":"SegmentsPanel Class","N_Blueshirt_Core_Crm.htm":"Blueshirt.Core.Crm Namespace"}}}]}}}